// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Onfido.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DocumentReportProperties
    {
        /// <summary>
        /// Initializes a new instance of the DocumentReportProperties class.
        /// </summary>
        public DocumentReportProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DocumentReportProperties class.
        /// </summary>
        public DocumentReportProperties(System.DateTime? dateOfBirth = default(System.DateTime?), System.DateTime? dateOfExpiry = default(System.DateTime?), IList<DocumentNumber> documentNumbers = default(IList<DocumentNumber>), string documentType = default(string), string firstName = default(string), string gender = default(string), string issuingCountry = default(string), string lastName = default(string), string nationality = default(string), string issuingState = default(string), System.DateTime? issuingDate = default(System.DateTime?), string categorisation = default(string), string mrzLine1 = default(string), string mrzLine2 = default(string), string mrzLine3 = default(string), string address = default(string), string placeOfBirth = default(string), string spouseName = default(string), string widowName = default(string), string aliasName = default(string), string issuingAuthority = default(string), string realIdCompliance = default(string), AddressLines addressLines = default(AddressLines), IList<Barcode> barcode = default(IList<Barcode>), Nfc nfc = default(Nfc), DriverLicenseInformation drivingLicenceInformation = default(DriverLicenseInformation), DocumentClassification documentClassification = default(DocumentClassification), DocumentExtractedData extractedData = default(DocumentExtractedData))
        {
            DateOfBirth = dateOfBirth;
            DateOfExpiry = dateOfExpiry;
            DocumentNumbers = documentNumbers;
            DocumentType = documentType;
            FirstName = firstName;
            Gender = gender;
            IssuingCountry = issuingCountry;
            LastName = lastName;
            Nationality = nationality;
            IssuingState = issuingState;
            IssuingDate = issuingDate;
            Categorisation = categorisation;
            MrzLine1 = mrzLine1;
            MrzLine2 = mrzLine2;
            MrzLine3 = mrzLine3;
            Address = address;
            PlaceOfBirth = placeOfBirth;
            SpouseName = spouseName;
            WidowName = widowName;
            AliasName = aliasName;
            IssuingAuthority = issuingAuthority;
            RealIdCompliance = realIdCompliance;
            AddressLines = addressLines;
            Barcode = barcode;
            Nfc = nfc;
            DrivingLicenceInformation = drivingLicenceInformation;
            DocumentClassification = documentClassification;
            ExtractedData = extractedData;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "date_of_birth")]
        public System.DateTime? DateOfBirth { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "date_of_expiry")]
        public System.DateTime? DateOfExpiry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "document_numbers")]
        public IList<DocumentNumber> DocumentNumbers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "document_type")]
        public string DocumentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gender")]
        public string Gender { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "issuing_country")]
        public string IssuingCountry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_name")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nationality")]
        public string Nationality { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "issuing_state")]
        public string IssuingState { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "issuing_date")]
        public System.DateTime? IssuingDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "categorisation")]
        public string Categorisation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mrz_line1")]
        public string MrzLine1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mrz_line2")]
        public string MrzLine2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mrz_line3")]
        public string MrzLine3 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address")]
        public string Address { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "place_of_birth")]
        public string PlaceOfBirth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "spouse_name")]
        public string SpouseName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "widow_name")]
        public string WidowName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alias_name")]
        public string AliasName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "issuing_authority")]
        public string IssuingAuthority { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "real_id_compliance")]
        public string RealIdCompliance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "address_lines")]
        public AddressLines AddressLines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "barcode")]
        public IList<Barcode> Barcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nfc")]
        public Nfc Nfc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "driving_licence_information")]
        public DriverLicenseInformation DrivingLicenceInformation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "document_classification")]
        public DocumentClassification DocumentClassification { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extracted_data")]
        public DocumentExtractedData ExtractedData { get; set; }

    }
}
