// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Onfido.Client.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ReportName.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ReportName
    {
        [EnumMember(Value = "document")]
        Document,
        [EnumMember(Value = "document_with_address_information")]
        DocumentWithAddressInformation,
        [EnumMember(Value = "document_with_driving_licence_information")]
        DocumentWithDrivingLicenceInformation,
        [EnumMember(Value = "facial_similarity_photo")]
        FacialSimilarityPhoto,
        [EnumMember(Value = "facial_similarity_photo_fully_auto")]
        FacialSimilarityPhotoFullyAuto,
        [EnumMember(Value = "facial_similarity_video")]
        FacialSimilarityVideo,
        [EnumMember(Value = "known_faces")]
        KnownFaces,
        [EnumMember(Value = "identity_enhanced")]
        IdentityEnhanced,
        [EnumMember(Value = "watchlist_enhanced")]
        WatchlistEnhanced,
        [EnumMember(Value = "watchlist_standard")]
        WatchlistStandard,
        [EnumMember(Value = "watchlist_peps_only")]
        WatchlistPepsOnly,
        [EnumMember(Value = "watchlist_sanctions_only")]
        WatchlistSanctionsOnly,
        [EnumMember(Value = "proof_of_address")]
        ProofOfAddress,
        [EnumMember(Value = "right_to_work")]
        RightToWork
    }
    internal static class ReportNameEnumExtension
    {
        internal static string ToSerializedValue(this ReportName? value)
        {
            return value == null ? null : ((ReportName)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ReportName value)
        {
            switch( value )
            {
                case ReportName.Document:
                    return "document";
                case ReportName.DocumentWithAddressInformation:
                    return "document_with_address_information";
                case ReportName.DocumentWithDrivingLicenceInformation:
                    return "document_with_driving_licence_information";
                case ReportName.FacialSimilarityPhoto:
                    return "facial_similarity_photo";
                case ReportName.FacialSimilarityPhotoFullyAuto:
                    return "facial_similarity_photo_fully_auto";
                case ReportName.FacialSimilarityVideo:
                    return "facial_similarity_video";
                case ReportName.KnownFaces:
                    return "known_faces";
                case ReportName.IdentityEnhanced:
                    return "identity_enhanced";
                case ReportName.WatchlistEnhanced:
                    return "watchlist_enhanced";
                case ReportName.WatchlistStandard:
                    return "watchlist_standard";
                case ReportName.WatchlistPepsOnly:
                    return "watchlist_peps_only";
                case ReportName.WatchlistSanctionsOnly:
                    return "watchlist_sanctions_only";
                case ReportName.ProofOfAddress:
                    return "proof_of_address";
                case ReportName.RightToWork:
                    return "right_to_work";
            }
            return null;
        }

        internal static ReportName? ParseReportName(this string value)
        {
            switch( value )
            {
                case "document":
                    return ReportName.Document;
                case "document_with_address_information":
                    return ReportName.DocumentWithAddressInformation;
                case "document_with_driving_licence_information":
                    return ReportName.DocumentWithDrivingLicenceInformation;
                case "facial_similarity_photo":
                    return ReportName.FacialSimilarityPhoto;
                case "facial_similarity_photo_fully_auto":
                    return ReportName.FacialSimilarityPhotoFullyAuto;
                case "facial_similarity_video":
                    return ReportName.FacialSimilarityVideo;
                case "known_faces":
                    return ReportName.KnownFaces;
                case "identity_enhanced":
                    return ReportName.IdentityEnhanced;
                case "watchlist_enhanced":
                    return ReportName.WatchlistEnhanced;
                case "watchlist_standard":
                    return ReportName.WatchlistStandard;
                case "watchlist_peps_only":
                    return ReportName.WatchlistPepsOnly;
                case "watchlist_sanctions_only":
                    return ReportName.WatchlistSanctionsOnly;
                case "proof_of_address":
                    return ReportName.ProofOfAddress;
                case "right_to_work":
                    return ReportName.RightToWork;
            }
            return null;
        }
    }
}
