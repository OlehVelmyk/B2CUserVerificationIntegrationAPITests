// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Onfido.Client.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Returns the information contained in the submitted document.
    /// </summary>
    public partial class RightToWorkReportProperties
    {
        /// <summary>
        /// Initializes a new instance of the RightToWorkReportProperties
        /// class.
        /// </summary>
        public RightToWorkReportProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RightToWorkReportProperties
        /// class.
        /// </summary>
        public RightToWorkReportProperties(string nationality = default(string), string lastName = default(string), string issuingCountry = default(string), string gender = default(string), string firstName = default(string), string documentType = default(string), IList<DocumentNumber> documentNumbers = default(IList<DocumentNumber>), System.DateTime? dateOfExpiry = default(System.DateTime?), System.DateTime? dateOfBirth = default(System.DateTime?), string documentVersion = default(string), System.DateTime? issuingDate = default(System.DateTime?), string mrzLine1 = default(string), string mrzLine2 = default(string), string placeOfBirth = default(string), string issuingAuthority = default(string))
        {
            Nationality = nationality;
            LastName = lastName;
            IssuingCountry = issuingCountry;
            Gender = gender;
            FirstName = firstName;
            DocumentType = documentType;
            DocumentNumbers = documentNumbers;
            DateOfExpiry = dateOfExpiry;
            DateOfBirth = dateOfBirth;
            DocumentVersion = documentVersion;
            IssuingDate = issuingDate;
            MrzLine1 = mrzLine1;
            MrzLine2 = mrzLine2;
            PlaceOfBirth = placeOfBirth;
            IssuingAuthority = issuingAuthority;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nationality")]
        public string Nationality { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_name")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "issuing_country")]
        public string IssuingCountry { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gender")]
        public string Gender { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "document_type")]
        public string DocumentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "document_numbers")]
        public IList<DocumentNumber> DocumentNumbers { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "date_of_expiry")]
        public System.DateTime? DateOfExpiry { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "date_of_birth")]
        public System.DateTime? DateOfBirth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "document_version")]
        public string DocumentVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "issuing_date")]
        public System.DateTime? IssuingDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mrz_line1")]
        public string MrzLine1 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mrz_line2")]
        public string MrzLine2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "place_of_birth")]
        public string PlaceOfBirth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "issuing_authority")]
        public string IssuingAuthority { get; set; }

    }
}
