// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Onfido.Client.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for ReportResult.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(ReportResultConverter))]
    public struct ReportResult : System.IEquatable<ReportResult>
    {
        private ReportResult(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// If all underlying verifications pass, the overall result will be
        /// clear.
        /// </summary>
        public static readonly ReportResult Clear = "clear";

        /// <summary>
        /// If the report has returned information that needs to be evaluated,
        /// the overall result will be consider.
        /// </summary>
        public static readonly ReportResult Consider = "consider";

        /// <summary>
        /// For Identity Enhanced reports only.
        /// </summary>
        public static readonly ReportResult Unidentified = "unidentified";


        /// <summary>
        /// Underlying value of enum ReportResult
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for ReportResult
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type ReportResult
        /// </summary>
        public bool Equals(ReportResult e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to ReportResult
        /// </summary>
        public static implicit operator ReportResult(string value)
        {
            return new ReportResult(value);
        }

        /// <summary>
        /// Implicit operator to convert ReportResult to string
        /// </summary>
        public static implicit operator string(ReportResult e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum ReportResult
        /// </summary>
        public static bool operator == (ReportResult e1, ReportResult e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum ReportResult
        /// </summary>
        public static bool operator != (ReportResult e1, ReportResult e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for ReportResult
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is ReportResult && Equals((ReportResult)obj);
        }

        /// <summary>
        /// Returns for hashCode ReportResult
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
