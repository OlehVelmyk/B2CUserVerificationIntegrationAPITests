// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Onfido.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ApplicantAddress
    {
        /// <summary>
        /// Initializes a new instance of the ApplicantAddress class.
        /// </summary>
        public ApplicantAddress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicantAddress class.
        /// </summary>
        /// <param name="flatNumber">The flat number of this address</param>
        /// <param name="buildingNumber">The building number of this
        /// address</param>
        /// <param name="buildingName">The building name of this
        /// address</param>
        /// <param name="street">The street of the applicant’s address</param>
        /// <param name="subStreet">The sub-street of the applicant’s
        /// address</param>
        /// <param name="town">The town of the applicant’s address</param>
        /// <param name="postcode">The postcode or ZIP of the applicant’s
        /// address</param>
        /// <param name="country">The 3 character ISO country code of this
        /// address. For example, GBR is the country code for the United
        /// Kingdom</param>
        /// <param name="state">The address state. US states must use the USPS
        /// abbreviation (see also ISO 3166-2:US), for example AK, CA, or
        /// TX.</param>
        /// <param name="line1">Line 1 of the applicant's address</param>
        /// <param name="line2">Line 2 of the applicant's address</param>
        /// <param name="line3">Line 3 of the applicant's address</param>
        public ApplicantAddress(string flatNumber = default(string), string buildingNumber = default(string), string buildingName = default(string), string street = default(string), string subStreet = default(string), string town = default(string), string postcode = default(string), string country = default(string), string state = default(string), string line1 = default(string), string line2 = default(string), string line3 = default(string))
        {
            FlatNumber = flatNumber;
            BuildingNumber = buildingNumber;
            BuildingName = buildingName;
            Street = street;
            SubStreet = subStreet;
            Town = town;
            Postcode = postcode;
            Country = country;
            State = state;
            Line1 = line1;
            Line2 = line2;
            Line3 = line3;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the flat number of this address
        /// </summary>
        [JsonProperty(PropertyName = "flat_number")]
        public string FlatNumber { get; set; }

        /// <summary>
        /// Gets or sets the building number of this address
        /// </summary>
        [JsonProperty(PropertyName = "building_number")]
        public string BuildingNumber { get; set; }

        /// <summary>
        /// Gets or sets the building name of this address
        /// </summary>
        [JsonProperty(PropertyName = "building_name")]
        public string BuildingName { get; set; }

        /// <summary>
        /// Gets or sets the street of the applicant’s address
        /// </summary>
        [JsonProperty(PropertyName = "street")]
        public string Street { get; set; }

        /// <summary>
        /// Gets or sets the sub-street of the applicant’s address
        /// </summary>
        [JsonProperty(PropertyName = "sub_street")]
        public string SubStreet { get; set; }

        /// <summary>
        /// Gets or sets the town of the applicant’s address
        /// </summary>
        [JsonProperty(PropertyName = "town")]
        public string Town { get; set; }

        /// <summary>
        /// Gets or sets the postcode or ZIP of the applicant’s address
        /// </summary>
        [JsonProperty(PropertyName = "postcode")]
        public string Postcode { get; set; }

        /// <summary>
        /// Gets or sets the 3 character ISO country code of this address. For
        /// example, GBR is the country code for the United Kingdom
        /// </summary>
        [JsonProperty(PropertyName = "country")]
        public string Country { get; set; }

        /// <summary>
        /// Gets or sets the address state. US states must use the USPS
        /// abbreviation (see also ISO 3166-2:US), for example AK, CA, or TX.
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets line 1 of the applicant's address
        /// </summary>
        [JsonProperty(PropertyName = "line1")]
        public string Line1 { get; set; }

        /// <summary>
        /// Gets or sets line 2 of the applicant's address
        /// </summary>
        [JsonProperty(PropertyName = "line2")]
        public string Line2 { get; set; }

        /// <summary>
        /// Gets or sets line 3 of the applicant's address
        /// </summary>
        [JsonProperty(PropertyName = "line3")]
        public string Line3 { get; set; }

    }
}
