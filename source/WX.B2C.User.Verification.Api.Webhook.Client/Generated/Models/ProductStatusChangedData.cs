// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Webhook.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ProductStatusChangedData : Data
    {
        /// <summary>
        /// Initializes a new instance of the ProductStatusChangedData class.
        /// </summary>
        public ProductStatusChangedData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProductStatusChangedData class.
        /// </summary>
        public ProductStatusChangedData(string profileId, string applicationId, string newStatus, ProductDto product, string customerRef = default(string))
            : base(profileId, customerRef)
        {
            ApplicationId = applicationId;
            NewStatus = newStatus;
            Product = product;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "application_id")]
        public string ApplicationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "new_status")]
        public string NewStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "product")]
        public ProductDto Product { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (ApplicationId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ApplicationId");
            }
            if (NewStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "NewStatus");
            }
            if (Product == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Product");
            }
            if (Product != null)
            {
                Product.Validate();
            }
        }
    }
}
