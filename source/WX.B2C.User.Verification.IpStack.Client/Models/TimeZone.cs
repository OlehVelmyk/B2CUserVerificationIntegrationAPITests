// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.IpStack.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An object containing timezone-related data.
    /// </summary>
    public partial class TimeZone
    {
        /// <summary>
        /// Initializes a new instance of the TimeZone class.
        /// </summary>
        public TimeZone()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TimeZone class.
        /// </summary>
        /// <param name="id">ID of the time zone associated with the IP. (e.g.
        /// America/Los_Angeles for PST).</param>
        /// <param name="currentTime">Current date and time in the location
        /// associated with the IP. (e.g. 2018-03-29T22:31:27-07:00).</param>
        /// <param name="gmtOffset">GMT offset of the given time zone in
        /// seconds (e.g. -25200 for PST's -7h GMT offset).</param>
        /// <param name="code">Universal code of the given time zone.
        /// (https://www.timeanddate.com/time/zones/).</param>
        /// <param name="isDaylightSaving">True or false depending on whether
        /// or not the given time zone is considered daylight saving
        /// time.</param>
        public TimeZone(string id = default(string), System.DateTime currentTime = default(System.DateTime), int gmtOffset = default(int), string code = default(string), bool isDaylightSaving = default(bool))
        {
            Id = id;
            CurrentTime = currentTime;
            GmtOffset = gmtOffset;
            Code = code;
            IsDaylightSaving = isDaylightSaving;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets ID of the time zone associated with the IP. (e.g.
        /// America/Los_Angeles for PST).
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; private set; }

        /// <summary>
        /// Gets current date and time in the location associated with the IP.
        /// (e.g. 2018-03-29T22:31:27-07:00).
        /// </summary>
        [JsonProperty(PropertyName = "current_time")]
        public System.DateTime CurrentTime { get; private set; }

        /// <summary>
        /// Gets GMT offset of the given time zone in seconds (e.g. -25200 for
        /// PST's -7h GMT offset).
        /// </summary>
        [JsonProperty(PropertyName = "gmt_offset")]
        public int GmtOffset { get; private set; }

        /// <summary>
        /// Gets universal code of the given time zone.
        /// (https://www.timeanddate.com/time/zones/).
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; private set; }

        /// <summary>
        /// Gets true or false depending on whether or not the given time zone
        /// is considered daylight saving time.
        /// </summary>
        [JsonProperty(PropertyName = "is_daylight_saving")]
        public bool IsDaylightSaving { get; private set; }

    }
}
