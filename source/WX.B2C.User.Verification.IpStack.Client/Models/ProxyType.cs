// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.IpStack.Client.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for ProxyType.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(ProxyTypeConverter))]
    public struct ProxyType : System.IEquatable<ProxyType>
    {
        private ProxyType(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        /// <summary>
        /// CGI Proxy
        /// </summary>
        public static readonly ProxyType Cgi = "cgi";

        /// <summary>
        /// Web Proxy
        /// </summary>
        public static readonly ProxyType Web = "web";

        /// <summary>
        /// VPN Proxy
        /// </summary>
        public static readonly ProxyType Vpn = "vpn";


        /// <summary>
        /// Underlying value of enum ProxyType
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for ProxyType
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type ProxyType
        /// </summary>
        public bool Equals(ProxyType e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to ProxyType
        /// </summary>
        public static implicit operator ProxyType(string value)
        {
            return new ProxyType(value);
        }

        /// <summary>
        /// Implicit operator to convert ProxyType to string
        /// </summary>
        public static implicit operator string(ProxyType e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum ProxyType
        /// </summary>
        public static bool operator == (ProxyType e1, ProxyType e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum ProxyType
        /// </summary>
        public static bool operator != (ProxyType e1, ProxyType e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for ProxyType
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is ProxyType && Equals((ProxyType)obj);
        }

        /// <summary>
        /// Returns for hashCode ProxyType
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
