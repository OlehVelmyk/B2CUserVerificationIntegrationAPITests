// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.IpStack.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// An object containing currency-related data.
    /// </summary>
    public partial class Currency
    {
        /// <summary>
        /// Initializes a new instance of the Currency class.
        /// </summary>
        public Currency()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Currency class.
        /// </summary>
        /// <param name="code">3-letter code of the main currency associated
        /// with the IP. Example: USD -
        /// https://www.iban.com/currency-codes.html</param>
        /// <param name="name">Name of the given currency.</param>
        /// <param name="plural">Plural name of the given currency.</param>
        /// <param name="symbol">Symbol letter of the given currency.</param>
        /// <param name="symbolNative">Native symbol letter of the given
        /// currency.</param>
        public Currency(string code = default(string), string name = default(string), string plural = default(string), string symbol = default(string), string symbolNative = default(string))
        {
            Code = code;
            Name = name;
            Plural = plural;
            Symbol = symbol;
            SymbolNative = symbolNative;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets 3-letter code of the main currency associated with the IP.
        /// Example: USD - https://www.iban.com/currency-codes.html
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; private set; }

        /// <summary>
        /// Gets name of the given currency.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; private set; }

        /// <summary>
        /// Gets plural name of the given currency.
        /// </summary>
        [JsonProperty(PropertyName = "plural")]
        public string Plural { get; private set; }

        /// <summary>
        /// Gets symbol letter of the given currency.
        /// </summary>
        [JsonProperty(PropertyName = "symbol")]
        public string Symbol { get; private set; }

        /// <summary>
        /// Gets native symbol letter of the given currency.
        /// </summary>
        [JsonProperty(PropertyName = "symbol_native")]
        public string SymbolNative { get; private set; }

    }
}
