// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// FraudDetection
    /// </summary>
    /// <remarks>
    /// Fraud detection check results
    /// </remarks>
    public partial class FraudDetection
    {
        /// <summary>
        /// Initializes a new instance of the FraudDetection class.
        /// </summary>
        public FraudDetection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FraudDetection class.
        /// </summary>
        /// <param name="databaseType">Possible values include: 'CIFAS'</param>
        /// <param name="searchReference">Reference supplied by the check
        /// provider</param>
        /// <param name="matchCount">Number of matches in the database</param>
        /// <param name="matches">The found fraud matches</param>
        public FraudDetection(string databaseType = default(string), string searchReference = default(string), int? matchCount = default(int?), IList<FraudCase> matches = default(IList<FraudCase>))
        {
            DatabaseType = databaseType;
            SearchReference = searchReference;
            MatchCount = matchCount;
            Matches = matches;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'CIFAS'
        /// </summary>
        [JsonProperty(PropertyName = "database_type")]
        public string DatabaseType { get; set; }

        /// <summary>
        /// Gets or sets reference supplied by the check provider
        /// </summary>
        [JsonProperty(PropertyName = "search_reference")]
        public string SearchReference { get; set; }

        /// <summary>
        /// Gets or sets number of matches in the database
        /// </summary>
        [JsonProperty(PropertyName = "match_count")]
        public int? MatchCount { get; set; }

        /// <summary>
        /// Gets or sets the found fraud matches
        /// </summary>
        [JsonProperty(PropertyName = "matches")]
        public IList<FraudCase> Matches { get; set; }

    }
}
