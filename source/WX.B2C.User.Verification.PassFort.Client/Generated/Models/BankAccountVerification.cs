// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// BankAccountVerification
    /// </summary>
    /// <remarks>
    /// Bank account verification
    /// </remarks>
    public partial class BankAccountVerification
    {
        /// <summary>
        /// Initializes a new instance of the BankAccountVerification class.
        /// </summary>
        public BankAccountVerification()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BankAccountVerification class.
        /// </summary>
        /// <param name="match">If the bank was verified and is a match</param>
        /// <param name="comments">Comments</param>
        public BankAccountVerification(string performedOn, bool match, BankAccount bankAccount, IList<BankAccountComment> comments)
        {
            PerformedOn = performedOn;
            Match = match;
            BankAccount = bankAccount;
            Comments = comments;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "performed_on")]
        public string PerformedOn { get; set; }

        /// <summary>
        /// Gets or sets if the bank was verified and is a match
        /// </summary>
        [JsonProperty(PropertyName = "match")]
        public bool Match { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "bank_account")]
        public BankAccount BankAccount { get; set; }

        /// <summary>
        /// Gets or sets comments
        /// </summary>
        [JsonProperty(PropertyName = "comments")]
        public IList<BankAccountComment> Comments { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (PerformedOn == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "PerformedOn");
            }
            if (BankAccount == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BankAccount");
            }
            if (Comments == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Comments");
            }
            if (BankAccount != null)
            {
                BankAccount.Validate();
            }
            if (Comments != null)
            {
                foreach (var element in Comments)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
