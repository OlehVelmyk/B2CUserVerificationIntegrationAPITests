// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// ProductResource
    /// </summary>
    /// <remarks>
    /// A product definition
    /// </remarks>
    public partial class ProductResource
    {
        /// <summary>
        /// Initializes a new instance of the ProductResource class.
        /// </summary>
        public ProductResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProductResource class.
        /// </summary>
        /// <param name="alias">The alias of the product</param>
        /// <param name="name">The name of the product</param>
        /// <param name="automaticallyApply">Whether new profiles should
        /// automatically apply for this product</param>
        /// <param name="automaticallyApprove">Whether applications for this
        /// product are automatically approved when all tasks are
        /// completed</param>
        /// <param name="isDeleted">Whether this product has been
        /// deleted</param>
        /// <param name="isDeletable">Whether this product application is
        /// deletable</param>
        /// <param name="riskModels">The risk models which will be used to
        /// calculate risk scores for applications to this product</param>
        public ProductResource(string id = default(string), string alias = default(string), string name = default(string), bool? automaticallyApply = default(bool?), bool? automaticallyApprove = default(bool?), bool? isDeleted = default(bool?), bool? isDeletable = default(bool?), ProductResourceRiskModels riskModels = default(ProductResourceRiskModels))
        {
            Id = id;
            Alias = alias;
            Name = name;
            AutomaticallyApply = automaticallyApply;
            AutomaticallyApprove = automaticallyApprove;
            IsDeleted = isDeleted;
            IsDeletable = isDeletable;
            RiskModels = riskModels;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the alias of the product
        /// </summary>
        [JsonProperty(PropertyName = "alias")]
        public string Alias { get; set; }

        /// <summary>
        /// Gets or sets the name of the product
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets whether new profiles should automatically apply for
        /// this product
        /// </summary>
        [JsonProperty(PropertyName = "automatically_apply")]
        public bool? AutomaticallyApply { get; set; }

        /// <summary>
        /// Gets or sets whether applications for this product are
        /// automatically approved when all tasks are completed
        /// </summary>
        [JsonProperty(PropertyName = "automatically_approve")]
        public bool? AutomaticallyApprove { get; set; }

        /// <summary>
        /// Gets or sets whether this product has been deleted
        /// </summary>
        [JsonProperty(PropertyName = "is_deleted")]
        public bool? IsDeleted { get; set; }

        /// <summary>
        /// Gets or sets whether this product application is deletable
        /// </summary>
        [JsonProperty(PropertyName = "is_deletable")]
        public bool? IsDeletable { get; set; }

        /// <summary>
        /// Gets or sets the risk models which will be used to calculate risk
        /// scores for applications to this product
        /// </summary>
        [JsonProperty(PropertyName = "risk_models")]
        public ProductResourceRiskModels RiskModels { get; set; }

    }
}
