// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Coordinates
    /// </summary>
    /// <remarks>
    /// Geo Coordinates
    /// </remarks>
    public partial class Coordinates
    {
        /// <summary>
        /// Initializes a new instance of the Coordinates class.
        /// </summary>
        public Coordinates()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Coordinates class.
        /// </summary>
        /// <param name="longitude">Longitude of coordinate (-180.0 to
        /// 80.0)</param>
        /// <param name="latitude">Latitude of coordinate (-90.0 to
        /// 90.0)</param>
        /// <param name="name">A label for the coordinate</param>
        public Coordinates(double longitude, double latitude, string name = default(string))
        {
            Longitude = longitude;
            Latitude = latitude;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets longitude of coordinate (-180.0 to 80.0)
        /// </summary>
        [JsonProperty(PropertyName = "longitude")]
        public double Longitude { get; set; }

        /// <summary>
        /// Gets or sets latitude of coordinate (-90.0 to 90.0)
        /// </summary>
        [JsonProperty(PropertyName = "latitude")]
        public double Latitude { get; set; }

        /// <summary>
        /// Gets or sets a label for the coordinate
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
