// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// DeviceFraudDetection
    /// </summary>
    /// <remarks>
    /// Device fraud detection check results
    /// </remarks>
    public partial class DeviceFraudDetection
    {
        /// <summary>
        /// Initializes a new instance of the DeviceFraudDetection class.
        /// </summary>
        public DeviceFraudDetection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeviceFraudDetection class.
        /// </summary>
        /// <param name="providerReference">Reference supplied by the check
        /// provider</param>
        /// <param name="recommendation">Recommendation given by the
        /// provider</param>
        /// <param name="recommendationReason">Human readable reason for the
        /// given recommendation</param>
        /// <param name="totalScore">Score calculated by the provider</param>
        /// <param name="matchedRules">List of matching rules for this
        /// device</param>
        /// <param name="usedTestEnvironment">If the test environment was used
        /// to generate the matched rules</param>
        public DeviceFraudDetection(string providerReference = default(string), string recommendation = default(string), string recommendationReason = default(string), int? totalScore = default(int?), IList<DeviceFraudRule> matchedRules = default(IList<DeviceFraudRule>), bool? usedTestEnvironment = default(bool?))
        {
            ProviderReference = providerReference;
            Recommendation = recommendation;
            RecommendationReason = recommendationReason;
            TotalScore = totalScore;
            MatchedRules = matchedRules;
            UsedTestEnvironment = usedTestEnvironment;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets reference supplied by the check provider
        /// </summary>
        [JsonProperty(PropertyName = "provider_reference")]
        public string ProviderReference { get; set; }

        /// <summary>
        /// Gets or sets recommendation given by the provider
        /// </summary>
        [JsonProperty(PropertyName = "recommendation")]
        public string Recommendation { get; set; }

        /// <summary>
        /// Gets or sets human readable reason for the given recommendation
        /// </summary>
        [JsonProperty(PropertyName = "recommendation_reason")]
        public string RecommendationReason { get; set; }

        /// <summary>
        /// Gets or sets score calculated by the provider
        /// </summary>
        [JsonProperty(PropertyName = "total_score")]
        public int? TotalScore { get; set; }

        /// <summary>
        /// Gets or sets list of matching rules for this device
        /// </summary>
        [JsonProperty(PropertyName = "matched_rules")]
        public IList<DeviceFraudRule> MatchedRules { get; set; }

        /// <summary>
        /// Gets or sets if the test environment was used to generate the
        /// matched rules
        /// </summary>
        [JsonProperty(PropertyName = "used_test_environment")]
        public bool? UsedTestEnvironment { get; set; }

    }
}
