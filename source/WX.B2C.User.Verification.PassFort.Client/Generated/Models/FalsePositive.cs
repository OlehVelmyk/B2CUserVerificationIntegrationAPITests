// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// FalsePositive
    /// </summary>
    /// <remarks>
    /// Details of a false positive
    /// </remarks>
    public partial class FalsePositive
    {
        /// <summary>
        /// Initializes a new instance of the FalsePositive class.
        /// </summary>
        public FalsePositive()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the FalsePositive class.
        /// </summary>
        /// <param name="matchId">ID of the Sanction Match</param>
        /// <param name="reasons">Reasons for false positive</param>
        /// <param name="issuer">Name of issuing authority</param>
        public FalsePositive(string matchId = default(string), string matchModifiedDate = default(string), IList<string> reasons = default(IList<string>), string issuer = default(string))
        {
            MatchId = matchId;
            MatchModifiedDate = matchModifiedDate;
            Reasons = reasons;
            Issuer = issuer;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets ID of the Sanction Match
        /// </summary>
        [JsonProperty(PropertyName = "match_id")]
        public string MatchId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "match_modified_date")]
        public string MatchModifiedDate { get; set; }

        /// <summary>
        /// Gets or sets reasons for false positive
        /// </summary>
        [JsonProperty(PropertyName = "reasons")]
        public IList<string> Reasons { get; set; }

        /// <summary>
        /// Gets or sets name of issuing authority
        /// </summary>
        [JsonProperty(PropertyName = "issuer")]
        public string Issuer { get; set; }

    }
}
