// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Source
    /// </summary>
    /// <remarks>
    /// A source of information for a PEP or sanction
    /// </remarks>
    public partial class Source
    {
        /// <summary>
        /// Initializes a new instance of the Source class.
        /// </summary>
        public Source()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Source class.
        /// </summary>
        /// <param name="name">Category of the source</param>
        /// <param name="url">URL of source</param>
        /// <param name="description">Description of source</param>
        public Source(string name, string url = default(string), string description = default(string))
        {
            Name = name;
            Url = url;
            Description = description;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets category of the source
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets URL of source
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// Gets or sets description of source
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
