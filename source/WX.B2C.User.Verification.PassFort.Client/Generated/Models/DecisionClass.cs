// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Newtonsoft.Json;

    /// <summary>
    /// Defines values for DecisionClass.
    /// </summary>
    /// <summary>
    /// Determine base value for a given allowed value if exists, else return
    /// the value itself
    /// </summary>
    [JsonConverter(typeof(DecisionClassConverter))]
    public struct DecisionClass : System.IEquatable<DecisionClass>
    {
        private DecisionClass(string underlyingValue)
        {
            UnderlyingValue=underlyingValue;
        }

        public static readonly DecisionClass PASS = "PASS";

        public static readonly DecisionClass FAIL = "FAIL";

        public static readonly DecisionClass PARTIAL = "PARTIAL";

        public static readonly DecisionClass WARN = "WARN";

        public static readonly DecisionClass ERROR = "ERROR";


        /// <summary>
        /// Underlying value of enum DecisionClass
        /// </summary>
        private readonly string UnderlyingValue;

        /// <summary>
        /// Returns string representation for DecisionClass
        /// </summary>
        public override string ToString()
        {
            return UnderlyingValue == null ? null : UnderlyingValue.ToString();
        }

        /// <summary>
        /// Compares enums of type DecisionClass
        /// </summary>
        public bool Equals(DecisionClass e)
        {
            return UnderlyingValue.Equals(e.UnderlyingValue);
        }

        /// <summary>
        /// Implicit operator to convert string to DecisionClass
        /// </summary>
        public static implicit operator DecisionClass(string value)
        {
            return new DecisionClass(value);
        }

        /// <summary>
        /// Implicit operator to convert DecisionClass to string
        /// </summary>
        public static implicit operator string(DecisionClass e)
        {
            return e.UnderlyingValue;
        }

        /// <summary>
        /// Overriding == operator for enum DecisionClass
        /// </summary>
        public static bool operator == (DecisionClass e1, DecisionClass e2)
        {
            return e2.Equals(e1);
        }

        /// <summary>
        /// Overriding != operator for enum DecisionClass
        /// </summary>
        public static bool operator != (DecisionClass e1, DecisionClass e2)
        {
            return !e2.Equals(e1);
        }

        /// <summary>
        /// Overrides Equals operator for DecisionClass
        /// </summary>
        public override bool Equals(object obj)
        {
            return obj is DecisionClass && Equals((DecisionClass)obj);
        }

        /// <summary>
        /// Returns for hashCode DecisionClass
        /// </summary>
        public override int GetHashCode()
        {
            return UnderlyingValue.GetHashCode();
        }

    }
}
