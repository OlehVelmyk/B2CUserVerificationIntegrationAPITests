// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// DocumentImageResource
    /// </summary>
    /// <remarks>
    /// A single image of a document
    /// </remarks>
    public partial class DocumentImageResource
    {
        /// <summary>
        /// Initializes a new instance of the DocumentImageResource class.
        /// </summary>
        public DocumentImageResource()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DocumentImageResource class.
        /// </summary>
        /// <param name="data">The binary data of the image, encoded in base64.
        ///
        /// **Max file size:** 10MB
        ///
        /// **Supported file types**: PNG, GIF, JPG, PDF
        ///
        /// This is used on _upload_, but is not available on _download_ (see
        /// `encrypted_data`)</param>
        /// <param name="providerReference">The provider's reference for this
        /// document image, where applicable</param>
        /// <param name="imageType">Possible values include: 'FRONT', 'BACK',
        /// 'FACE'</param>
        public DocumentImageResource(object data, string providerReference = default(string), DocumentImageType? imageType = default(DocumentImageType?))
        {
            ProviderReference = providerReference;
            ImageType = imageType;
            Data = data;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the provider's reference for this document image,
        /// where applicable
        /// </summary>
        [JsonProperty(PropertyName = "provider_reference")]
        public string ProviderReference { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'FRONT', 'BACK', 'FACE'
        /// </summary>
        [JsonProperty(PropertyName = "image_type")]
        public DocumentImageType? ImageType { get; set; }

        /// <summary>
        /// Gets or sets the binary data of the image, encoded in base64.
        ///
        /// **Max file size:** 10MB
        ///
        /// **Supported file types**: PNG, GIF, JPG, PDF
        ///
        /// This is used on _upload_, but is not available on _download_ (see
        /// `encrypted_data`)
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public object Data { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Data == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Data");
            }
        }
    }
}
