// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Individual's banking details
    /// </summary>
    public partial class IndividualDataBankingDetails
    {
        /// <summary>
        /// Initializes a new instance of the IndividualDataBankingDetails
        /// class.
        /// </summary>
        public IndividualDataBankingDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IndividualDataBankingDetails
        /// class.
        /// </summary>
        /// <param name="bankAccounts">Individual's bank accounts</param>
        public IndividualDataBankingDetails(IList<BankAccount> bankAccounts)
        {
            BankAccounts = bankAccounts;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets individual's bank accounts
        /// </summary>
        [JsonProperty(PropertyName = "bank_accounts")]
        public IList<BankAccount> BankAccounts { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BankAccounts == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BankAccounts");
            }
            if (BankAccounts != null)
            {
                foreach (var element in BankAccounts)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
