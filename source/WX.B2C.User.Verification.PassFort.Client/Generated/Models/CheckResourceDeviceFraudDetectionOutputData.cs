// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The resultant output of the check.
    ///
    /// **Note**: This was correct at the time the check was performed. Some
    /// check types will go out of date over time
    /// </summary>
    public partial class CheckResourceDeviceFraudDetectionOutputData
    {
        /// <summary>
        /// Initializes a new instance of the
        /// CheckResourceDeviceFraudDetectionOutputData class.
        /// </summary>
        public CheckResourceDeviceFraudDetectionOutputData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// CheckResourceDeviceFraudDetectionOutputData class.
        /// </summary>
        public CheckResourceDeviceFraudDetectionOutputData(DeviceMetadata deviceMetadata = default(DeviceMetadata), DeviceFraudDetection deviceFraudDetection = default(DeviceFraudDetection), IPLocation ipLocation = default(IPLocation))
        {
            DeviceMetadata = deviceMetadata;
            DeviceFraudDetection = deviceFraudDetection;
            IpLocation = ipLocation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "device_metadata")]
        public DeviceMetadata DeviceMetadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "device_fraud_detection")]
        public DeviceFraudDetection DeviceFraudDetection { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ip_location")]
        public IPLocation IpLocation { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DeviceMetadata != null)
            {
                DeviceMetadata.Validate();
            }
            if (IpLocation != null)
            {
                IpLocation.Validate();
            }
        }
    }
}
