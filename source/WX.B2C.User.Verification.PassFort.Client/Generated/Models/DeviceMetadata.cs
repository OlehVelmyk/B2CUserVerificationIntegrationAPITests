// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// DeviceMetadata
    /// </summary>
    /// <remarks>
    /// Data about a users device
    /// </remarks>
    public partial class DeviceMetadata
    {
        /// <summary>
        /// Initializes a new instance of the DeviceMetadata class.
        /// </summary>
        public DeviceMetadata()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DeviceMetadata class.
        /// </summary>
        /// <param name="token">A token representing the device</param>
        /// <param name="statedIp">Stated IP address of the device</param>
        /// <param name="action">The associated action</param>
        /// <param name="referenceId">Device reference ID</param>
        /// <param name="deviceId">Device identifier allocated by the check
        /// provider</param>
        /// <param name="deviceType">Type of device determined by the check
        /// provider</param>
        public DeviceMetadata(string token, string statedIp = default(string), string action = default(string), string referenceId = default(string), string deviceId = default(string), string deviceType = default(string))
        {
            Token = token;
            StatedIp = statedIp;
            Action = action;
            ReferenceId = referenceId;
            DeviceId = deviceId;
            DeviceType = deviceType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a token representing the device
        /// </summary>
        [JsonProperty(PropertyName = "token")]
        public string Token { get; set; }

        /// <summary>
        /// Gets or sets stated IP address of the device
        /// </summary>
        [JsonProperty(PropertyName = "stated_ip")]
        public string StatedIp { get; set; }

        /// <summary>
        /// Gets or sets the associated action
        /// </summary>
        [JsonProperty(PropertyName = "action")]
        public string Action { get; set; }

        /// <summary>
        /// Gets or sets device reference ID
        /// </summary>
        [JsonProperty(PropertyName = "reference_id")]
        public string ReferenceId { get; set; }

        /// <summary>
        /// Gets or sets device identifier allocated by the check provider
        /// </summary>
        [JsonProperty(PropertyName = "device_id")]
        public string DeviceId { get; set; }

        /// <summary>
        /// Gets or sets type of device determined by the check provider
        /// </summary>
        [JsonProperty(PropertyName = "device_type")]
        public string DeviceType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Token == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Token");
            }
        }
    }
}
