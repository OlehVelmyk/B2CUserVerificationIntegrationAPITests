// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// EventDataWebhooks
    /// </summary>
    /// <remarks>
    /// Details about the created event(s).
    /// </remarks>
    public partial class EventDataWebhooks
    {
        /// <summary>
        /// Initializes a new instance of the EventDataWebhooks class.
        /// </summary>
        public EventDataWebhooks()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventDataWebhooks class.
        /// </summary>
        /// <param name="resolution">Possible values include: 'UNRESOLVED',
        /// 'MISMATCH', 'MATCH', 'IGNORE', 'CREATED_TASK'</param>
        /// <param name="eventType">The type of event. Note that `CHECK_EXPIRY`
        /// is returned when one or more new matches have been discovered
        /// during [Creditsafe
        /// monitoring](https://help.passfort.com/article/78i6x3qlzb-configuring-creditsafe#creditsafe_monitoring)
        /// and `FRAUD_FLAG` is returned when a match is discovered during a
        /// [Merchant fraud
        /// check](https://help.passfort.com/article/ukwfntz21e-checks#merchant_fraud_check).
        /// Possible values include: 'PEP_FLAG', 'SANCTION_FLAG',
        /// 'ADVERSE_MEDIA_FLAG', 'REFER_FLAG', 'CHECK_EXPIRY',
        /// 'FRAUD_FLAG'</param>
        public EventDataWebhooks(string id = default(string), string resolution = default(string), string eventType = default(string))
        {
            Id = id;
            Resolution = resolution;
            EventType = eventType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'UNRESOLVED', 'MISMATCH',
        /// 'MATCH', 'IGNORE', 'CREATED_TASK'
        /// </summary>
        [JsonProperty(PropertyName = "resolution")]
        public string Resolution { get; set; }

        /// <summary>
        /// Gets or sets the type of event. Note that `CHECK_EXPIRY` is
        /// returned when one or more new matches have been discovered during
        /// [Creditsafe
        /// monitoring](https://help.passfort.com/article/78i6x3qlzb-configuring-creditsafe#creditsafe_monitoring)
        /// and `FRAUD_FLAG` is returned when a match is discovered during a
        /// [Merchant fraud
        /// check](https://help.passfort.com/article/ukwfntz21e-checks#merchant_fraud_check).
        /// Possible values include: 'PEP_FLAG', 'SANCTION_FLAG',
        /// 'ADVERSE_MEDIA_FLAG', 'REFER_FLAG', 'CHECK_EXPIRY', 'FRAUD_FLAG'
        /// </summary>
        [JsonProperty(PropertyName = "event_type")]
        public string EventType { get; set; }

    }
}
