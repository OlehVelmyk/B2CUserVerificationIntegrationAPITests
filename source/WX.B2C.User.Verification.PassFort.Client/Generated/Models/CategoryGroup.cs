// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// CategoryGroup
    /// </summary>
    /// <remarks>
    /// Group of categories to be combined for risk calculations with operation
    /// to combine them
    /// </remarks>
    public partial class CategoryGroup
    {
        /// <summary>
        /// Initializes a new instance of the CategoryGroup class.
        /// </summary>
        public CategoryGroup()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CategoryGroup class.
        /// </summary>
        /// <param name="categoryIds">Category IDs</param>
        /// <param name="name">The name of this risk category group</param>
        /// <param name="operatorProperty">Method for combining these risk
        /// category scores. Possible values include: 'MAX', 'MIN', 'MEAN',
        /// 'SUM'</param>
        public CategoryGroup(IList<string> categoryIds, string name, string operatorProperty)
        {
            CategoryIds = categoryIds;
            Name = name;
            OperatorProperty = operatorProperty;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets category IDs
        /// </summary>
        [JsonProperty(PropertyName = "category_ids")]
        public IList<string> CategoryIds { get; set; }

        /// <summary>
        /// Gets or sets the name of this risk category group
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets method for combining these risk category scores.
        /// Possible values include: 'MAX', 'MIN', 'MEAN', 'SUM'
        /// </summary>
        [JsonProperty(PropertyName = "operator")]
        public string OperatorProperty { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CategoryIds == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CategoryIds");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (OperatorProperty == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "OperatorProperty");
            }
        }
    }
}
