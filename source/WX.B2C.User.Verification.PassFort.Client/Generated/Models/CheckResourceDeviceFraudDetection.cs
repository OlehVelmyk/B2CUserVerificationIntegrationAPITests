// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.PassFort.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// CheckResourceDeviceFraudDetection
    /// </summary>
    /// <remarks>
    /// For details refer to [Check
    /// Reference](/developer/v4/check-reference/individual-checks/device-fraud-detection)
    /// </remarks>
    [Newtonsoft.Json.JsonObject("DEVICE_FRAUD_DETECTION")]
    public partial class CheckResourceDeviceFraudDetection : CheckResource
    {
        /// <summary>
        /// Initializes a new instance of the CheckResourceDeviceFraudDetection
        /// class.
        /// </summary>
        public CheckResourceDeviceFraudDetection()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CheckResourceDeviceFraudDetection
        /// class.
        /// </summary>
        /// <param name="state">Possible values include: 'PENDING', 'RUNNING',
        /// 'COMPLETE'</param>
        /// <param name="errors">An array of errors that occurred when the
        /// check was performed. Hopefully empty!</param>
        /// <param name="taskIds">The tasks related to this check</param>
        /// <param name="instructedExternally">Whether the check ran externally
        /// and contains the formatted result</param>
        /// <param name="decision">Possible values include: 'PASS', 'FAIL',
        /// 'PARTIAL', 'WARN', 'ERROR'</param>
        /// <param name="providers">An array of records on the providers that
        /// were used to run this check</param>
        /// <param name="outputData">The resultant output of the check.
        ///
        /// **Note**: This was correct at the time the check was performed.
        /// Some check types will go out of date over time</param>
        /// <param name="result">Possible values include: 'Pass', 'Refer',
        /// 'PEP', 'Sanction', 'Media', 'Error', 'Partial', 'Fail', '2+2',
        /// '1+1'</param>
        public CheckResourceDeviceFraudDetection(DeviceMetadata deviceMetadata, string id = default(string), CheckVariant variant = default(CheckVariant), CheckState? state = default(CheckState?), string performedOn = default(string), IList<Error> errors = default(IList<Error>), IList<string> taskIds = default(IList<string>), bool? instructedExternally = default(bool?), DecisionClass? decision = default(DecisionClass?), IList<CheckResourceProvidersItem> providers = default(IList<CheckResourceProvidersItem>), IndividualData inputData = default(IndividualData), CheckResourceDeviceFraudDetectionOutputData outputData = default(CheckResourceDeviceFraudDetectionOutputData), CheckResult? result = default(CheckResult?))
            : base(id, variant, state, performedOn, errors, taskIds, instructedExternally, decision, providers)
        {
            DeviceMetadata = deviceMetadata;
            InputData = inputData;
            OutputData = outputData;
            Result = result;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "device_metadata")]
        public DeviceMetadata DeviceMetadata { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "input_data")]
        public IndividualData InputData { get; set; }

        /// <summary>
        /// Gets or sets the resultant output of the check.
        ///
        /// **Note**: This was correct at the time the check was performed.
        /// Some check types will go out of date over time
        /// </summary>
        [JsonProperty(PropertyName = "output_data")]
        public CheckResourceDeviceFraudDetectionOutputData OutputData { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Pass', 'Refer', 'PEP',
        /// 'Sanction', 'Media', 'Error', 'Partial', 'Fail', '2+2', '1+1'
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public CheckResult? Result { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (DeviceMetadata == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DeviceMetadata");
            }
            if (DeviceMetadata != null)
            {
                DeviceMetadata.Validate();
            }
            if (InputData != null)
            {
                InputData.Validate();
            }
            if (OutputData != null)
            {
                OutputData.Validate();
            }
        }
    }
}
