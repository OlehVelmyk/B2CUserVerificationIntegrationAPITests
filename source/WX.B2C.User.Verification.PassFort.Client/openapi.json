{
  "openapi": "3.0.0",
  "info": {
    "title": "PassFort API",
    "version": "4.0.0",
    "contact": {
      "name": "PassFort Support",
      "email": "support@passfort.com"
    }
  },
  "servers": [
    {
      "url": "https://api.passfort.com/4.0",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "Header": {
        "type": "apiKey",
        "name": "apikey",
        "in": "header",
        "description": "This is the recommended method of authentication."
      },
      "QueryParameter": {
        "type": "apiKey",
        "name": "apikey",
        "in": "query",
        "description":
          "*This authentication method is deprecated and should be avoided for new integrations. Newer end-points may not support this authentication method at all.*"
      }
    },
    "schemas": {
      "Address": {
        "type": "object",
        "description": "A single address, which can be structured data or a free-form string.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/StructuredAddress"
          },
          {
            "$ref": "#/components/schemas/FreeformAddress"
          }
        ],
        "title": "Address",
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "STRUCTURED": "#/components/schemas/StructuredAddress",
            "FREEFORM": "#/components/schemas/FreeformAddress"
          }
        },
        "properties": {
          "type": {
            "description": "The type of a structured address is always `STRUCTURED`.",
            "type": "string",
            "enum": [
              "FREEFORM",
              "STRUCTURED"
            ]
          }
        }
      },
      "DatedAddressHistoryItem": {
        "title": "DatedAddressHistoryItem",
        "description": "An address with optional start/end dates.",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "start_date": {
            "$ref": "#/components/schemas/ApproxDate"
          },
          "end_date": {
            "$ref": "#/components/schemas/ApproxDate"
          }
        },
        "required": [
          "address"
        ]
      },
      "AddressHistory": {
        "title": "AddressHistory",
        "description": "A list of addresses in which the individual has lived. Each of these can have an approximate start and end date.  Addresses are ordered by `start_date`. If two addresses have the same `start_date`, `end_date` will order them. An address with no `start_date` and `end_date` will be assumed to be current. If multiple addresses have no `start_date` and `end_date` then their order will be random.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DatedAddressHistoryItem"
        }
      },
      "AliasOrId": {
        "description": "An object that requires at least one of these two properties : Id and Alias",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/UUID"
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "alias": {
                "type": "string"
              }
            },
            "required": [
              "alias"
            ]
          }
        ],
        "title": "AliasOrId"
      },
      "ApplicationStringField": {
        "type": "string",
        "description": "Application filter string fields",
        "enum": [
          "STATUS",
          "FLAG",
          "RISK_LEVEL"
        ],
        "title": "ApplicationStringField"
      },
      "ApprovalBlocker": {
        "type": "object",
        "title": "ApprovalBlocker",
        "description": "Blocker preventing the profile application being approved",
        "required": [
          "blocker_type"
        ],
        "properties": {
          "blocker_type": {
            "$ref": "#/components/schemas/ApprovalBlockerType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/ApprovalBlockerUnresolvedEvent"
          },
          {
            "$ref": "#/components/schemas/ApprovalBlockerSuspendedProfile"
          },
          {
            "$ref": "#/components/schemas/ApprovalBlockerIncompleteTask"
          },
          {
            "$ref": "#/components/schemas/ApprovalBlockerUndeterminedRisk"
          },
          {
            "$ref": "#/components/schemas/ApprovalBlockerRiskScore"
          },
          {
            "$ref": "#/components/schemas/ApprovalBlockerUndeterminedOutcome"
          },
          {
            "$ref": "#/components/schemas/ApprovalBlockerRejectionOutcome"
          },
          {
            "$ref": "#/components/schemas/ApprovalBlockerWaitingOnEscalation"
          }
        ],
        "discriminator": {
          "propertyName": "blocker_type",
          "mapping": {
            "INCOMPLETE_TASK": "#/components/schemas/ApprovalBlockerIncompleteTask",
            "UNRESOLVED_EVENT": "#/components/schemas/ApprovalBlockerUnresolvedEvent",
            "SUSPENDED_PROFILE": "#/components/schemas/ApprovalBlockerSuspendedProfile",
            "UNDETERMINED_RISK": "#/components/schemas/ApprovalBlockerUndeterminedRisk",
            "RISK_SCORE": "#/components/schemas/ApprovalBlockerRiskScore",
            "UNDETERMINED_OUTCOME": "#/components/schemas/ApprovalBlockerUndeterminedOutcome",
            "REJECTION_OUTCOME": "#/components/schemas/ApprovalBlockerRejectionOutcome",
            "WAITING_ON_ESCALATION": "#/components/schemas/ApprovalBlockerWaitingOnEscalation"
          }
        }
      },
      "ApprovalBlockerIncompleteTask": {
        "x-ms-discriminator-value ": "INCOMPLETE_TASK",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApprovalBlocker"
          },
          {
            "type": "object",
            "title": "ApprovalBlockerIncompleteTask",
            "description": "Incomplete Task preventing the profile application being approved",
            "properties": {
              "task_type": {
                "$ref": "#/components/schemas/TaskType"
              },
              "task_variant": {
                "$ref": "#/components/schemas/TaskVariant"
              }
            }
          }
        ]
      },
      "ApprovalBlockerRejectionOutcome": {
        "x-ms-discriminator-value ": "REJECTION_OUTCOME",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApprovalBlocker"
          },
          {
            "type": "object",
            "description": "Smart policy determined that the profile should be rejected",
            "title": "ApprovalBlockerRejectionOutcome"
          }
        ]
      },
      "ApprovalBlockerRiskScore": {
        "x-ms-discriminator-value ": "RISK_SCORE",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApprovalBlocker"
          },
          {
            "type": "object",
            "description": "Risk score is above the auto-reject threshold",
            "title": "ApprovalBlockerRiskScore"
          }
        ]
      },
      "ApprovalBlockerSuspendedProfile": {
        "x-ms-discriminator-value ": "SUSPENDED_PROFILE",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApprovalBlocker"
          },
          {
            "type": "object",
            "description": "Suspended profile preventing the profile application being approved",
            "title": "ApprovalBlockerSuspendedProfile"
          }
        ]
      },
      "ApprovalBlockerType": {
        "type": "string",
        "description": "The nature of the blocker",
        "enum": [
          "INCOMPLETE_TASK",
          "UNRESOLVED_EVENT",
          "SUSPENDED_PROFILE",
          "UNDETERMINED_RISK",
          "RISK_SCORE",
          "UNDETERMINED_OUTCOME",
          "REJECTION_OUTCOME",
          "WAITING_ON_ESCALATION"
        ],
        "title": "ApprovalBlockerType"
      },
      "ApprovalBlockerUndeterminedOutcome": {
        "x-ms-discriminator-value ": "UNDETERMINED_OUTCOME",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApprovalBlocker"
          },
          {
            "type": "object",
            "description": "Smart policy outcome has not been determined",
            "title": "ApprovalBlockerUndeterminedOutcome"
          }
        ]
      },
      "ApprovalBlockerUndeterminedRisk": {
        "x-ms-discriminator-value ": "UNDETERMINED_OUTCOME",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApprovalBlocker"
          },
          {
            "type": "object",
            "description": "Risk score is undetermined, or stale and pending recalculation",
            "title": "ApprovalBlockerUndeterminedRisk"
          }
        ]
      },
      "ApprovalBlockerUnresolvedEvent": {
        "x-ms-discriminator-value ": "UNRESOLVED_EVENT",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApprovalBlocker"
          },
          {
            "type": "object",
            "description": "Unresolved event preventing the profile application being approved",
            "properties": {
              "event_id": {
                "$ref": "#/components/schemas/UUID"
              }
            },
            "title": "ApprovalBlockerUnresolvedEvent"
          }
        ]
      },
      "ApprovalBlockerWaitingOnEscalation": {
        "x-ms-discriminator-value ": "WAITING_ON_ESCALATION",
        "allOf": [
          {
            "$ref": "#/components/schemas/ApprovalBlocker"
          },
          {
            "type": "object",
            "description": "Waiting on approvals which have been escalated to various teams",
            "title": "ApprovalBlockerWaitingOnEscalation"
          }
        ]
      },
      "ApproxDate": {
        "description": "A date with a year and a month. A day is not included.",
        "type": "string",
        "pattern": "^\\d{4}-\\d{2}$",
        "title": "ApproxDate",
        "example": "1999-03"
      },
      "Associate": {
        "description": "An associate to a PEP or Sanction",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the associate"
          },
          "association": {
            "type": "string",
            "description": "Their association"
          },
          "is_pep": {
            "type": "boolean",
            "description": "Associate of PEP"
          },
          "was_pep": {
            "type": "boolean",
            "description": "Was the associate of PEP"
          },
          "is_sanction": {
            "type": "boolean",
            "description": "Associate of Sanction"
          },
          "was_sanction": {
            "type": "boolean",
            "description": "Was the associate of Sanction"
          },
          "deceased_dates": {
            "type": "array",
            "description": "Reported death dates",
            "items": {
              "$ref": "#/components/schemas/PartialDate"
            }
          },
          "inactive_as_rca_related_to_pep_dates": {
            "type": "array",
            "description": "Dates of relation to PEP cessation",
            "items": {
              "$ref": "#/components/schemas/PartialDate"
            }
          },
          "inactive_as_pep_dates": {
            "type": "array",
            "description": "Dates of PEP inactivity",
            "items": {
              "$ref": "#/components/schemas/PartialDate"
            }
          },
          "dobs": {
            "type": "array",
            "description": "Dates of Birth",
            "items": {
              "$ref": "#/components/schemas/PartialDate"
            }
          }
        },
        "title": "Associate"
      },
      "AssociatedRole": {
        "description": "Role this associated entity has with the customer",
        "type": "string",
        "enum": [
          "AUTHORIZED_PERSON",
          "UNAUTHORIZED_PERSON",
          "DIRECTOR",
          "COMPANY_SECRETARY",
          "SHAREHOLDER",
          "PARTNER",
          "TRUSTEE",
          "BENEFICIAL_OWNER",
          "RESIGNED_OFFICER",
          "OTHER"
        ],
        "title": "AssociatedRole"
      },
      "BankAccount": {
        "description": "Details for a bank account",
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "type": {
            "$ref": "#/components/schemas/BankAccountType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/UKBankAccount"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "UK_ACCOUNT": "#/components/schemas/UKBankAccount"
          }
        },
        "required": [
          "type",
          "country"
        ],
        "title": "BankAccount"
      },
      "BankAccountComment": {
        "description": "Comment emitted during bank account verification",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BankAccountCommentType"
          },
          "message": {
            "type": "string",
            "description": "A comment about the bank account"
          },
          "component": {
            "$ref": "#/components/schemas/BankAccountComponent"
          }
        },
        "required": [
          "message"
        ],
        "title": "BankAccountComment"
      },
      "BankAccountCommentType": {
        "type": "string",
        "description": "Bank account comment type",
        "enum": [
          "COMMENT",
          "MATCH",
          "MISMATCH",
          "WARNING"
        ],
        "title": "BankAccountCommentType"
      },
      "BankAccountComponent": {
        "type": "string",
        "description": "Bank account number component",
        "enum": [
          "UK_SORT_CODE",
          "UK_ACCOUNT_NUMBER"
        ],
        "title": "BankAccountComponent"
      },
      "BankAccountType": {
        "type": "string",
        "description": "Bank account type",
        "enum": [
          "UK_ACCOUNT"
        ],
        "title": "BankAccountType"
      },
      "BankAccountVerification": {
        "description": "Bank account verification",
        "type": "object",
        "properties": {
          "performed_on": {
            "$ref": "#/components/schemas/DateTime"
          },
          "match": {
            "type": "boolean",
            "description": "If the bank was verified and is a match"
          },
          "bank_account": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "comments": {
            "description": "Comments",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccountComment"
            }
          }
        },
        "required": [
          "bank_account",
          "match",
          "performed_on",
          "comments"
        ],
        "title": "BankAccountVerification"
      },
      "Base64": {
        "description": "Binary data encoded in base64",
        "type": "string",
        "pattern": "^(([a-zA-Z0-9+/]{4})*([a-zA-Z0-9+/]{3}=|[a-zA-Z0-9+/]{2}==)?|[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})$",
        "title": "Base64"
      },
      "CapabilityType": {
        "description": "The set of capabilities which can be granted in the permissions system",
        "enum": [
          "ROOT",
          "EDIT_PROFILE",
          "READ_PROFILE",
          "CREATE_PROFILE",
          "DELETE_PROFILE",
          "VIEW_ROLES",
          "CREATE_ROLE",
          "EDIT_ROLE",
          "DELETE_ROLE",
          "EDIT_PROFILE_COLLECTED_DATA",
          "READ_PROFILE_COLLECTED_DATA",
          "READ_PROFILE_COLLECTION_STEPS",
          "EDIT_PROFILE_COLLECTION_STEPS",
          "EDIT_DOCUMENT_IMAGE",
          "READ_DOCUMENT_IMAGE",
          "UPLOAD_DOCUMENT_IMAGE",
          "PURCHASE_FILING_DOCUMENT",
          "CREATE_TASK_NOTE",
          "DELETE_TASK_NOTE",
          "CUSTOM_AUTHOR_NOTE",
          "ASSIGN_PRODUCT_APPLICATION",
          "CREATE_PRODUCT_APPLICATION",
          "EDIT_PRODUCT_APPLICATION_STATUS",
          "CREATE_PROFILE_TASK",
          "EDIT_CONVERSATION",
          "RUN_CHECK",
          "CREATE_PROFILE_TAG",
          "DELETE_PROFILE_TAG",
          "EDIT_TASK_COMPLETION_STATUS",
          "MANAGE_PEP_AND_SANCTIONS_MATCHES",
          "SEARCH",
          "PROVIDER_DATA_SEARCH",
          "CREATE_USER",
          "VIEW_USERS",
          "VIEW_MINIMAL_USERS",
          "VIEW_USER",
          "VIEW_MINIMAL_USER",
          "EDIT_USER",
          "EDIT_USER_ROLE",
          "EDIT_USER_PASSWORD",
          "EDIT_USER_FILTER_SETS",
          "DEACTIVATE_USER",
          "REACTIVATE_USER",
          "DELETE_USER",
          "VIEW_TEAMS",
          "EDIT_TEAM",
          "VIEW_APPLICATION",
          "EDIT_PAYMENT",
          "VIEW_CONFIG",
          "EDIT_CONFIG",
          "DELETE_CONFIG",
          "VIEW_CONFIG_CREDENTIALS",
          "VIEW_REPORT",
          "CREATE_REPORT",
          "DELETE_REPORT",
          "EDIT_REPORT",
          "DATA_EXPORT",
          "VIEW_API_KEYS",
          "CREATE_API_KEY",
          "DEACTIVATE_API_KEY",
          "VIEW_FORM_TEMPLATE",
          "EDIT_FORM_TEMPLATE",
          "CREATE_CUSTOMER_REQUEST",
          "ARCHIVE_FORM_TEMPLATE",
          "EDIT_FORM_INSTANCE_ANSWERS",
          "READ_FORM_INSTANCE",
          "SEND_FORM_INSTANCE",
          "EXPIRE_FORM_INSTANCE",
          "INSTANTIATE_FORMS",
          "CREATE_MASTER_API_KEY",
          "ISSUE_MASTER_API_KEY",
          "ISSUE_COLLECT_API_KEY",
          "VIEW_CUSTOM_FIELDS_SCHEMA",
          "CREATE_CUSTOM_FIELDS_SCHEMA",
          "EDIT_CUSTOM_FIELDS_SCHEMA",
          "PERMANENTLY_DELETE_CUSTOM_FIELDS_SCHEMA",
          "EDIT_WEBHOOK_CONFIG",
          "VIEW_WEBHOOK_CONFIG",
          "MANUALLY_ACCEPT_FORM_INSTANCE",
          "VIEW_PROFILE_ACCESS_GRANTS",
          "GRANT_PROFILE_ACCESS",
          "REVOKE_PROFILE_ACCESS",
          "VIEW_IP_WHITELIST",
          "EDIT_IP_WHITELIST",
          "SETUP_SDK"
        ],
        "title": "CapabilityType"
      },
      "CategoryGroup": {
        "type": "object",
        "description": "Group of categories to be combined for risk calculations with operation to combine them",
        "properties": {
          "category_ids": {
            "type": "array",
            "description": "Category IDs",
            "items": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of this risk category group"
          },
          "operator": {
            "type": "string",
            "description": "Method for combining these risk category scores",
            "enum": [
              "MAX",
              "MIN",
              "MEAN",
              "SUM"
            ]
          }
        },
        "required": [
          "category_ids",
          "operator",
          "name"
        ],
        "x-derives": [
          "PartialEq"
        ],
        "title": "CategoryGroup"
      },
      "CategoryGroupOutput": {
        "type": "object",
        "description": "Score and config for a group of risk categories",
        "properties": {
          "group_config": {
            "$ref": "#/components/schemas/CategoryGroup"
          },
          "combined_score": {
            "type": "number",
            "description": "The score once the operator above has been applied"
          }
        },
        "title": "CategoryGroupOutput"
      },
      "CheckResult": {
        "type": "string",
        "enum": [
          "Pass",
          "Refer",
          "PEP",
          "Sanction",
          "Media",
          "Error",
          "Partial",
          "Fail",
          "2+2",
          "1+1"
        ],
        "x-ms-enum": {
          "name": "CheckResult",
          "modelAsString": true
        },
        "description": "The meaning of the result will depend on your provider and settings."
      },
      "CheckResource": {
        "title": "CheckResource",
        "description": "A single check run against a profile",
        "type": "object",
        "oneOf": [
          {
            "$ref": "#/components/schemas/CheckResourceIdentityCheck"
          },
          {
            "$ref": "#/components/schemas/CheckResourceDocumentVerification"
          },
          {
            "$ref": "#/components/schemas/CheckResourceDocumentFetch"
          },
          {
            "$ref": "#/components/schemas/CheckResourcePepsAndSanctionsScreen"
          },
          {
            "$ref": "#/components/schemas/CheckResourceVisaCheck"
          },
          {
            "$ref": "#/components/schemas/CheckResourceCRABankAccountVerification"
          },
          {
            "$ref": "#/components/schemas/CheckResourceIndividualManualForm"
          },
          {
            "$ref": "#/components/schemas/CheckResourceDeviceFraudDetection"
          }
        ],
        "discriminator": {
          "propertyName": "check_type",
          "mapping": {
            "IDENTITY_CHECK": "#/components/schemas/CheckResourceIdentityCheck",
            "DOCUMENT_VERIFICATION": "#/components/schemas/CheckResourceDocumentVerification",
            "DOCUMENT_FETCH": "#/components/schemas/CheckResourceDocumentFetch",
            "PEPS_AND_SANCTIONS_SCREEN": "#/components/schemas/CheckResourcePepsAndSanctionsScreen",
            "VISA_CHECK": "#/components/schemas/CheckResourceVisaCheck",
            "CRA_BANK_ACCOUNT_VERIFICATION": "#/components/schemas/CheckResourceCRABankAccountVerification",
            "INDIVIDUAL_MANUAL_FORM": "#/components/schemas/CheckResourceIndividualManualForm",
            "DEVICE_FRAUD_DETECTION": "#/components/schemas/CheckResourceDeviceFraudDetection"
          }
        },
        "required": [
          "check_type"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "check_type": {
            "description": "The type of check being run",
            "type": "string",
            "enum": [
              "CRA_BANK_ACCOUNT_VERIFICATION"
            ]
          },
          "variant": {
            "$ref": "#/components/schemas/CheckVariant"
          },
          "state": {
            "$ref": "#/components/schemas/CheckState"
          },
          "performed_on": {
            "$ref": "#/components/schemas/DateTime"
          },
          "errors": {
            "type": "array",
            "description": "An array of errors that occurred when the check was performed. Hopefully empty!",
            "items": {
              "$ref": "#/components/schemas/Error"
            }
          },
          "task_ids": {
            "type": "array",
            "description": "The tasks related to this check",
            "items": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          "instructed_externally": {
            "type": "boolean",
            "description": "Whether the check ran externally and contains the formatted result"
          },
          "decision": {
            "$ref": "#/components/schemas/DecisionClass"
          },
          "providers": {
            "type": "array",
            "description": "An array of records on the providers that were used to run this check",
            "items": {
              "type": "object",
              "properties": {
                "provider_name": {
                  "type": "string",
                  "description": "The name of a provider used to run this check"
                },
                "variant_name": {
                  "type": "string",
                  "description": "The name of the variant used to run this check"
                },
                "is_monitored": {
                  "type": "boolean",
                  "description": "If present, this flag specifies if the result from this provider is monitored."
                }
              }
            }
          }
        }
      },
      "CheckResourceCRABankAccountVerification": {
        "x-ms-discriminator-value ": "CRA_BANK_ACCOUNT_VERIFICATION",
        "allOf": [
          {
            "$ref": "#/components/schemas/CheckResource"
          },
          {
            "title": "CheckResourceCRABankAccountVerification",
            "description": "For details refer to [Check Reference](/reference/checks/individuals/bank-account-verification)",
            "type": "object",
            "properties": {
              "input_data": {
                "$ref": "#/components/schemas/IndividualData"
              },
              "output_data": {
                "type": "object",
                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                "properties": {
                  "entity_type": {
                    "description": "Entity type the check was run on",
                    "type": "string",
                    "enum": [
                      "INDIVIDUAL"
                    ]
                  },
                  "bank_account_verifications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BankAccountVerification"
                    }
                  },
                  "bank_account_validations": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BankAccountVerification"
                    }
                  },
                  "address_history": {
                    "$ref": "#/components/schemas/AddressHistory"
                  }
                }
              },
              "decision": {
                "$ref": "#/components/schemas/DecisionClass"
              },
              "result": {
                "$ref": "#/components/schemas/CheckResult"
              }
            }
          }
        ]
      },
      "CheckResourceDeviceFraudDetection": {
        "x-ms-discriminator-value": "DEVICE_FRAUD_DETECTION",
        "allOf": [
          {
            "$ref": "#/components/schemas/CheckResource"
          },
          {
            "type": "object",
            "title": "CheckResourceDeviceFraudDetection",
            "description": "For details refer to [Check Reference](/developer/v4/check-reference/individual-checks/device-fraud-detection)",
            "properties": {
              "device_metadata": {
                "$ref": "#/components/schemas/DeviceMetadata"
              },
              "input_data": {
                "$ref": "#/components/schemas/IndividualData"
              },
              "output_data": {
                "type": "object",
                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                "properties": {
                  "device_metadata": {
                    "$ref": "#/components/schemas/DeviceMetadata"
                  },
                  "device_fraud_detection": {
                    "$ref": "#/components/schemas/DeviceFraudDetection"
                  },
                  "ip_location": {
                    "$ref": "#/components/schemas/IPLocation"
                  }
                }
              },
              "result": {
                "$ref": "#/components/schemas/CheckResult"
              }
            },
            "required": [
              "check_type",
              "device_metadata"
            ]
          }
        ]
      },
      "CheckResourceDocumentFetch": {
        "x-ms-discriminator-value": "DOCUMENT_FETCH",
        "allOf": [
          {
            "$ref": "#/components/schemas/CheckResource"
          },
          {
            "type": "object",
            "title": "CheckResourceDocumentFetch",
            "description": "For details refer to [Check Reference](/reference/checks/individuals/document-fetch)",
            "properties": {
              "source": {
                "description": "The source the document result is being fetched from",
                "enum": [
                  "JUMIO",
                  "ONFIDO",
                  "GENERIC"
                ]
              },
              "reference": {
                "description": "The source's document reference, refer to specific provider documentation",
                "type": "string"
              },
              "category": {
                "$ref": "#/components/schemas/DocumentCategory"
              },
              "input_data": {
                "$ref": "#/components/schemas/IndividualData"
              },
              "output_data": {
                "type": "object",
                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                "properties": {
                  "documents": {
                    "type": "array",
                    "description": "The documents checked and their results",
                    "items": {
                      "$ref": "#/components/schemas/Document"
                    }
                  },
                  "entity_type": {
                    "description": "Entity type the check was run on",
                    "type": "string",
                    "enum": [
                      "INDIVIDUAL"
                    ]
                  }
                }
              },
              "result": {
                "$ref": "#/components/schemas/CheckResult"
              }
            },
            "required": [
              "source",
              "reference"
            ]
          }
        ]
      },
      "CheckResourceDocumentVerification": {
        "x-ms-discriminator-value": "DOCUMENT_VERIFICATION",
        "allOf": [
          {
            "$ref": "#/components/schemas/CheckResource"
          },
          {
            "type": "object",
            "title": "CheckResourceDocumentVerification",
            "description": "For details refer to [Check Reference](/reference/checks/individuals/document-verification)",
            "properties": {
              "document_id": {
                "$ref": "#/components/schemas/UUID"
              },
              "input_data": {
                "$ref": "#/components/schemas/IndividualData"
              },
              "output_data": {
                "type": "object",
                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                "properties": {
                  "documents": {
                    "type": "array",
                    "description": "The documents checked and their results",
                    "items": {
                      "$ref": "#/components/schemas/Document"
                    }
                  },
                  "entity_type": {
                    "description": "Entity type the check was run on",
                    "type": "string",
                    "enum": [
                      "INDIVIDUAL"
                    ]
                  }
                }
              },
              "result": {
                "$ref": "#/components/schemas/CheckResult"
              }
            },
            "required": [
              "document_id"
            ]
          }
        ]
      },
      "CheckResourceIdentityCheck": {
        "x-ms-discriminator-value": "IDENTITY_CHECK",
        "allOf": [
          {
            "$ref": "#/components/schemas/CheckResource"
          },
          {
            "type": "object",
            "title": "CheckResourceIdentityCheck",
            "description": "For details refer to [Check Reference](/reference/checks/individuals/individual-check)",
            "properties": {
              "input_data": {
                "$ref": "#/components/schemas/IndividualData"
              },
              "output_data": {
                "type": "object",
                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                "properties": {
                  "credit_ref": {
                    "$ref": "#/components/schemas/CreditReference"
                  },
                  "db_matches": {
                    "$ref": "#/components/schemas/DatabaseMatches"
                  },
                  "electronic_id_check": {
                    "type": "object",
                    "description": "The resulting matches of an EKYC check",
                    "properties": {
                      "matches": {
                        "type": "array",
                        "description": "List of matches for the EKYC check",
                        "items": {
                          "$ref": "#/components/schemas/EKYCMatch"
                        }
                      },
                      "rules": {
                        "type": "array",
                        "description": "List of rules that were used to compute the result",
                        "items": {
                          "$ref": "#/components/schemas/EKYCRuleResult"
                        }
                      },
                      "credit_files": {
                        "type": "array",
                        "description": "List of credit files that were matched for this profile or a no hit record",
                        "items": {
                          "$ref": "#/components/schemas/EKYCCreditFileMatch"
                        }
                      },
                      "provider_reference_number": {
                        "type": "string",
                        "description": "The provider reference for this EKYC request"
                      },
                      "provider_url": {
                        "type": "string",
                        "description": "A link to an external provider page, containing metadata for the associated check"
                      },
                      "provider_result": {
                        "type": "boolean",
                        "description": "Indicates if the check result is calculated using the result returned by the provider"
                      }
                    },
                    "required": [
                      "matches"
                    ]
                  },
                  "entity_type": {
                    "description": "Entity type the check was run on",
                    "type": "string",
                    "enum": [
                      "INDIVIDUAL"
                    ]
                  }
                }
              },
              "result": {
                "$ref": "#/components/schemas/CheckResult"
              }
            }
          }
        ]
      },
      "CheckResourceIndividualManualForm": {
        "x-ms-discriminator-value": "INDIVIDUAL_MANUAL_FORM",
        "allOf": [
          {
            "$ref": "#/components/schemas/CheckResource"
          },
          {
            "type": "object",
            "title": "CheckResourceIndividualManualForm",
            "description": "Please speak to your account manager for more information.",
            "properties": {
              "form_id": {
                "type": "string",
                "description": "The ID of the form being filled"
              },
              "input_data": {
                "$ref": "#/components/schemas/IndividualData"
              },
              "output_data": {
                "$ref": "#/components/schemas/IndividualData"
              },
              "result": {
                "$ref": "#/components/schemas/CheckResult"
              }
            }
          }
        ]
      },
      "CheckResourcePepsAndSanctionsScreen": {
        "x-ms-discriminator-value": "PEPS_AND_SANCTIONS_SCREEN",
        "allOf": [
          {
            "$ref": "#/components/schemas/CheckResource"
          },
          {
            "type": "object",
            "title": "CheckResourcePepsAndSanctionsScreen",
            "description": "For details refer to [Check Reference](/reference/checks/individuals/peps-and-sanctions)",
            "properties": {
              "disable_initial_screen": {
                "type": "boolean",
                "description": "Defaults to `false`.  If `true` do not perform an initial screen and only monitor"
              },
              "disable_monitoring": {
                "type": "boolean",
                "description": "Defaults to `false`. If `true` ongoing monitoring will be disabled"
              },
              "input_data": {
                "$ref": "#/components/schemas/IndividualData"
              },
              "output_data": {
                "type": "object",
                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                "properties": {
                  "sanctions_results": {
                    "type": "array",
                    "description": "The returned PEPs and Sanctions",
                    "items": {
                      "$ref": "#/components/schemas/SanctionsResult"
                    }
                  },
                  "entity_type": {
                    "description": "Entity type the check was run on",
                    "type": "string",
                    "enum": [
                      "INDIVIDUAL"
                    ]
                  }
                }
              },
              "result": {
                "$ref": "#/components/schemas/CheckResult"
              }
            }
          }
        ]
      },
      "CheckResourceVisaCheck": {
        "x-ms-discriminator-value": "VISA_CHECK",
        "allOf": [
          {
            "$ref": "#/components/schemas/CheckResource"
          },
          {
            "type": "object",
            "title": "CheckResourceVisaCheck",
            "description": "For details refer to [Check Reference](/developer/v4/check-reference/individual-checks/visa-check)",
            "properties": {
              "document_metadata": {
                "$ref": "#/components/schemas/DocumentMetadata"
              },
              "input_data": {
                "$ref": "#/components/schemas/IndividualData"
              },
              "output_data": {
                "type": "object",
                "description": "The resultant output of the check.\n\n**Note**: This was correct at the time the check was performed. Some check types will go out of date over time",
                "properties": {
                  "visa_check": {
                    "type": "object",
                    "description": "The returned Visa Check",
                    "properties": {
                      "visas": {
                        "type": "array",
                        "description": "The visa(s) returned by the check, if any",
                        "items": {
                          "$ref": "#/components/schemas/Visa"
                        }
                      },
                      "failure_reason": {
                        "type": "string",
                        "description": "Reason why the check failed, if any"
                      }
                    }
                  }
                }
              },
              "result": {
                "$ref": "#/components/schemas/CheckResult"
              }
            },
            "required": [
              "check_type",
              "document_metadata"
            ]
          }
        ]
      },
      "CheckState": {
        "description": "The progress of the execution of a check",
        "type": "string",
        "enum": [
          "PENDING",
          "RUNNING",
          "COMPLETE"
        ],
        "x-ms-enum": {
          "name": "CheckState",
          "modelAsString": true
        },
        "title": "CheckState"
      },
      "CheckType": {
        "description": "The type of a check run against a profile",
        "type": "string",
        "enum": [
          "IDENTITY_CHECK",
          "DOCUMENT_VERIFICATION",
          "DOCUMENT_FETCH",
          "PEPS_AND_SANCTIONS_SCREEN",
          "VISA_CHECK",
          "CRA_BANK_ACCOUNT_VERIFICATION",
          "DEVICE_FRAUD_DETECTION",
          "FRAUD_SCREENING",
          "GEOCODING",
          "COMPANY_REGISTRY",
          "COMPANY_CHARITIES_REGISTRY",
          "COMPANY_OWNERSHIP",
          "COMPANY_DATA",
          "COMPANY_FILINGS",
          "COMPANY_FILING_PURCHASE",
          "COMPANY_PEPS_AND_SANCTIONS_SCREEN",
          "INDIVIDUAL_MANUAL_FORM",
          "COMPANY_MANUAL_FORM",
          "COMPANY_DOCUMENT_VERIFICATION",
          "COMPANY_FRAUD_SCREENING",
          "COMPANY_MERCHANT_FRAUD_SCREENING"
        ],
        "x-ms-enum": {
          "name": "CheckType",
          "modelAsString": true
        },
        "title": "CheckType"
      },
      "CheckVariant": {
        "description": "The identifier of a variant of a check.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "alias": {
            "type": "string",
            "description": "Alias of the check variant"
          },
          "name": {
            "type": "string",
            "description": "Name of the check variant"
          }
        },
        "required": [
          "id"
        ],
        "title": "CheckVariant"
      },
      "CheckRequest": {
        "description": "The identifier for the check. Possible values can be found in the [check reference](/reference/checks/introduction)",
        "type": "object",
        "properties": {
          "check_type": {
            "$ref": "#/components/schemas/CheckType"
          },
          "variant": {
            "$ref": "#/components/schemas/AliasOrId"
          },
          "task_ids": {
            "type": "array",
            "description": "The tasks related to this check",
            "items": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          "instructed_externally": {
            "type": "boolean",
            "description": "Whether the check ran externally and contains the formatted result"
          },
          "output_data": {
            "type": "object",
            "description": "Contains the formatted result for an externally run check"
          },
          "result": {
            "type": "string",
            "description": "Only sent for externally run checks. The meaning of the result will depend on your provider and settings"
          }
        },
        "required": [
          "check_type"
        ]
      },
      "CheckedDocumentField": {
        "type": "string",
        "description": "Which field(s) were being checked",
        "enum": [
          "FIELD_GIVEN_NAMES",
          "FIELD_FAMILY_NAME",
          "FIELD_DOB",
          "FIELD_NATIONALITY",
          "FIELD_EXPIRY",
          "FIELD_NUMBER",
          "FIELD_GENDER",
          "FIELD_ISSUED",
          "FIELD_ADDRESS",
          "FIELD_ISSUING_COUNTRY",
          "FIELD_MRZ"
        ],
        "x-ms-enum": {
          "name": "CheckedDocumentField",
          "modelAsString": true
        },
        "title": "CheckedDocumentField"
      },
      "CollectionStep": {
        "type": "object",
        "title": "CollectionStep",
        "description": "Collection steps are the data you wish to collect from a profile. In PassFort Collect the fields required to complete the step will be presented to the user. Collection steps are automatically removed from a profile when the data they collect is fulfilled. If a profile has `collection_steps`, all checks instructed on a profile will go into a `PENDING` state until all steps are completed. ",
        "required": [
          "collection_type"
        ],
        "properties": {
          "collection_type": {
            "$ref": "#/components/schemas/CollectionStepType"
          }
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/CollectionStepFullName"
          },
          {
            "$ref": "#/components/schemas/CollectionStepDOB"
          },
          {
            "$ref": "#/components/schemas/CollectionStepAddressHistory"
          },
          {
            "$ref": "#/components/schemas/CollectionStepNationality"
          },
          {
            "$ref": "#/components/schemas/CollectionStepDocument"
          },
          {
            "$ref": "#/components/schemas/CollectionStepDocumentForTask"
          },
          {
            "$ref": "#/components/schemas/CollectionStepEmail"
          },
          {
            "$ref": "#/components/schemas/CollectionStepPhoneNumber"
          }
        ],
        "discriminator": {
          "propertyName": "collection_type",
          "mapping": {
            "ADDRESS_HISTORY": "#/components/schemas/CollectionStepAddressHistory",
            "DOB": "#/components/schemas/CollectionStepDOB",
            "FULL_NAME": "#/components/schemas/CollectionStepFullName",
            "NATIONALITY": "#/components/schemas/CollectionStepNationality",
            "DOCUMENT": "#/components/schemas/CollectionStepDocument",
            "EMAIL": "#/components/schemas/CollectionStepEmail",
            "DOCUMENT_FOR_TASK": "#/components/schemas/CollectionStepDocumentForTask",
            "PHONE_NUMBER": "#/components/schemas/CollectionStepPhoneNumber"
          }
        }
      },
      "CollectionStepAddressHistory": {
        "x-ms-discriminator-value": "ADDRESS_HISTORY",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionStep"
          },
          {
            "type": "object",
            "title": "CollectionStepAddressHistory",
            "description": "Collect the profile's current address"
          }
        ]
      },
      "CollectionStepDOB": {
        "x-ms-discriminator-value": "DOB",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionStep"
          },
          {
            "type": "object",
            "title": "CollectionStepDOB",
            "description": "Collect the profile's date of birth",
            "properties": {
              "precision": {
                "type": "string",
                "enum": [
                  "YEAR",
                  "YEAR_MONTH",
                  "YEAR_MONTH_DAY"
                ],
                "description": "Specify the precision required for date of birth. If unspecified will default to `YEAR_MONTH_DAY`"
              }
            }
          }
        ]
      },
      "CollectionStepDocument": {
        "x-ms-discriminator-value": "DOCUMENT",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionStep"
          },
          {
            "type": "object",
            "title": "CollectionStepDocument",
            "description": "Collect a document from the profile (which can be used for a document verification)",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/UUID"
              },
              "category": {
                "$ref": "#/components/schemas/DocumentCategory"
              },
              "facial_similarity": {
                "type": "boolean",
                "description": "Defaults to `false`. If this document is going to be used for a `DOCUMENT_VERIFICATION` that performs a facial similarity check, enabling this will ask the user to upload a photo of themselves in addition to their document"
              },
              "allowed_types": {
                "type": "array",
                "description": "Specifies the types of document that are accepted. These will be presented as options to the user completing the step",
                "items": {
                  "$ref": "#/components/schemas/DocumentType"
                }
              }
            },
            "required": [
              "collection_type",
              "category",
              "allowed_types"
            ]
          }
        ]
      },
      "CollectionStepDocumentForTask": {
        "x-ms-discriminator-value": "DOCUMENT_FOR_TASK",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionStep"
          },
          {
            "type": "object",
            "title": "CollectionStepDocumentForTask",
            "description": "Collect a document from the profile",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/UUID"
              },
              "task_id": {
                "$ref": "#/components/schemas/UUID"
              }
            },
            "required": [
              "collection_type",
              "task_id"
            ]
          }
        ]
      },
      "CollectionStepEmail": {
        "x-ms-discriminator-value": "EMAIL",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionStep"
          },
          {
            "type": "object",
            "title": "CollectionStepEmail",
            "description": "Collect the profile's email"
          }
        ]
      },
      "CollectionStepFullName": {
        "x-ms-discriminator-value": "FULL_NAME",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionStep"
          },
          {
            "type": "object",
            "title": "CollectionStepFullName",
            "description": "Collect the profile's full name"
          }
        ]
      },
      "CollectionStepNationality": {
        "x-ms-discriminator-value": "NATIONALITY",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionStep"
          },
          {
            "type": "object",
            "title": "CollectionStepNationality",
            "description": "Collect the profile's nationality"
          }
        ]
      },
      "CollectionStepPhoneNumber": {
        "x-ms-discriminator-value": "PHONE_NUMBER",
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionStep"
          },
          {
            "type": "object",
            "title": "CollectionStepPhoneNumber",
            "description": "Collect the profile's phone number"
          }
        ]
      },
      "CollectionStepType": {
        "description": "Specifies the data to be collected",
        "type": "string",
        "enum": [
          "FULL_NAME",
          "DOB",
          "ADDRESS_HISTORY",
          "NATIONALITY",
          "DOCUMENT",
          "DOCUMENT_FOR_TASK",
          "EMAIL",
          "PHONE_NUMBER"
        ],
        "x-ms-enum": {
          "name": "CollectionStepType",
          "modelAsString": true
        },
        "title": "CollectionStepType"
      },
      "Coordinates": {
        "description": "Geo Coordinates",
        "properties": {
          "longitude": {
            "type": "number",
            "description": "Longitude of coordinate (-180.0 to 80.0)"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude of coordinate (-90.0 to 90.0)"
          },
          "name": {
            "type": "string",
            "description": "A label for the coordinate"
          }
        },
        "required": [
          "longitude",
          "latitude"
        ],
        "type": "object",
        "title": "Coordinates"
      },
      "CountryCode": {
        "description": "[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) (3 letter country code)",
        "type": "string",
        "enum": [
          "AFG",
          "ALA",
          "ALB",
          "DZA",
          "ASM",
          "AND",
          "AGO",
          "AIA",
          "ATA",
          "ATG",
          "ARG",
          "ARM",
          "ABW",
          "AUS",
          "AUT",
          "AZE",
          "BHS",
          "BHR",
          "BGD",
          "BRB",
          "BLR",
          "BEL",
          "BLZ",
          "BEN",
          "BMU",
          "BTN",
          "BOL",
          "BES",
          "BIH",
          "BWA",
          "BVT",
          "BRA",
          "IOT",
          "BRN",
          "BGR",
          "BFA",
          "BDI",
          "KHM",
          "CMR",
          "CAN",
          "CPV",
          "CYM",
          "CAF",
          "TCD",
          "CHL",
          "CHN",
          "CXR",
          "CCK",
          "COL",
          "COM",
          "COG",
          "COD",
          "COK",
          "CRI",
          "CIV",
          "HRV",
          "CUB",
          "CUW",
          "CYP",
          "CZE",
          "DNK",
          "DJI",
          "DMA",
          "DOM",
          "ECU",
          "EGY",
          "SLV",
          "GNQ",
          "ERI",
          "EST",
          "ETH",
          "FLK",
          "FRO",
          "FJI",
          "FIN",
          "FRA",
          "GUF",
          "PYF",
          "ATF",
          "GAB",
          "GMB",
          "GEO",
          "DEU",
          "GHA",
          "GIB",
          "GRC",
          "GRL",
          "GRD",
          "GLP",
          "GUM",
          "GTM",
          "GGY",
          "GIN",
          "GNB",
          "GUY",
          "HTI",
          "HMD",
          "VAT",
          "HND",
          "HKG",
          "HUN",
          "ISL",
          "IND",
          "IDN",
          "IRN",
          "IRQ",
          "IRL",
          "IMN",
          "ISR",
          "ITA",
          "JAM",
          "JPN",
          "JEY",
          "JOR",
          "KAZ",
          "KEN",
          "KIR",
          "PRK",
          "KOR",
          "KWT",
          "KGZ",
          "LAO",
          "LVA",
          "LBN",
          "LSO",
          "LBR",
          "LBY",
          "LIE",
          "LTU",
          "LUX",
          "MAC",
          "MKD",
          "MDG",
          "MWI",
          "MYS",
          "MDV",
          "MLI",
          "MLT",
          "MHL",
          "MTQ",
          "MRT",
          "MUS",
          "MYT",
          "MEX",
          "FSM",
          "MDA",
          "MCO",
          "MNG",
          "MNE",
          "MSR",
          "MAR",
          "MOZ",
          "MMR",
          "NAM",
          "NRU",
          "NPL",
          "NLD",
          "NCL",
          "NZL",
          "NIC",
          "NER",
          "NGA",
          "NIU",
          "NFK",
          "MNP",
          "NOR",
          "OMN",
          "PAK",
          "PLW",
          "PSE",
          "PAN",
          "PNG",
          "PRY",
          "PER",
          "PHL",
          "PCN",
          "POL",
          "PRT",
          "PRI",
          "QAT",
          "REU",
          "RKS",
          "ROU",
          "RUS",
          "RWA",
          "BLM",
          "SHN",
          "KNA",
          "LCA",
          "MAF",
          "SPM",
          "VCT",
          "WSM",
          "SMR",
          "STP",
          "SAU",
          "SEN",
          "SRB",
          "SYC",
          "SLE",
          "SGP",
          "SXM",
          "SVK",
          "SVN",
          "SLB",
          "SOM",
          "ZAF",
          "SGS",
          "ESP",
          "LKA",
          "SDN",
          "SUR",
          "SSD",
          "SJM",
          "SWZ",
          "SWE",
          "CHE",
          "SYR",
          "TWN",
          "TJK",
          "TZA",
          "THA",
          "TLS",
          "TGO",
          "TKL",
          "TON",
          "TTO",
          "TUN",
          "TUR",
          "TKM",
          "TCA",
          "TUV",
          "UGA",
          "UKR",
          "ARE",
          "GBR",
          "USA",
          "UMI",
          "URY",
          "UZB",
          "VUT",
          "VEN",
          "VNM",
          "VGB",
          "VIR",
          "WLF",
          "ESH",
          "XXX",
          "YEM",
          "ZMB",
          "ZWE",
          "UNK",
          "ZZZ"
        ],
        "example": "GBR",
        "title": "CountryCode"
      },
      "CountryMatchData": {
        "description": "Information about the match against the input country",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CountryMatchType"
          },
          "country_code": {
            "$ref": "#/components/schemas/CountryCode"
          }
        },
        "title": "CountryMatchData"
      },
      "CountryMatchType": {
        "description": "Determine what information matched against the input country",
        "type": "string",
        "enum": [
          "AFFILIATION",
          "CITIZENSHIP",
          "CURRENT_OWNERSHIP",
          "OWNERSHIP",
          "JURISDICTION",
          "REGISTRATION",
          "ALLEGATION",
          "RESIDENCE",
          "RISK",
          "FORMERLY_SANCTIONED",
          "SANCTIONED",
          "NATIONALITY"
        ],
        "title": "CountryMatchType"
      },
      "CreateFileResource": {
        "description": "The base unit data type of documents. This just represents a file. For more context on the file you probably want to wrap it with a DocumentImageResource",
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "The binary data of the image, encoded in base64.\n\nThis is used on _upload_, but is not available on _download_ (see `encrypted_data`)"
          }
        },
        "required": [
          "data"
        ],
        "title": "CreateFileResource"
      },
      "CreateNoteResource": {
        "type": "object",
        "description": "Definition used to create a new note (with optional associated files)",
        "properties": {
          "text": {
            "type": "string",
            "description": "Note text"
          },
          "attachments": {
            "description": "Associated files (if present)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinimalFileResource"
            }
          }
        },
        "title": "CreateNoteResource"
      },
      "CreditReference": {
        "type": "object",
        "description": "Matches from Credit Database",
        "properties": {
          "cais_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "cais_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "cais_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "caps_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "caps_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "caps_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ccj_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ccj_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "partial": {
            "$ref": "#/components/schemas/MatchResult"
          }
        },
        "title": "CreditReference"
      },
      "CustomFieldData": {
        "type": "object",
        "additionalProperties": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "type": "string"
            },
            {
              "type": "boolean"
            }
          ]
        },
        "description": "Data that has been set based on the custom fields schema",
        "title": "CustomFieldData"
      },
      "DataURI": {
        "description": "Data URI format, typically used for decrypted images",
        "type": "string",
        "pattern": "^data:((?:[a-zA-Z0-9+/]+/(?:(?!;).)+)?)((?:;[a-zA-Z0-9+/=]*[^;])*),(.+)$",
        "title": "DataURI",
        "example": "data:text/plain;base64,SGVsbG8sIFdvcmxkIQ%3D%3D"
      },
      "DatabaseMatches": {
        "type": "object",
        "description": "Matches from other Databases",
        "properties": {
          "electoral_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "electoral_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "electoral_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "national_id_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "national_id_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "national_id_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ssn_name": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ssn_name_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ssn_name_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "telephone_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "telephone_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_consumer_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_consumer_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_postal_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_postal_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_landline_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_landline_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_mobile_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_mobile_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_financial_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_financial_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_financial_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_voter_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_voter_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_address_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "aut_financial_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "aut_financial_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "aut_financial_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "aut_financial_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "che_financial_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "che_financial_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "che_financial_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "arg_financial_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "arg_financial_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "arg_financial_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_consent_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_consent_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_consent_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_landline_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_landline_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nld_consent_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nld_consent_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nld_consent_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_consent_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_consent_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_property_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_property_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_landline_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_landline_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_consent_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_consent_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_consent_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_landline_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_landline_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_landline_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bra_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bra_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bra_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_landline_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_landline_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_landline_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_landline_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_landline_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_landline_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_personal_id_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_personal_id_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_personal_id_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "onfido_proprietary_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "onfido_proprietary_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "onfido_proprietary_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "government_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "government_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "government_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "business_registration_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "business_registration_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "business_registration_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "consumer_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "consumer_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "consumer_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "utility_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "utility_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "utility_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "postal_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "postal_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "postal_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "commercial_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "commercial_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "commercial_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "mortality_list": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ssn_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ssn_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "electoral_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "national_id_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "national_id_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "telephone_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "telephone_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "telephone_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_consumer_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_consumer_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_consumer_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_postal_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_postal_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_postal_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_landline_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_landline_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_landline_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_mobile_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_mobile_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_mobile_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_financial_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "deu_financial_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_voter_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_voter_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_voter_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_address_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_address_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_address_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "irl_address_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "aut_financial_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ita_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ita_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ita_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ita_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "ita_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_landline_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_landline_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_landline_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_landline_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_landline_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_personal_id_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_personal_id_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_personal_id_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_personal_id_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "dnk_personal_id_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "che_financial_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "che_financial_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "arg_financial_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "arg_financial_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_consent_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_consent_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_landline_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_landline_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "lux_landline_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nld_consent_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nld_consent_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_consent_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_consent_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_consent_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_property_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_property_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_property_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_landline_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_landline_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nzl_landline_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_consent_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_consent_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_landline_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "esp_landline_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bra_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bra_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_landline_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "bel_landline_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_landline_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "fra_landline_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_marketing_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_marketing_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_marketing_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_marketing_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_marketing_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_landline_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_landline_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_landline_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_landline_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_landline_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_mobile_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_mobile_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_mobile_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_mobile_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "nor_mobile_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_personal_id_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "swe_personal_id_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "usa_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "usa_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "usa_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "usa_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "usa_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "chn_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "chn_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "chn_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "chn_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "chn_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "hkg_population_exact_dob": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "hkg_population_exact": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "hkg_population_partial": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "hkg_population_address": {
            "$ref": "#/components/schemas/MatchResult"
          },
          "hkg_population_dob": {
            "$ref": "#/components/schemas/MatchResult"
          }
        },
        "title": "DatabaseMatches"
      },
      "Date": {
        "description": "Exact date in `YYYY-MM-DD` format",
        "type": "string",
        "pattern": "(^\\d{4}-\\d{2}-\\d{2}$)",
        "title": "Date",
        "example": "1992-11-24"
      },
      "DateMatchData": {
        "description": "Information about the match against the input date",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DateMatchType"
          },
          "date": {
            "$ref": "#/components/schemas/PartialDate"
          }
        },
        "required": [
          "date"
        ],
        "title": "DateMatchData"
      },
      "DateMatchType": {
        "description": "Determine what information matched against the input date",
        "type": "string",
        "enum": [
          "DOB",
          "DECEASED",
          "END_OF_PEP",
          "END_OF_RCA_TO_PEP"
        ],
        "title": "DateMatchType"
      },
      "DateTime": {
        "description": "Exact date and time in `YYYY-MM-DD hh:mm:ss` format.",
        "type": "string",
        "pattern": "^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$",
        "title": "DateTime",
        "example": "2017-02-08 15:16:01"
      },
      "DecisionClass": {
        "description": "Classification used for unifying check results.",
        "type": "string",
        "enum": [
          "PASS",
          "FAIL",
          "PARTIAL",
          "WARN",
          "ERROR"
        ],
        "x-ms-enum": {
          "name": "DecisionClass",
          "modelAsString": true
        },
        "title": "DecisionClass"
      },
      "DeviceFraudDetection": {
        "type": "object",
        "description": "Device fraud detection check results",
        "properties": {
          "provider_reference": {
            "type": "string",
            "description": "Reference supplied by the check provider"
          },
          "recommendation": {
            "type": "string",
            "description": "Recommendation given by the provider"
          },
          "recommendation_reason": {
            "type": "string",
            "description": "Human readable reason for the given recommendation"
          },
          "total_score": {
            "type": "integer",
            "description": "Score calculated by the provider"
          },
          "matched_rules": {
            "type": "array",
            "description": "List of matching rules for this device",
            "items": {
              "$ref": "#/components/schemas/DeviceFraudRule"
            }
          },
          "used_test_environment": {
            "type": "boolean",
            "description": "If the test environment was used to generate the matched rules"
          }
        },
        "title": "DeviceFraudDetection"
      },
      "DeviceFraudRule": {
        "description": "Matching fraud rule for a device",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the rule"
          },
          "reason": {
            "type": "string",
            "description": "Reason this rule was activated"
          },
          "score": {
            "type": "integer",
            "description": "Contribution to the score from this rule"
          }
        },
        "title": "DeviceFraudRule"
      },
      "DeviceMetadata": {
        "description": "Data about a users device",
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "A token representing the device"
          },
          "stated_ip": {
            "type": "string",
            "description": "Stated IP address of the device"
          },
          "action": {
            "type": "string",
            "description": "The associated action"
          },
          "reference_id": {
            "type": "string",
            "description": "Device reference ID"
          },
          "device_id": {
            "type": "string",
            "description": "Device identifier allocated by the check provider"
          },
          "device_type": {
            "type": "string",
            "description": "Type of device determined by the check provider"
          }
        },
        "required": [
          "token"
        ],
        "title": "DeviceMetadata"
      },
      "Document": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentBase"
          },
          {
            "type": "object",
            "title": "Document",
            "description": "A single document with one or more images",
            "properties": {
              "images": {
                "type": "array",
                "description": "Images that make up the document. For example a `DRIVING_LICENCE` will have a `FRONT` and a `BACK`",
                "items": {
                  "$ref": "#/components/schemas/DocumentImageResourceMinimal"
                }
              }
            }
          }
        ]
      },
      "DocumentBase": {
        "description": "A single document with one or more images",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "category": {
            "$ref": "#/components/schemas/DocumentCategory"
          },
          "document_type": {
            "$ref": "#/components/schemas/DocumentType"
          },
          "extracted_data": {
            "$ref": "#/components/schemas/DocumentData"
          },
          "verification_result": {
            "$ref": "#/components/schemas/DocumentResult"
          },
          "files": {
            "type": "array",
            "description": "Files associated with the document",
            "items": {
              "$ref": "#/components/schemas/DocumentFile"
            }
          }
        },
        "required": [
          "category",
          "document_type"
        ],
        "title": "DocumentBase"
      },
      "DocumentCategory": {
        "description": "Describes how this document should be used by the system",
        "type": "string",
        "enum": [
          "PROOF_OF_IDENTITY",
          "PROOF_OF_SOURCE_OF_WEALTH",
          "PROOF_OF_SOURCE_OF_FUNDS",
          "PROOF_OF_ADDRESS",
          "SUPPORTING",
          "COMPANY_FILING",
          "DATA_SUMMARY",
          "PROOF_OF_BANK_ACCOUNT",
          "PROOF_OF_TAX_STATUS"
        ],
        "x-ms-enum": {
          "name": "DocumentCategory",
          "modelAsString": true
        },
        "title": "DocumentCategory"
      },
      "DocumentCheck": {
        "type": "object",
        "description": "Details of a document check",
        "properties": {
          "category": {
            "type": "string",
            "description": "Category of forgery check"
          },
          "type": {
            "type": "string",
            "description": "Type of forgery check"
          },
          "result": {
            "$ref": "#/components/schemas/DecisionClass"
          }
        },
        "title": "DocumentCheck"
      },
      "DocumentData": {
        "description": "All data extracted from a document",
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string",
            "description": "Name of the issuing authority"
          },
          "issuing_country": {
            "$ref": "#/components/schemas/ICAOCode"
          },
          "number": {
            "type": "string",
            "description": "Document number"
          },
          "issued": {
            "$ref": "#/components/schemas/Date"
          },
          "expiry": {
            "$ref": "#/components/schemas/Date"
          },
          "personal_details": {
            "$ref": "#/components/schemas/PersonalDetails"
          },
          "address_history": {
            "$ref": "#/components/schemas/AddressHistory"
          },
          "mrz1": {
            "type": "string",
            "description": "Line one of the [Machine-Readable Zone](https://en.wikipedia.org/wiki/Machine-readable_passport)"
          },
          "mrz2": {
            "type": "string",
            "description": "Line two of the MRZ"
          },
          "mrz3": {
            "type": "string",
            "description": "Line three of the MRZ"
          },
          "result": {
            "$ref": "#/components/schemas/DocumentResult"
          },
          "external_service": {
            "type": "string",
            "description": "External service"
          },
          "external_ref": {
            "type": "string",
            "description": "External service reference"
          }
        },
        "title": "DocumentData"
      },
      "DocumentFile": {
        "description": "A file that is related to the document",
        "type": "object",
        "properties": {
          "file_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "type": {
            "$ref": "#/components/schemas/DocumentFileType"
          },
          "reference": {
            "type": "string",
            "description": "A reference associated with the file, such as the id of the document stored on a 3rd party integration."
          }
        },
        "required": [
          "file_id",
          "type"
        ],
        "title": "DocumentFile"
      },
      "DocumentFileType": {
        "description": "How this image relates to the document",
        "type": "string",
        "enum": [
          "LIVE_VIDEO",
          "VIDEO_FRAME"
        ],
        "x-ms-enum": {
          "name": "DocumentFileType",
          "modelAsString": true
        },
        "title": "DocumentFileType"
      },
      "DocumentImageResource": {
        "description": "A single image of a document",
        "type": "object",
        "properties": {
          "provider_reference": {
            "type": "string",
            "description": "The provider's reference for this document image, where applicable"
          },
          "image_type": {
            "$ref": "#/components/schemas/DocumentImageType"
          },
          "data": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Base64"
              },
              {
                "$ref": "#/components/schemas/DataURI"
              }
            ],
            "description": "The binary data of the image, encoded in base64.\n\n**Max file size:** 10MB\n\n**Supported file types**: PNG, GIF, JPG, PDF\n\nThis is used on _upload_, but is not available on _download_ (see `encrypted_data`)"
          }
        },
        "required": [
          "data"
        ],
        "title": "DocumentImageResource"
      },
      "DocumentImageResourceGet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentImageResourceMinimal"
          },
          {
            "type": "object",
            "description": "A single image of a document",
            "title": "DocumentImageResourceGet",
            "properties": {
              "decrypted_data": {
                "$ref": "#/components/schemas/DataURI"
              }
            }
          }
        ]
      },
      "DocumentImageResourceMinimal": {
        "description": "A single image of a document",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "provider_reference": {
            "type": "string",
            "description": "The provider's reference for this document image, where applicable"
          },
          "image_type": {
            "$ref": "#/components/schemas/DocumentImageType"
          },
          "upload_date": {
            "$ref": "#/components/schemas/DateTime"
          },
          "file_id": {
            "$ref": "#/components/schemas/UUID"
          }
        },
        "title": "DocumentImageResourceMinimal"
      },
      "DocumentImageType": {
        "description": "How this image relates to the document",
        "type": "string",
        "enum": [
          "FRONT",
          "BACK",
          "FACE"
        ],
        "x-ms-enum": {
          "name": "DocumentImageType",
          "modelAsString": true
        },
        "title": "DocumentImageType"
      },
      "DocumentMetadata": {
        "description": "A document number and issuer",
        "type": "object",
        "properties": {
          "document_type": {
            "$ref": "#/components/schemas/DocumentTypeForDocumentMetadata"
          },
          "number": {
            "type": "string",
            "description": "The identifying number of the document. Note that PassFort does not validate the number format."
          },
          "country_code": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "issuing_state": {
            "type": "string",
            "description": "The 2 letter state code, provided in the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format, of the country that issued the document"
          },
          "version": {
            "type": "string",
            "description": "The version number of the document"
          }
        },
        "required": [
          "number",
          "country_code",
          "document_type"
        ],
        "title": "DocumentMetadata"
      },
      "DocumentMetadataIdentityNumber": {
        "description": "An identity number",
        "type": "object",
        "properties": {
          "document_type": {
            "$ref": "#/components/schemas/DocumentTypeForDocumentMetadata"
          },
          "number": {
            "type": "string",
            "description": "The identifying number. Note that PassFort does not validate the number format."
          },
          "country_code": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "issuing_state": {
            "type": "string",
            "description": "The 2 letter state code, provided in the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) format, of the country that issued the document"
          },
          "version": {
            "type": "string",
            "description": "The version number of the document"
          }
        },
        "required": [
          "number",
          "country_code",
          "document_type"
        ],
        "title": "DocumentMetadataIdentityNumber"
      },
      "DocumentPost": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentBase"
          },
          {
            "type": "object",
            "description": "A single document with one or more images",
            "title": "DocumentPost",
            "properties": {
              "images": {
                "type": "array",
                "description": "Images that make up the document. For example a `DRIVING_LICENCE` will have a `FRONT` and a `BACK`",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/UUID"
                    }
                  }
                }
              }
            },
            "required": [
              "images"
            ]
          }
        ]
      },
      "DocumentResult": {
        "type": "object",
        "description": "Results of a check on a document",
        "properties": {
          "provider_name": {
            "type": "string",
            "description": "Name of the verification provider"
          },
          "review_date": {
            "$ref": "#/components/schemas/DateTime"
          },
          "provider_information": {
            "type": "array",
            "description": "Additional information returned by a provider",
            "items": {
              "$ref": "#/components/schemas/ProviderField"
            }
          },
          "image_Checks_passed": {
            "type": "boolean",
            "description": "Whether all of the image checks passed. These cover aspects such as the resolution and clarity of the image(s)"
          },
          "image_checks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCheck"
            },
            "description": "Detailed result for each of the image checks performed"
          },
          "document_type_passed": {
            "type": "boolean",
            "description": "If the document is of the correct type"
          },
          "forgery_Checks_passed": {
            "type": "boolean",
            "description": "Whether all of the forgery checks passed. These vary by provider, but may include details such as whether the correct fonts were used on the document"
          },
          "forgery_checks": {
            "type": "array",
            "description": "Detailed result for each of the forgery checks performed",
            "items": {
              "$ref": "#/components/schemas/DocumentCheck"
            }
          },
          "field_checks": {
            "type": "array",
            "description": "These checks ascertain whether the details extracted from the document are valid, and match those submitted on the profile",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "$ref": "#/components/schemas/CheckedDocumentField"
                },
                "result": {
                  "$ref": "#/components/schemas/FieldCheckResult"
                }
              }
            }
          },
          "all_passed": {
            "type": "boolean",
            "description": "Whether all of the image, forgery and field checks passed"
          },
          "error_reason": {
            "type": "string",
            "description": "Message indicating why the document could not be checked"
          }
        },
        "title": "DocumentResult"
      },
      "DocumentType": {
        "description": "Type of document being submitted",
        "type": "string",
        "enum": [
          "PASSPORT",
          "PASSPORT_CARD",
          "DRIVING_LICENCE",
          "STATE_ID",
          "VOTER_ID",
          "BIOMETRIC_STATE_ID",
          "BIRTH_CERTIFICATE",
          "BANK_STATEMENT",
          "FACE_IMAGE",
          "UNKNOWN",
          "COMPANY_ACCOUNTS",
          "COMPANY_CHANGE_OF_ADDRESS",
          "ANNUAL_RETURN",
          "CONFIRMATION_STATEMENT",
          "STATEMENT_OF_CAPITAL",
          "CHANGE_OF_NAME",
          "INCORPORATION",
          "LIQUIDATION",
          "MISCELLANEOUS",
          "MORTGAGE",
          "CHANGE_OF_OFFICERS",
          "RESOLUTION",
          "CREDIT_REPORT",
          "CREDIT_CHECK",
          "REGISTER_REPORT",
          "REGISTER_CHECK",
          "DATA_SUMMARY",
          "CHANGE_OF_PSC",
          "ADVERSE_MEDIA",
          "TAX",
          "UTILITY_BILL",
          "HEALTHCARE_ID",
          "TAX_ID",
          "RESIDENCE_ID",
          "RESIDENCE_OTHER",
          "VISA"
        ],
        "x-ms-enum": {
          "name": "DocumentType",
          "modelAsString": true
        },
        "title": "DocumentType"
      },
      "DocumentTypeForDocumentMetadata": {
        "description": "Type of document suitable for Documents_metadata",
        "type": "string",
        "enum": [
          "PASSPORT",
          "PASSPORT_CARD",
          "DRIVING_LICENCE",
          "STATE_ID",
          "VOTER_ID",
          "BIOMETRIC_STATE_ID",
          "HEALTHCARE_ID",
          "TAX_ID",
          "RESIDENCE_ID",
          "RESIDENCE_OTHER",
          "VISA"
        ],
        "title": "DocumentTypeForDocumentMetadata"
      },
      "EKYCCreditFileMatch": {
        "type": "object",
        "description": "Describes a credit file match (if there was one)",
        "properties": {
          "unique_number": {
            "type": "string",
            "description": "The unique reference for this credit file. Will be null if there was no hit",
            "nullable": true
          },
          "bureau_name": {
            "type": "string",
            "description": "The name of the bureau owning this file"
          },
          "extra": {
            "type": "array",
            "description": "List of other fields that were retrieved from the bureau",
            "items": {
              "$ref": "#/components/schemas/EKYCRecordField"
            }
          }
        },
        "title": "EKYCCreditFileMatch"
      },
      "EKYCDatabaseType": {
        "description": "Types of databases used for an EKYC check",
        "type": "string",
        "enum": [
          "ALERT",
          "CIVIL",
          "CREDIT",
          "MORTALITY",
          "IGNORED"
        ],
        "title": "EKYCDatabaseType"
      },
      "EKYCMatch": {
        "description": "Describes a match against a database for an EKYC check",
        "type": "object",
        "properties": {
          "database_name": {
            "type": "string",
            "description": "Name of the database containing a match"
          },
          "database_type": {
            "$ref": "#/components/schemas/EKYCDatabaseType"
          },
          "matched_fields": {
            "type": "array",
            "description": "List of matched fields for this database",
            "items": {
              "$ref": "#/components/schemas/EKYCMatchField"
            }
          },
          "date_first_seen": {
            "$ref": "#/components/schemas/Date"
          },
          "date_of_last_activity": {
            "$ref": "#/components/schemas/Date"
          },
          "extra": {
            "type": "array",
            "description": "List of other fields that were retrieved from the provider",
            "items": {
              "$ref": "#/components/schemas/EKYCRecordField"
            }
          },
          "count": {
            "type": "integer",
            "description": "How many times this set of fields was matched in this database"
          }
        },
        "required": [
          "database_name",
          "database_type",
          "matched_fields"
        ],
        "title": "EKYCMatch"
      },
      "EKYCMatchField": {
        "description": "Fields that can matched on for an EKYC check",
        "type": "string",
        "enum": [
          "FORENAME",
          "SURNAME",
          "ADDRESS",
          "DOB",
          "IDENTITY_NUMBER",
          "IDENTITY_NUMBER_SUFFIX"
        ],
        "title": "EKYCMatchField"
      },
      "EKYCRecordField": {
        "description": "Describes any field retrieved from a provider for record keeping",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the field that was retrieved from the provider"
          },
          "value": {
            "type": "string",
            "description": "The value of the field, as retrieved from the provider",
            "nullable": true
          }
        },
        "required": [
          "name",
          "value"
        ],
        "title": "EKYCRecordField"
      },
      "EKYCRuleResult": {
        "description": "Describes a rule and how it is used to determine the outcome of an EKYC check",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human readable description of the rule"
          },
          "active": {
            "type": "boolean",
            "description": "True if this is the rule that was matched for the result of this check"
          },
          "distinct_sources": {
            "type": "boolean",
            "description": "True if distinct sources are required to satisfy this rule"
          },
          "database_types": {
            "type": "array",
            "description": "The types of databases that this rule applies to",
            "items": {
              "$ref": "#/components/schemas/EKYCDatabaseType"
            }
          },
          "requires": {
            "type": "array",
            "description": "Describes what what requirements need to be met to satisfy this rule.",
            "items": {
              "type": "object",
              "properties": {
                "matched_fields": {
                  "type": "array",
                  "description": "Describes the fields that need to be matched to meet this requirement",
                  "items": {
                    "$ref": "#/components/schemas/EKYCMatchField"
                  }
                },
                "count": {
                  "type": "integer",
                  "description": "How many times this set of fields needs to be matched to meet this requirement"
                }
              }
            }
          },
          "satisfied_by": {
            "type": "array",
            "description": "Lists the database names and fields that were used to satisfy this rule",
            "items": {
              "type": "object",
              "properties": {
                "database_name": {
                  "type": "string",
                  "description": "The name of the database used to match the required fields to this rule"
                },
                "matched_fields": {
                  "type": "array",
                  "description": "A list of all fields matched against the database",
                  "items": {
                    "$ref": "#/components/schemas/EKYCMatchField"
                  }
                },
                "required_fields": {
                  "type": "array",
                  "description": "The subset of fields matched from the database that were required by this rule",
                  "items": {
                    "$ref": "#/components/schemas/EKYCMatchField"
                  }
                },
                "count": {
                  "type": "integer",
                  "description": "In most cases the count will be one. However, if this rule does not require distinct sources, then this count may be more than one. For example, this could indicate that a requirement of two address matches were both satisfied by the same database."
                }
              }
            }
          },
          "result": {
            "type": "string",
            "description": "The check result corresponding to this rule",
            "enum": [
              "2+2",
              "1+1",
              "Fail"
            ]
          }
        },
        "required": [
          "active",
          "result",
          "database_types",
          "requires"
        ],
        "title": "EKYCRuleResult"
      },
      "EncryptedData": {
        "type": "object",
        "description": "When a document is uploaded to PassFort, it is immediately encrypted. For security reasons, our web-facing servers are not able to access this data.\n\nThis means that PassFort does not currently support downloading previously uploading documents",
        "properties": {},
        "title": "EncryptedData"
      },
      "EntityData": {
        "description": "Base class for profile data. An entity is either an individual or a company",
        "oneOf": [
          {
            "$ref": "#/components/schemas/IndividualData"
          }
        ],
        "title": "EntityData",
        "discriminator": {
          "propertyName": "entity_type",
          "mapping": {
            "INDIVIDUAL": "#/components/schemas/IndividualData",
            "COMPANY": "#/components/schemas/CompanyData"
          }
        }
      },
      "EntityDataBase": {
        "description": "Base class for profile data. An entity is either an individual or a company",
        "type": "object",
        "properties": {
          "custom_fields_data": {
            "$ref": "#/components/schemas/CustomFieldData"
          },
          "customer_ref": {
            "type": "string",
            "description": "You can supply your own reference to an entity. This might correspond to your database models.\n\nThis reference is included in webhooks"
          },
          "documents": {
            "description": "Set of documents to submit",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "external_refs": {
            "type": "object",
            "description": "References used to pull data directly from external providers",
            "properties": {
              "jumio_netverify": {
                "type": "array",
                "description": "The reference provided from [Jumio Netverify](https://www.jumio.com/netverify/). Multiple references can be provided",
                "items": {
                  "$ref": "#/components/schemas/UUID"
                }
              },
              "generic": {
                "type": "string",
                "description": "Provider reference for all integrations unless otherwise specified. See provider documentation for specifics."
              }
            }
          },
          "fraud_detection": {
            "$ref": "#/components/schemas/FraudDetection"
          }
        },
        "required": [
          "entity_type"
        ],
        "title": "EntityDataBase"
      },
      "EntityType": {
        "description": "Either an individual or a company",
        "type": "string",
        "enum": [
          "INDIVIDUAL",
          "COMPANY"
        ],
        "title": "EntityType"
      },
      "Error": {
        "type": "object",
        "description": "Details of an error",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ErrorCodes"
          },
          "message": {
            "type": "string",
            "description": "A human readable description of the error message"
          },
          "source": {
            "$ref": "#/components/schemas/ErrorSource"
          },
          "stage_name": {
            "type": "string",
            "description": "The name of the stage that produced the error"
          },
          "stage_type": {
            "type": "string",
            "description": "The type of stage that produced the error"
          },
          "info": {
            "description": "Additional metadata about the error"
          }
        },
        "title": "Error"
      },
      "ErrorCodes": {
        "type": "integer",
        "description": "1xx: Normal errors\n| Code | Meaning |\n|---|---|\n| 101 | MISSING_REQUIRED_FIELDS |\n| 102 | ENTITY_ALREADY_APPROVED |\n| 103 | ENTITY_ALREADY_REJECTED |\n| 104 | CHARGEABLE_LIMIT_REACHED |\n| 105 | CONSTRAINTS_NOT_SATISFIED |\n| 106 | COUNTRY_NOT_SUPPORTED |\n| 107 | CHECK_LIMIT_REACHED |\n\n2xx: Caller errors, caused by incorrect use of the system\n| Code | Meaning |\n|---|---|\n| 201 | INVALID_INPUT_DATA |\n| 202 | DATA_PRESENT |\n| 203 | MISSING_API_KEY |\n| 204 | INVALID_API_KEY |\n\n3xx: Transient errors, caused by temporary problems with the system\n| Code | Meaning |\n|---|---|\n| 301 | USER_MIGRATION_ERROR |\n| 302 | PROVIDER_CONNECTION_ERROR |\n| 303 | PROVIDER_UNKNOWN_ERROR |\n\n4xx: Internal errors\n| Code | Meaning |\n|---|---|\n| 401 | UNKNOWN_INTERNAL_ERROR |\n| 402 | TRANSITION_ERROR |\n\n5xx: Miscellaneous errors\n| Code | Meaning |\n|---|---|\n| 501 | LEGACY_ERROR |\n| 502 | PROCESS_NOT_SETUP |",
        "title": "ErrorCodes"
      },
      "ErrorSource": {
        "description": "The source of an error which occurred while running a check. Provider errors may indicate that the upstream provider for a given check is experiencing downtime",
        "type": "string",
        "enum": [
          "ENGINE",
          "API",
          "PROVIDER"
        ],
        "title": "ErrorSource"
      },
      "EventData": {
        "description": "Additional information specific to the event type",
        "properties": {
          "event_type": {
            "$ref": "#/components/schemas/EventDataEventType"
          }
        },
        "required": [
          "event_type"
        ],
        "oneOf": [
          {
            "$ref": "#/components/schemas/EventDataPepFlag"
          },
          {
            "$ref": "#/components/schemas/EventDataSanctionFlag"
          },
          {
            "$ref": "#/components/schemas/EventDataAdverseMediaFlag"
          },
          {
            "$ref": "#/components/schemas/EventDataReferFlag"
          }
        ],
        "title": "EventData",
        "discriminator": {
          "propertyName": "event_type",
          "mapping": {
            "PEP_FLAG": "#/components/schemas/EventDataPepFlag",
            "SANCTION_FLAG": "#/components/schemas/EventDataSanctionFlag",
            "ADVERSE_MEDIA_FLAG": "#/components/schemas/EventDataAdverseMediaFlag",
            "REFER_FLAG": "#/components/schemas/EventDataReferFlag"
          }
        }
      },
      "EventDataAdverseMediaFlag": {
        "x-ms-discriminator-value": "ADVERSE_MEDIA_FLAG",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventData"
          },
          {
            "description": "Information related to an adverse media flag event",
            "type": "object",
            "properties": {
              "match_id": {
                "type": "string",
                "description": "The related match identifier"
              },
              "gender": {
                "type": "string",
                "description": "gender of match"
              },
              "deceased_dates": {
                "type": "array",
                "description": "Reported death dates",
                "items": {
                  "$ref": "#/components/schemas/PartialDate"
                }
              },
              "deceased": {
                "type": "boolean",
                "description": "Whether this individual is deceased"
              },
              "modified_date": {
                "$ref": "#/components/schemas/DateTime"
              },
              "provider_name": {
                "type": "string",
                "description": "Name of the verification provider"
              },
              "match_name": {
                "type": "string",
                "description": "The name that was matched against"
              },
              "brand_text": {
                "type": "string",
                "description": "Data provider copyright notice"
              },
              "match_custom_label": {
                "type": "string",
                "description": "The provider-specific display name for this match"
              },
              "match_dates": {
                "type": "array",
                "description": "Dates of the matched results",
                "items": {
                  "$ref": "#/components/schemas/PartialDate"
                }
              },
              "match_dates_data": {
                "type": "array",
                "description": "Dates of the matched sanctions",
                "items": {
                  "$ref": "#/components/schemas/DateMatchData"
                }
              },
              "match_countries": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to national origin",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              },
              "match_countries_address": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to location",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              },
              "match_countries_data": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to national origin",
                "items": {
                  "$ref": "#/components/schemas/CountryMatchData"
                }
              },
              "score": {
                "type": "number",
                "minimum": 0.0,
                "maximum": 1.0,
                "description": "The score of the match"
              },
              "aliases": {
                "type": "array",
                "description": "Aliases used by the matched",
                "items": {
                  "type": "string"
                }
              },
              "previous_names": {
                "type": "array",
                "description": "Previous names used by the matched",
                "items": {
                  "type": "string"
                }
              },
              "associates": {
                "type": "array",
                "description": "Associated to the returned PEPs and Sanctions",
                "items": {
                  "$ref": "#/components/schemas/Associate"
                }
              },
              "profile_notes": {
                "type": "string",
                "description": "Profile notes returned by check"
              },
              "details": {
                "type": "array",
                "description": "More information about the match",
                "items": {
                  "$ref": "#/components/schemas/MatchDetail"
                }
              },
              "media": {
                "type": "array",
                "description": "Related media",
                "items": {
                  "$ref": "#/components/schemas/MediaArticle"
                }
              },
              "documents": {
                "description": "Documents related to the PEP match",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "riskography": {
                "type": "string",
                "description": "Description of PEP or sanctioned persons background"
              },
              "sources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Source"
                },
                "description": "Sources used to derive sanctions and PEP information"
              },
              "remarks": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Remarks about a sanctioned person"
              },
              "identifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Identification"
                },
                "description": "Identifications such as a passport"
              },
              "locations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                },
                "description": "Locations related to a PEP or sanctioned entity, such as birth place"
              }
            },
            "title": "EventDataAdverseMediaFlag"
          }
        ]
      },
      "EventDataEventType": {
        "type": "string",
        "description": "The type of event",
        "enum": [
          "PEP_FLAG",
          "SANCTION_FLAG",
          "ADVERSE_MEDIA_FLAG",
          "REFER_FLAG",
          "DOCUMENT_EXPIRY",
          "TRANSACTION_ALERT",
          "REVIEW_NEEDED",
          "CHECK_EXPIRY",
          "FRAUD_FLAG"
        ],
        "title": "EventDataEventType"
      },
      "EventDataPepFlag": {
        "x-ms-discriminator-value": "PEP_FLAG",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventData"
          },
          {
            "description": "Information related to a PEP flag event",
            "type": "object",
            "title": "EventDataPepFlag",
            "properties": {
              "match_id": {
                "type": "string",
                "description": "The related match identifier"
              },
              "modified_date": {
                "$ref": "#/components/schemas/DateTime"
              },
              "provider_name": {
                "type": "string",
                "description": "Data provider source"
              },
              "match_name": {
                "type": "string",
                "description": "The name that was matched against"
              },
              "brand_text": {
                "type": "string",
                "description": "Data provider copyright notice"
              },
              "match_custom_label": {
                "type": "string",
                "description": "The provider-specific display name for this match"
              },
              "match_dates": {
                "type": "array",
                "description": "Dates of the matched result",
                "items": {
                  "$ref": "#/components/schemas/PartialDate"
                }
              },
              "match_dates_data": {
                "type": "array",
                "description": "Dates of the matched sanctions",
                "items": {
                  "$ref": "#/components/schemas/DateMatchData"
                }
              },
              "match_countries": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to national origin",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              },
              "match_countries_address": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to location",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              },
              "match_countries_data": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to national origin",
                "items": {
                  "$ref": "#/components/schemas/CountryMatchData"
                }
              },
              "score": {
                "type": "number",
                "minimum": 0.0,
                "maximum": 1.0,
                "description": "The score of the match"
              },
              "aliases": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Aliases used by the matched"
              },
              "previous_names": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Previous names used by the matched"
              },
              "associates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Associate"
                },
                "description": "Associated to the returned PEPs and Sanctions"
              },
              "profile_notes": {
                "type": "string",
                "description": "Profile notes returned by check"
              },
              "details": {
                "type": "array",
                "description": "More information about the match",
                "items": {
                  "$ref": "#/components/schemas/MatchDetail"
                }
              },
              "pep": {
                "$ref": "#/components/schemas/PEP"
              },
              "riskography": {
                "type": "string",
                "description": "Description of PEP or sanctioned persons background"
              },
              "locations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                },
                "description": "Locations related to a PEP, such as a place of birth"
              },
              "identifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Identification"
                },
                "description": "Identifications such as a passport"
              },
              "remarks": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Remarks about a PEP"
              },
              "pep_rating": {
                "type": "string",
                "description": "PEP Rating"
              },
              "sources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Source"
                },
                "description": "Sources used to derive sanctions and PEP information"
              },
              "gender": {
                "type": "string",
                "description": "Gender of person"
              },
              "deceased_dates": {
                "type": "array",
                "description": "Reported death dates",
                "items": {
                  "$ref": "#/components/schemas/PartialDate"
                }
              },
              "deceased": {
                "type": "boolean",
                "description": "Whether this individual is deceased"
              },
              "documents": {
                "description": "Documents related to the PEP match",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        ]
      },
      "EventDataReferFlag": {
        "x-ms-discriminator-value": "REFER_FLAG",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventData"
          },
          {
            "description": "Information related to a refer flag event",
            "type": "object",
            "properties": {
              "match_id": {
                "type": "string",
                "description": "The related match identifier"
              },
              "gender": {
                "type": "string",
                "description": "gender of match"
              },
              "deceased_dates": {
                "type": "array",
                "description": "Reported death dates",
                "items": {
                  "$ref": "#/components/schemas/PartialDate"
                }
              },
              "deceased": {
                "type": "boolean",
                "description": "Whether this individual is deceased"
              },
              "modified_date": {
                "$ref": "#/components/schemas/DateTime"
              },
              "provider_name": {
                "type": "string",
                "description": "Name of the verification provider"
              },
              "match_name": {
                "type": "string",
                "description": "The name that was matched against"
              },
              "brand_text": {
                "type": "string",
                "description": "Data provider copyright notice"
              },
              "match_custom_label": {
                "type": "string",
                "description": "The provider-specific display name for this match"
              },
              "match_dates": {
                "type": "array",
                "description": "Dates of the matched results",
                "items": {
                  "$ref": "#/components/schemas/PartialDate"
                }
              },
              "match_dates_data": {
                "type": "array",
                "description": "Dates of the matched sanctions",
                "items": {
                  "$ref": "#/components/schemas/DateMatchData"
                }
              },
              "match_countries": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to national origin",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              },
              "match_countries_address": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to location",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              },
              "match_countries_data": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to national origin",
                "items": {
                  "$ref": "#/components/schemas/CountryMatchData"
                }
              },
              "score": {
                "type": "number",
                "minimum": 0.0,
                "maximum": 1.0,
                "description": "The score of the match"
              },
              "aliases": {
                "type": "array",
                "description": "Aliases used by the matched",
                "items": {
                  "type": "string"
                }
              },
              "previous_names": {
                "type": "array",
                "description": "Previous names used by the matched",
                "items": {
                  "type": "string"
                }
              },
              "associates": {
                "type": "array",
                "description": "Associated to the returned PEPs and Sanctions",
                "items": {
                  "$ref": "#/components/schemas/Associate"
                }
              },
              "profile_notes": {
                "type": "string",
                "description": "Profile notes returned by check"
              },
              "details": {
                "type": "array",
                "description": "More information about the match",
                "items": {
                  "$ref": "#/components/schemas/MatchDetail"
                }
              },
              "documents": {
                "description": "Documents related to the PEP match",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "riskography": {
                "type": "string",
                "description": "Description of PEP or sanctioned persons background"
              },
              "sources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Source"
                },
                "description": "Sources used to derive sanctions and PEP information"
              },
              "remarks": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Remarks about a sanctioned person"
              },
              "identifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Identification"
                },
                "description": "Identifications such as a passport"
              },
              "locations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                },
                "description": "Locations related to a PEP or sanctioned entity, such as birth place"
              }
            },
            "title": "EventDataReferFlag"
          }
        ]
      },
      "EventDataSanctionFlag": {
        "x-ms-discriminator-value": "SANCTION_FLAG",
        "allOf": [
          {
            "$ref": "#/components/schemas/EventData"
          },
          {
            "description": "Information related to a sanction flag event",
            "type": "object",
            "properties": {
              "match_id": {
                "type": "string",
                "description": "The related match identifier"
              },
              "modified_date": {
                "$ref": "#/components/schemas/DateTime"
              },
              "provider_name": {
                "type": "string",
                "description": "Data provider source"
              },
              "match_name": {
                "type": "string",
                "description": "The name that was matched against"
              },
              "brand_text": {
                "type": "string",
                "description": "Data provider copyright notice"
              },
              "match_custom_label": {
                "type": "string",
                "description": "The provider-specific display name for this match"
              },
              "match_dates": {
                "type": "array",
                "description": "Dates of the matched result",
                "items": {
                  "$ref": "#/components/schemas/PartialDate"
                }
              },
              "match_dates_data": {
                "type": "array",
                "description": "Dates of the matched sanctions",
                "items": {
                  "$ref": "#/components/schemas/DateMatchData"
                }
              },
              "match_countries": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to national origin",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              },
              "match_countries_address": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to location",
                "items": {
                  "$ref": "#/components/schemas/CountryCode"
                }
              },
              "match_countries_data": {
                "type": "array",
                "description": "Countries of the matched sanctions relating to national origin",
                "items": {
                  "$ref": "#/components/schemas/CountryMatchData"
                }
              },
              "score": {
                "type": "number",
                "minimum": 0.0,
                "maximum": 1.0,
                "description": "The score of the match"
              },
              "aliases": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Aliases used by the matched"
              },
              "previous_names": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Previous names used by the matched"
              },
              "associates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Associate"
                },
                "description": "Associated to the returned PEPs and Sanctions"
              },
              "profile_notes": {
                "type": "string",
                "description": "Profile notes returned by check"
              },
              "details": {
                "type": "array",
                "description": "More information about the match",
                "items": {
                  "$ref": "#/components/schemas/MatchDetail"
                }
              },
              "sanctions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Sanction"
                },
                "description": "The sanctions returned from check"
              },
              "documents": {
                "description": "Documents related to the sanctions match",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Document"
                }
              },
              "riskography": {
                "type": "string",
                "description": "Description of sanctioned persons background"
              },
              "locations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                },
                "description": "Locations related to a sanctioned person, such as a place of birth"
              },
              "identifications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Identification"
                },
                "description": "Identifications such as a passport"
              },
              "remarks": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Remarks about a sanctioned person"
              },
              "sources": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Source"
                },
                "description": "Sources used to derive sanctions and PEP information"
              },
              "gender": {
                "type": "string",
                "description": "Gender of person"
              },
              "deceased_dates": {
                "type": "array",
                "description": "Reported death dates",
                "items": {
                  "$ref": "#/components/schemas/PartialDate"
                }
              },
              "deceased": {
                "type": "boolean",
                "description": "Whether this individual is deceased"
              }
            },
            "title": "EventDataSanctionFlag"
          }
        ]
      },
      "EventDataWebhooks": {
        "type": "object",
        "description": "Details about the created event(s).",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "resolution": {
            "$ref": "#/components/schemas/EventResolution"
          },
          "event_type": {
            "type": "string",
            "enum": [
              "PEP_FLAG",
              "SANCTION_FLAG",
              "ADVERSE_MEDIA_FLAG",
              "REFER_FLAG",
              "CHECK_EXPIRY",
              "FRAUD_FLAG"
            ],
            "description": "The type of event. Note that `CHECK_EXPIRY` is returned when one or more new matches have been discovered during [Creditsafe monitoring](https://help.passfort.com/article/78i6x3qlzb-configuring-creditsafe#creditsafe_monitoring) and `FRAUD_FLAG` is returned when a match is discovered during a [Merchant fraud check](https://help.passfort.com/article/ukwfntz21e-checks#merchant_fraud_check).",
            "example": "PEP_FLAG"
          }
        },
        "title": "EventDataWebhooks"
      },
      "EventResolution": {
        "description": "A single profile resolution",
        "type": "string",
        "enum": [
          "UNRESOLVED",
          "MISMATCH",
          "MATCH",
          "IGNORE",
          "CREATED_TASK"
        ],
        "title": "EventResolution"
      },
      "EventResource": {
        "description": "A single profile event (such as a PEP or Sanction match)",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/DateTime"
          },
          "resolution": {
            "$ref": "#/components/schemas/EventResolution"
          },
          "resolution_reason": {
            "type": "string",
            "description": "Users provided reason for resolution"
          },
          "resolution_date": {
            "$ref": "#/components/schemas/DateTime"
          },
          "resolution_task_ids": {
            "type": "array",
            "description": "Related Task Ids",
            "items": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          "data": {
            "$ref": "#/components/schemas/EventData"
          }
        },
        "title": "EventResource"
      },
      "EventType": {
        "type": "string",
        "description": "Profile event type",
        "enum": [
          "PEP_FLAG",
          "SANCTION_FLAG",
          "DOCUMENT_EXPIRY",
          "TRANSACTION_ALERT",
          "REVIEW_NEEDED",
          "ADVERSE_MEDIA_FLAG",
          "REFER_FLAG",
          "CHECK_EXPIRY",
          "FRAUD_FLAG"
        ],
        "title": "EventType"
      },
      "FalsePositive": {
        "description": "Details of a false positive",
        "type": "object",
        "properties": {
          "match_id": {
            "type": "string",
            "description": "ID of the Sanction Match"
          },
          "match_modified_date": {
            "$ref": "#/components/schemas/DateTime"
          },
          "reasons": {
            "type": "array",
            "description": "Reasons for false positive",
            "items": {
              "type": "string",
              "description": "Reason"
            }
          },
          "issuer": {
            "type": "string",
            "description": "Name of issuing authority"
          }
        },
        "title": "FalsePositive"
      },
      "FieldCheckResult": {
        "type": "string",
        "description": "Whether the field(s) were valid",
        "enum": [
          "CHECK_UNCERTAIN",
          "CHECK_INVALID",
          "CHECK_VALID"
        ],
        "x-ms-enum": {
          "name": "FieldCheckResult",
          "modelAsString": true
        },
        "title": "FieldCheckResult"
      },
      "FileResource": {
        "description": "The base unit data type of documents. This just represents a file. For more context on the file you probably want to wrap it with a DocumentImageResource",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "name": {
            "type": "string",
            "description": "The file name"
          }
        },
        "anyOf": [
          {
            "properties": {
              "encrypted_data": {
                "$ref": "#/components/schemas/EncryptedData"
              }
            },
            "required": [
              "encrypted_data"
            ]
          },
          {
            "properties": {},
            "required": [
              "decrypted_data"
            ]
          },
          {
            "properties": {}
          }
        ],
        "required": [
          "id"
        ],
        "title": "FileResource"
      },
      "FraudCase": {
        "type": "object",
        "description": "An individual fraud detection case",
        "properties": {
          "database_type": {
            "$ref": "#/components/schemas/FraudDetectionDatabaseType"
          },
          "id": {
            "type": "string",
            "description": "The identifier for the case."
          },
          "reporting_company": {
            "type": "string",
            "description": "The company which reported the case."
          },
          "case_type": {
            "type": "string",
            "description": "The underlying type of fraud."
          },
          "product": {
            "type": "string",
            "description": "The type of product associated to the fraud."
          },
          "do_not_filter": {
            "type": "boolean",
            "description": "Certain types of Case must always be reviewed when received in search results - they must not be filtered out by any automated processing."
          },
          "supply_date": {
            "$ref": "#/components/schemas/Date"
          },
          "application_date": {
            "$ref": "#/components/schemas/Date"
          },
          "claim_date": {
            "$ref": "#/components/schemas/Date"
          },
          "filing_reason": {
            "type": "array",
            "description": "The company which reported the case",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "FraudCase"
      },
      "FraudDetection": {
        "type": "object",
        "description": "Fraud detection check results",
        "properties": {
          "database_type": {
            "$ref": "#/components/schemas/FraudDetectionDatabaseType"
          },
          "search_reference": {
            "type": "string",
            "description": "Reference supplied by the check provider"
          },
          "match_count": {
            "type": "integer",
            "description": "Number of matches in the database"
          },
          "matches": {
            "type": "array",
            "description": "The found fraud matches",
            "items": {
              "$ref": "#/components/schemas/FraudCase"
            }
          }
        },
        "title": "FraudDetection"
      },
      "FraudDetectionDatabaseType": {
        "type": "string",
        "description": "Fraud detection database type",
        "enum": [
          "CIFAS"
        ],
        "title": "FraudDetectionDatabaseType"
      },
      "FreeformAddress": {
        "x-ms-discriminator-value": "FREEFORM",
        "allOf": [
          {
            "$ref": "#/components/schemas/Address"
          },
          {
            "type": "object",
            "title": "FreeformAddress",
            "description": "Free-form address. Address lines are preferably comma separated, although this is not required.",
            "properties": {
              "country": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "text": {
                "description": "A free text description of the address.",
                "type": "string"
              }
            },
            "required": [
              "country",
              "text",
              "type"
            ]
          }
        ]
      },
      "FullName": {
        "type": "object",
        "description": "The individual's name. This is broken down into different parts",
        "properties": {
          "title": {
            "type": "string",
            "description": "The individual's title"
          },
          "given_names": {
            "type": "array",
            "description": "An array of the individual's given (first & middle) names. To improve matching with data providers, all provided given names are split by whitespace, and any extra whitespace removed",
            "items": {
              "type": "string"
            }
          },
          "family_name": {
            "type": "string",
            "description": "The individual's family name (surname)"
          },
          "alt_family_names": {
            "type": "array",
            "description": "An array of the individual's other family names (surnames). This typically might include a maiden name",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "FullName"
      },
      "Gender": {
        "description": "Gender. Leave unset for non-binary genders",
        "type": "string",
        "enum": [
          "M",
          "F"
        ],
        "title": "Gender"
      },
      "ICAOCode": {
        "description": "[ICAO Code](https://www.icao.int/publications/Documents/9303_p3_cons_en.pdf) used on Passports",
        "anyOf": [
          {
            "$ref": "#/components/schemas/CountryCode"
          },
          {
            "type": "string",
            "enum": [
              "GBN",
              "GBO",
              "GBP",
              "GBS",
              "EUE",
              "UNO",
              "UNA",
              "UNK",
              "XBA",
              "XIM",
              "XCC",
              "XCO",
              "XEC",
              "XPO",
              "XOM",
              "XXA",
              "XXB",
              "XXC",
              "XXX"
            ]
          }
        ],
        "title": "ICAOCode"
      },
      "IPLocation": {
        "description": "Stores the given IP address and the automatically detected country and continent",
        "type": "object",
        "properties": {
          "ip_address": {
            "description": "The IP address of the individual",
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "coordinates": {
            "$ref": "#/components/schemas/Coordinates"
          },
          "proxy": {
            "description": "If the IP is detected to be a proxy",
            "type": "string",
            "enum": [
              "ANONYMOUS"
            ]
          },
          "continent": {
            "description": "The continent where the IP address is located. Automatically detected on a best effort basis",
            "type": "string",
            "enum": [
              "AF",
              "AN",
              "AS",
              "EU",
              "NA",
              "OC",
              "SA"
            ]
          },
          "region": {
            "description": "The region (state/province) where the IP address is located. Automatically detected on a best effort basis",
            "type": "string"
          },
          "city": {
            "description": "The city where the IP address is located. Automatically detected on a best effort basis",
            "type": "string"
          }
        },
        "required": [
          "ip_address"
        ],
        "title": "IPLocation"
      },
      "Identification": {
        "description": "Identification information for a PEP, such as Passport",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of identification, such as Passport"
          },
          "values": {
            "type": "array",
            "description": "Identification values",
            "items": {
              "type": "object",
              "properties": {
                "notes": {
                  "type": "string",
                  "description": "Notes on identification value"
                },
                "value": {
                  "type": "string",
                  "description": "Identification value"
                }
              }
            }
          }
        },
        "title": "Identification"
      },
      "IndividualData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/EntityDataBase"
          },
          {
            "type": "object",
            "title": "IndividualData",
            "description": "Top-level data field for individuals",
            "properties": {
              "entity_type": {
                "type": "string",
                "enum": [
                  "INDIVIDUAL"
                ],
                "description": "You must include set the entity_type as `INDIVIDUAL` to distinguish IndividualData from other types of EntityData"
              },
              "personal_details": {
                "$ref": "#/components/schemas/PersonalDetails"
              },
              "address_history": {
                "$ref": "#/components/schemas/AddressHistory"
              },
              "banking_details": {
                "description": "Individual's banking details",
                "type": "object",
                "properties": {
                  "bank_accounts": {
                    "description": "Individual's bank accounts",
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BankAccount"
                    },
                    "minItems": 1,
                    "maxItems": 1
                  }
                },
                "required": [
                  "bank_accounts"
                ]
              },
              "contact_details": {
                "description": "Phone number and email address",
                "type": "object",
                "properties": {
                  "phone_number": {
                    "type": "string",
                    "description": "The phone number of the individual"
                  },
                  "email": {
                    "type": "string",
                    "description": "The email of the individual"
                  }
                }
              },
              "ip_location": {
                "$ref": "#/components/schemas/IPLocation"
              },
              "documents_metadata": {
                "type": "array",
                "description": "Any additional identity numbers that individual has. Note that the individual's national identity number(s) is stored in `personal_details.national_identity_number`.",
                "items": {
                  "$ref": "#/components/schemas/DocumentMetadataIdentityNumber"
                }
              }
            }
          }
        ]
      },
      "Location": {
        "description": "Locations related to a PEP or sanctioned entity, such as birth place",
        "type": "object",
        "properties": {
          "city": {
            "description": "City",
            "type": "string"
          },
          "country": {
            "description": "Country",
            "type": "string"
          },
          "region": {
            "description": "Region",
            "type": "string"
          },
          "address": {
            "description": "Address",
            "type": "string"
          },
          "type": {
            "description": "Location type, e.g. birth place",
            "type": "string"
          }
        },
        "title": "Location"
      },
      "MatchDetail": {
        "description": "More information about a PEP/sanction/other match",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Heading under which to list the match"
          },
          "text": {
            "type": "string",
            "description": "Detailed description of the match"
          }
        },
        "title": "MatchDetail"
      },
      "MatchResult": {
        "description": "Match result against a database",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Number of matches"
          },
          "match": {
            "type": "boolean",
            "description": "If there was at least one match"
          }
        },
        "title": "MatchResult"
      },
      "MediaArticle": {
        "type": "object",
        "description": "PEPs and Sanctions Media Article",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to article"
          },
          "pdf_url": {
            "type": "string",
            "description": "URL to PDF"
          },
          "title": {
            "type": "string",
            "description": "Title of article"
          },
          "snippet": {
            "type": "string",
            "description": "Article snippet displayed in portal"
          },
          "date": {
            "$ref": "#/components/schemas/Date"
          }
        },
        "title": "MediaArticle"
      },
      "MinimalFileResource": {
        "description": "The base unit data type of documents. This just represents a file. For more context on the file you probably want to wrap it with a DocumentImageResource",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "name": {
            "type": "string",
            "description": "The file name"
          }
        },
        "required": [
          "id"
        ],
        "title": "MinimalFileResource"
      },
      "NameValueField": {
        "type": "object",
        "description": "Name value field pair holding provider specific data",
        "properties": {
          "name": {
            "type": "string",
            "description": "Describes what information is being returned in the value field"
          },
          "value": {
            "type": "string",
            "description": "The value of the field"
          }
        },
        "title": "NameValueField"
      },
      "NoteResource": {
        "type": "object",
        "description": "Base note resource definition",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "text": {
            "type": "string",
            "description": "Note text"
          },
          "attachments": {
            "description": "Associated files (if present)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MinimalFileResource"
            }
          },
          "created_on": {
            "$ref": "#/components/schemas/DateTime"
          },
          "author_name": {
            "description": "If `author_name_customised` is `false` this will be equal to `author.name` or the name of the API key. If `author_name_customised` is `true` this field was manually specified.",
            "type": "string"
          },
          "author_name_customised": {
            "description": "Is `true` if the author_name was set to a custom value.",
            "type": "boolean"
          },
          "author": {
            "description": "Note author",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/UUID"
              },
              "name": {
                "type": "string",
                "description": "Name of user that created note"
              }
            },
            "required": [
              "id",
              "name"
            ]
          }
        },
        "required": [
          "id",
          "created_on"
        ],
        "title": "NoteResource"
      },
      "PEP": {
        "description": "Details of a PEP",
        "type": "object",
        "properties": {
          "match": {
            "type": "boolean",
            "description": "If a PEP was matched"
          },
          "tier": {
            "type": "integer",
            "description": "The highest tier of the matched PEPs"
          },
          "roles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PEPRole"
            },
            "description": "The roles causing the PEP result"
          }
        },
        "title": "PEP"
      },
      "PEPRole": {
        "description": "Details of a PEPRole",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the role e.g. Head of State"
          },
          "tier": {
            "type": "integer",
            "description": "The PEP Tier"
          },
          "from_date": {
            "$ref": "#/components/schemas/PartialDate"
          },
          "to_date": {
            "$ref": "#/components/schemas/PartialDate"
          },
          "is_current": {
            "type": "boolean",
            "description": "If this is a currently held role"
          }
        },
        "title": "PEPRole"
      },
      "PartialDate": {
        "description": "Partial date, recording a year and possibly month and day. The date will be in one of three formats `YYYY`, `YYYY-MM`, `YYYY-MM-DD`",
        "type": "string",
        "pattern": "^\\d{4}(-\\d{2}(-\\d{2})?)?$",
        "title": "PartialDate",
        "example": "1992"
      },
      "NationalIdentityNumber": {
        "type": "object",
        "description": "Some countries issue national identity numbers (or unique taxpayer reference numbers) to individuals. Examples include the [Italian Codice fiscale](https://en.wikipedia.org/wiki/Italian_fiscal_code_card) or the [American Social Security Number (SSN)](https://en.wikipedia.org/wiki/Social_Security_number).",
        "properties": {
          "ESP": {
            "type": "string",
            "description": "The DNI or [Numero de Identificacion Fiscal (NIF)](https://es.wikipedia.org/wiki/N%C3%BAmero_de_identificaci%C3%B3n_fiscal) used in Spain.",
            "pattern": "^[0-9LKXYZM][0-9]{7}[A-Z]$",
            "example": "X0123456L"
          },
          "MEX": {
            "type": "string",
            "description": "The [Clave Unica de Registro de Poblacion (CURP)](https://en.wikipedia.org/wiki/Unique_Population_Registry_Code) or [Tax ID Number (RFC)](https://knowledge.sayari.com/hc/en-us/articles/360030895152-Mexico-Tax-ID-Number-RFC-) used in Mexico.",
            "pattern": "^(([A-Z]{4}[0-9]{6}[A-Z0-9]{3})|([A-Z]{4}[0-9]{6}(H|M)[A-Z]{5}[0-9]{2}))$",
            "example": "ABCD012345EF9"
          },
          "BRA": {
            "type": "string",
            "description": "The [Cadastro de Pessoas Fisicas (CPF)](https://en.wikipedia.org/wiki/Cadastro_de_Pessoas_F%C3%ADsicas) or CNPJ used in Brazil.",
            "pattern": "^[0-9]{11}$",
            "example": "09932330078"
          },
          "CAN": {
            "type": "string",
            "description": "The [Social Insurance Number (SIN)](https://www.canada.ca/en/employment-social-development/services/sin.html) used in Canada.",
            "pattern": "^[0-9]{9}$",
            "example": "099323300"
          },
          "ARG": {
            "type": "string",
            "description": "The Documento Nacional de Identidad (DNI) used in Argentina.",
            "example": "10563145-8"
          },
          "AUS": {
            "type": "string",
            "description": "The passport or driving licence number used in Australia.",
            "example": "M0993353"
          },
          "AUT": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Austria.",
            "example": "U12345678"
          },
          "BEL": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Belgium.",
            "example": "1234567890"
          },
          "CHE": {
            "type": "string",
            "description": "The Swiss identity card used in Switzerland.",
            "example": "s0004156"
          },
          "CHN": {
            "type": "string",
            "description": "The Resident Identity Card number used in China.",
            "example": "RRRRRRYYYYMMDDSSSC"
          },
          "CZE": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in the Czech Republic.",
            "example": "1234567890"
          },
          "DNK": {
            "type": "string",
            "description": "The CPR number or VAT identificiation number (VATIN) used in Denmark.",
            "example": "DDMMYY-0000"
          },
          "EGY": {
            "type": "string",
            "description": "The national ID card number used in Egypt.",
            "example": "11111111111111"
          },
          "FIN": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Finland.",
            "example": "12345678"
          },
          "FRA": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in France.",
            "example": "XX123456789"
          },
          "DEU": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Germany.",
            "example": "123456789"
          },
          "GRC": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Greece.",
            "example": "123456789"
          },
          "HKG": {
            "type": "string",
            "description": "The Hong Kong Identity Card (HKID) number used in Hong Kong.",
            "example": "X123456(A)"
          },
          "HUN": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Hungary.",
            "example": "12345678"
          },
          "IND": {
            "type": "string",
            "description": "The permanent account number (PAN), Voter ID Card or Electoral Photo Identity Card (EPIC) number, or driving licence number used in India.",
            "example": "AAAPL1234C"
          },
          "IRL": {
            "type": "string",
            "description": "The Personal Public Service (PPS) number used in Ireland.",
            "example": "1234567T"
          },
          "ITA": {
            "type": "string",
            "description": "The Codice fiscale used in Italy.",
            "example": "SSSNNNYYMDDZZZZX"
          },
          "JPN": {
            "type": "string",
            "description": "The My Number or Resident Record Code used in Japan.",
            "example": "xxxxxxxxxxx"
          },
          "JOR": {
            "type": "string",
            "description": "The civil identification number used in Jordan.",
            "example": "XXXXXXXXXXXXXX"
          },
          "KWT": {
            "type": "string",
            "description": "The Civil ID number used in Kuwait.",
            "example": "xxxxxxxxxxxx"
          },
          "LUX": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Luxembourg.",
            "example": "12345678"
          },
          "MYS": {
            "type": "string",
            "description": "The Registration Identity Card Number (NRIC) used in Malaysia.",
            "example": "YYMMDD-SS-123G"
          },
          "MLT": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Malta.",
            "example": "12345678"
          },
          "NLD": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Netherlands.",
            "example": "123456789B01"
          },
          "NZL": {
            "type": "string",
            "description": "The driving licence used in New Zealand.",
            "example": "VV123456"
          },
          "OMN": {
            "type": "string",
            "description": "The National ID Card number or Civil Registration number used in Oman.",
            "example": "xxxxxxxxx"
          },
          "PRT": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in Portugal.",
            "example": "123456789"
          },
          "ROU": {
            "type": "string",
            "description": "The Cod Numeric Personal (CNP) used in Romania.",
            "example": "GYYMMDDZZSSSC"
          },
          "RUS": {
            "type": "string",
            "description": "The Taxpayer Personal Identification Number (TIN or INN) or internal Russian passport number used in Russia.",
            "example": "AAAABBBBBBCC"
          },
          "SAU": {
            "type": "string",
            "description": "The National ID Card number or Civil Registration number used in Saudi Arabia.",
            "example": "xxxxxxxxxx"
          },
          "SGP": {
            "type": "string",
            "description": "The National Registration Identity Card (NRIC) used in Singapore.",
            "example": "S/T-XXXXXXXC"
          },
          "ZAF": {
            "type": "string",
            "description": "The Smart ID card used in South Africa.",
            "example": "YYMMDDSSSSCAZ"
          },
          "SWE": {
            "type": "string",
            "description": "The Personal Identification Number (PIN) used in Sweden.",
            "example": "YYMMDD-NNGC"
          },
          "TUR": {
            "type": "string",
            "description": "The Turkish Identification Number (T.C. Kimlik No.) used in Turkey.",
            "example": "11111111111"
          },
          "GBR": {
            "type": "string",
            "description": "The VAT identificiation number (VATIN) used in the United Kingdom.",
            "example": "123456789"
          },
          "USA": {
            "type": "string",
            "description": "The Social Security Number (SSN) used in the United States.",
            "example": "123-45-6789"
          }
        },
        "additionalProperties": {
          "type": "object",
          "description": "National identity numbers for other countries can also be submitted, but their formats will not be validated."
        },
        "x-patternProperties": {
          "^[A-Z]{3}$": {
            "type": "string",
            "description": "National identity numbers for other countries can also be submitted, but their formats will not be validated.",
            "keyName": "countrycode"
          }
        }
      },
      "PersonalDetails": {
        "description": "Personal information about an individual",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/FullName"
          },
          "dob": {
            "$ref": "#/components/schemas/PartialDate"
          },
          "nationality": {
            "$ref": "#/components/schemas/ICAOCode"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "national_identity_number": {
            "$ref": "#/components/schemas/NationalIdentityNumber"
          }
        },
        "title": "PersonalDetails"
      },
      "PreviousName": {
        "type": "object",
        "description": "Previous names of the company",
        "properties": {
          "start": {
            "$ref": "#/components/schemas/Date"
          },
          "end": {
            "$ref": "#/components/schemas/Date"
          },
          "name": {
            "type": "string",
            "description": "The previous company name"
          }
        },
        "title": "PreviousName"
      },
      "ProductApplication": {
        "type": "object",
        "description": "A product application on a profile",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "product": {
            "$ref": "#/components/schemas/ProductResource"
          },
          "associated_role": {
            "$ref": "#/components/schemas/AssociatedRole"
          },
          "status": {
            "$ref": "#/components/schemas/ProductApplicationStatus"
          },
          "flag": {
            "$ref": "#/components/schemas/ProductApplicationFlag"
          },
          "required_tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskVariant"
            },
            "description": "The tasks that are required to be completed for this product application to be approved"
          },
          "history": {
            "description": "A history of the previous application statuses that the profile has been through for this product",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductApplicationStatusChange"
            }
          },
          "flag_history": {
            "description": "A history of the previous application statuses and flags that the profile has been through for this product",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "$ref": "#/components/schemas/ProductApplicationStatus"
                },
                "flag": {
                  "$ref": "#/components/schemas/ProductApplicationFlag"
                },
                "date": {
                  "$ref": "#/components/schemas/DateTime"
                }
              }
            }
          },
          "approval_blockers": {
            "type": "array",
            "description": "Actions that need to be completed before the profile can be approved",
            "items": {
              "$ref": "#/components/schemas/ApprovalBlocker"
            }
          },
          "hidden": {
            "description": "If this product application is hidden",
            "type": "boolean"
          },
          "will_expire_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "risk": {
            "type": "object",
            "description": "Risk result",
            "properties": {
              "risk_model": {
                "type": "object",
                "description": "Link to the risk model used to generate this risk result",
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/UUID"
                  },
                  "version": {
                    "$ref": "#/components/schemas/DateTime"
                  }
                }
              },
              "is_pending": {
                "type": "boolean",
                "description": "True if the risk score is in the process of being recalculated"
              },
              "overall": {
                "type": "object",
                "description": "Overall risk result",
                "properties": {
                  "score": {
                    "type": "number",
                    "description": "The numeric risk score for this product application"
                  },
                  "level": {
                    "$ref": "#/components/schemas/RiskLevelCategory"
                  }
                }
              },
              "expiry": {
                "$ref": "#/components/schemas/Date"
              },
              "thresholds": {
                "type": "object",
                "properties": {
                  "low_medium": {
                    "type": "number",
                    "description": "The threshold between low and medium risk levels"
                  },
                  "medium_high": {
                    "type": "number",
                    "description": "The threshold between medium and high risk levels"
                  }
                }
              }
            }
          }
        },
        "title": "ProductApplication"
      },
      "ProductApplicationFlag": {
        "type": "string",
        "description": "This flag provides information on outstanding actions to complete an application.\n\n* `DECIDED`: the current status of the application is `APPROVED`, `REJECTED` or `CANCELLED` nothing further needs to be performed on the application.\n*`REQUIRES_RISK_SCORE`: the risk score of the profile cannot currently be determined, usually more information is required to change from this flag.\n* `REQUIRES_DATA`: the smart policy was unable to reach an outcome as some required data was missing \n* `WAITING_ON_COLLECTION_STEPS`: there are outstanding CollectionSteps on the profile.\n* `WAITING_ON_CHECKS`: there are checks in progress.\n* `REQUIRES_MANUAL_TASK_COMPLETION`: there is an incomplete task on the application.\n* `READY_FOR_DECISION`: awaiting a final decision on application.\n\nOnly one flag will be returned, if multiple are applicable the first according to the order here will be returned.",
        "enum": [
          "AUTOMATING",
          "DECIDED",
          "WAITING_ON_COLLECTION_STEPS",
          "WAITING_ON_CHECKS",
          "REQUIRES_MANUAL_TASK_COMPLETION",
          "READY_FOR_DECISION",
          "REQUIRES_DATA",
          "REQUIRES_RISK_SCORE",
          "RECALCULATING_RISK",
          "NEARING_EXPIRY",
          "WAITING_ON_ESCALATION"
        ],
        "title": "ProductApplicationFlag"
      },
      "ProductApplicationRevertDecision": {
        "type": "object",
        "description": "Represent a change in a product application status",
        "properties": {
          "comment": {
            "type": "string",
            "description": "A comment about the change"
          }
        },
        "title": "ProductApplicationRevertDecision"
      },
      "ProductApplicationStatus": {
        "type": "string",
        "description": "The current status of the application.\n* `APPLIED`: Can go to `APPROVED` or `REJECTED`.\n* `APPROVED`: Can go to `IN_REVIEW` or `CANCELLED`.\n* `IN_REVIEW`: Can go to `APPROVED` or `CANCELLED`.\n* `REJECTED`: Final state. If a user \"unrejects\" in the UI, it will hide this product application and create a new one with the same history (minus the last rejection).\n* `CANCELLED`: Final state.",
        "enum": [
          "APPLIED",
          "APPROVED",
          "IN_REVIEW",
          "REJECTED",
          "CANCELLED"
        ],
        "title": "ProductApplicationStatus"
      },
      "ProductApplicationStatusChange": {
        "type": "object",
        "description": "Represent a change in a product application status",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ProductApplicationStatus"
          },
          "date": {
            "$ref": "#/components/schemas/DateTime"
          },
          "decisioner": {
            "$ref": "#/components/schemas/User"
          },
          "comment": {
            "type": "string",
            "description": "A comment about the change"
          }
        },
        "title": "ProductApplicationStatusChange"
      },
      "ProductResource": {
        "type": "object",
        "description": "A product definition",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "alias": {
            "type": "string",
            "description": "The alias of the product"
          },
          "name": {
            "type": "string",
            "description": "The name of the product"
          },
          "automatically_apply": {
            "type": "boolean",
            "description": "Whether new profiles should automatically apply for this product"
          },
          "automatically_approve": {
            "type": "boolean",
            "description": "Whether applications for this product are automatically approved when all tasks are completed"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Whether this product has been deleted"
          },
          "is_deletable": {
            "type": "boolean",
            "description": "Whether this product application is deletable"
          },
          "risk_models": {
            "type": "object",
            "description": "The risk models which will be used to calculate risk scores for applications to this product",
            "properties": {
              "INDIVIDUAL": {
                "description": "Unique identifier of the risk model to be used with individual applications",
                "$ref": "#/components/schemas/UUID",
                "nullable": true
              },
              "COMPANY": {
                "description": "Unique identifier of the risk model to be used with company applications",
                "$ref": "#/components/schemas/UUID",
                "nullable": true
              }
            }
          }
        },
        "title": "ProductResource"
      },
      "ProfileCategory": {
        "description": "State of the customer for whom this profile exists",
        "type": "string",
        "enum": [
          "CUSTOMER",
          "PREVIOUS_CUSTOMER",
          "APPLICANT",
          "INACTIVE_APPLICANT"
        ],
        "title": "ProfileCategory"
      },
      "ProfileDeletionRequest": {
        "description": "Request to delete a profile permanently",
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An optional message indicating why the profile was deleted."
          },
          "confirm_id": {
            "$ref": "#/components/schemas/UUID"
          }
        },
        "required": [
          "confirm_id"
        ],
        "title": "ProfileDeletionRequest"
      },
      "ProfileResource": {
        "description": "A customer profile",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "creation_date": {
            "$ref": "#/components/schemas/DateTime"
          },
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "collected_data": {
            "$ref": "#/components/schemas/IndividualData"
          },
          "verified_data": {
            "$ref": "#/components/schemas/IndividualData"
          },
          "checks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckResource"
            },
            "description": "A list of checks performed on this profile"
          },
          "collection_steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CollectionStep"
            },
            "description": "CollectionSteps describe data which is required, but missing on the profile.\n\nThey are typically generated when a check is instructed (but not enough data is avaialble to perform it), or when a compliance officer explictly requests further information"
          },
          "display_name": {
            "type": "string",
            "description": "The name (given and family name of an individual; legal name of a company) of the entity"
          },
          "applications": {
            "type": "array",
            "description": "Product applications on profile",
            "items": {
              "$ref": "#/components/schemas/ProductApplication"
            }
          },
          "task_types": {
            "type": "array",
            "description": "Task types active on profile",
            "items": {
              "$ref": "#/components/schemas/TaskType"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskResource"
            },
            "description": "A list of tasks which need to (or have been) performed on a profile. This set is typically configured as part of your smart policy. You will need to complete all tasks to approve a profile"
          },
          "events": {
            "type": "array",
            "description": "Events on a profile",
            "items": {
              "$ref": "#/components/schemas/EventResource"
            }
          },
          "category": {
            "$ref": "#/components/schemas/ProfileCategory"
          },
          "document_images": {
            "type": "array",
            "description": "List of document images attached to the profile",
            "items": {
              "$ref": "#/components/schemas/DocumentImageResourceMinimal"
            }
          },
          "tags": {
            "type": "array",
            "description": "A list of tags attached to the profile",
            "items": {
              "$ref": "#/components/schemas/TagResource"
            }
          },
          "unresolved_event_types": {
            "type": "array",
            "description": "The types of remaining unresolved events",
            "items": {
              "$ref": "#/components/schemas/EventType"
            }
          },
          "task_progress": {
            "$ref": "#/components/schemas/TaskProgress"
          },
          "has_associates": {
            "type": "boolean",
            "description": "Whether the profile has any associated profiles"
          },
          "has_collection_steps": {
            "type": "boolean",
            "description": "Whether the profile has any outstanding CollectionSteps"
          },
          "linked_to": {
            "type": "array",
            "description": "ID of the linked profile",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/UUID"
                }
            }},
            "readOnly": true
          }
        },
        "title": "ProfileResource"
      },
      "ProfileStatus": {
        "description": "Whether a profile has been suspended or banned",
        "type": "string",
        "enum": [
          "NORMAL",
          "SUSPENDED",
          "BANNED"
        ],
        "title": "ProfileStatus"
      },
      "PropertyMatcherType": {
        "type": "string",
        "description": "Which type of matcher",
        "enum": [
          "STRING_LIST_COMPARE",
          "STRING_LIST_INCLUDES",
          "STRING_LIST_EXCLUDES",
          "TEXT",
          "INTERVAL",
          "DATE_INTERVAL",
          "EXACT_VALUE",
          "SCREENING_EVENTS"
        ],
        "title": "PropertyMatcherType"
      },
      "ProviderField": {
        "type": "object",
        "description": "Provider specific fields",
        "properties": {
          "id": {
            "type": "string",
            "description": "Developer friendly name for the field"
          },
          "name": {
            "type": "string",
            "description": "Describes what information is being returned in the value field"
          },
          "value": {
            "type": "string",
            "description": "The value of the field"
          },
          "api_only": {
            "type": "boolean",
            "description": "If true, the field will not be visible in the portal"
          }
        },
        "required": [
          "id",
          "name",
          "value"
        ],
        "title": "ProviderField"
      },
      "RiskCategory": {
        "type": "object",
        "description": "Risk category configuration",
        "properties": {
          "type": {
            "type": "string",
            "description": "Category type"
          },
          "custom_field_name": {
            "type": "string",
            "description": "Custom field name"
          },
          "override_name": {
            "type": "string",
            "description": "Overridden risk factor name"
          }
        },
        "required": [
          "type"
        ],
        "title": "RiskCategory"
      },
      "RiskComponent": {
        "type": "object",
        "description": "Risk component for application",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this risk component"
          },
          "category": {
            "$ref": "#/components/schemas/RiskCategory"
          },
          "category_id": {
            "$ref": "#/components/schemas/UUID"
          },
          "score": {
            "type": "number",
            "description": "The contribution of this component to the overall risk score"
          },
          "required": {
            "type": "boolean",
            "description": "Whether this component is required before an overall risk can be calculated"
          },
          "expiry": {
            "$ref": "#/components/schemas/Date"
          },
          "input_value": {
            "type": "string",
            "description": "The value used to calculate this risk category's score"
          },
          "raw_value": {
            "type": "string",
            "description": "The raw input to this risk category"
          },
          "matched_rule_name": {
            "type": "string",
            "description": "The name of the rule which matched the input value"
          }
        },
        "required": [
          "name"
        ],
        "title": "RiskComponent"
      },
      "RiskLevel": {
        "type": "object",
        "description": "Calculated risk level",
        "properties": {
          "score": {
            "type": "number",
            "description": "Calculated risk score"
          },
          "category": {
            "$ref": "#/components/schemas/RiskLevelCategory"
          }
        },
        "title": "RiskLevel"
      },
      "RiskLevelCategory": {
        "type": "string",
        "description": "Risk level category",
        "enum": [
          "LOW",
          "MEDIUM",
          "HIGH",
          "UNDETERMINED"
        ],
        "title": "RiskLevelCategory"
      },
      "Role": {
        "description": "Relation between the individual/company and your institution. For now, this will always be `INDIVIDUAL_CUSTOMER`",
        "type": "string",
        "enum": [
          "INDIVIDUAL_CUSTOMER",
          "INDIVIDUAL_ASSOCIATED",
          "COMPANY_CUSTOMER",
          "COMPANY_ASSOCIATED"
        ],
        "title": "Role"
      },
      "Sanction": {
        "description": "Details of a sanction",
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string",
            "description": "Name of issuing authority"
          },
          "name": {
            "type": "string",
            "description": "Name of Sanction"
          },
          "kind": {
            "type": "string",
            "description": "Kind of Sanction"
          },
          "list": {
            "type": "string",
            "description": "Sanction list containing this sanction"
          },
          "is_current": {
            "type": "boolean",
            "description": "Is the Sanction in force"
          },
          "is_past": {
            "type": "boolean",
            "description": "Is the Sanction no longer in force"
          },
          "type": {
            "type": "string",
            "description": "Sanction type"
          },
          "time_periods": {
            "type": "array",
            "description": "Date range of Sanction",
            "items": {
              "type": "object",
              "properties": {
                "from_date": {
                  "$ref": "#/components/schemas/PartialDate"
                },
                "to_date": {
                  "$ref": "#/components/schemas/PartialDate"
                }
              }
            }
          }
        },
        "title": "Sanction"
      },
      "SanctionsResult": {
        "description": "Result of a PEPs and Sanctions Check",
        "title": "SanctionsResult",
        "type": "object",
        "properties": {
          "match_id": {
            "type": "string",
            "description": "ID of the Sanction Match"
          },
          "modified_date": {
            "$ref": "#/components/schemas/DateTime"
          },
          "false_positive": {
            "$ref": "#/components/schemas/FalsePositive"
          },
          "match_custom_label": {
            "type": "string",
            "description": "The provider-specific display name for this match"
          },
          "match_name": {
            "type": "string",
            "description": "The name that was matched against"
          },
          "match_dates": {
            "type": "array",
            "description": "Dates of the matched sanctions",
            "items": {
              "$ref": "#/components/schemas/PartialDate"
            }
          },
          "match_dates_data": {
            "type": "array",
            "description": "Dates of the matched sanctions",
            "items": {
              "$ref": "#/components/schemas/DateMatchData"
            }
          },
          "match_countries": {
            "type": "array",
            "description": "Countries of the matched sanctions relating to national origin",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            }
          },
          "match_countries_address": {
            "type": "array",
            "description": "Countries of the matched sanctions relating to location",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            }
          },
          "match_countries_data": {
            "type": "array",
            "description": "Countries of the matched sanctions relating to national origin",
            "items": {
              "$ref": "#/components/schemas/CountryMatchData"
            }
          },
          "score": {
            "type": "number",
            "description": "The score of the match"
          },
          "sanctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sanction"
            },
            "description": "The sanctions returned from check"
          },
          "pep": {
            "$ref": "#/components/schemas/PEP"
          },
          "media": {
            "type": "array",
            "description": "Adverse Media results",
            "items": {
              "$ref": "#/components/schemas/MediaArticle"
            }
          },
          "documents": {
            "type": "array",
            "description": "Documents returned by the check",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "aliases": {
            "type": "array",
            "description": "Aliases used by the matched",
            "items": {
              "type": "string"
            }
          },
          "previous_names": {
            "type": "array",
            "description": "Previous names used by the matched",
            "items": {
              "type": "string"
            }
          },
          "associates": {
            "type": "array",
            "description": "Associated to the returned PEPs and Sanctions",
            "items": {
              "$ref": "#/components/schemas/Associate"
            }
          },
          "profile_notes": {
            "type": "string",
            "description": "Profile notes returned by check"
          },
          "details": {
            "type": "array",
            "description": "More information about the match",
            "items": {
              "$ref": "#/components/schemas/MatchDetail"
            }
          },
          "sources": {
            "type": "array",
            "description": "Sources listed by data provider",
            "items": {
              "$ref": "#/components/schemas/Source"
            }
          },
          "is_enhanced": {
            "description": "If this is an enchanced Sanctions result",
            "type": "boolean"
          },
          "gender": {
            "type": "string",
            "description": "Gender of match"
          },
          "pep_rating": {
            "type": "string",
            "description": "PEP Rating"
          },
          "remarks": {
            "type": "array",
            "description": "Sanction remarks from data provider",
            "items": {
              "type": "string"
            }
          },
          "deceased": {
            "description": "If the result is deceased",
            "type": "boolean"
          },
          "disqualified_director": {
            "description": "If the result is a disqualified director",
            "type": "boolean"
          },
          "insolvent": {
            "description": "If the result is a insolvent",
            "type": "boolean"
          },
          "law_enforcement": {
            "description": "If the result is a member of law enforcement",
            "type": "boolean"
          },
          "riskography": {
            "type": "string",
            "description": "Description of PEP or sanctioned persons background"
          },
          "deceased_dates": {
            "type": "array",
            "description": "Reported death dates",
            "items": {
              "$ref": "#/components/schemas/PartialDate"
            }
          },
          "inactive_as_rca_related_to_pep_dates": {
            "type": "array",
            "description": "Dates of relation to PEP cessation",
            "items": {
              "$ref": "#/components/schemas/PartialDate"
            }
          },
          "inactive_as_pep_dates": {
            "type": "array",
            "description": "Dates of PEP inactivity",
            "items": {
              "$ref": "#/components/schemas/PartialDate"
            }
          },
          "identifications": {
            "type": "array",
            "description": "Identifications such as a passport",
            "items": {
              "$ref": "#/components/schemas/Identification"
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Location"
            },
            "description": "Locations related to a PEP or sanctioned entity, such as birth place"
          }
        }
      },
      "Source": {
        "description": "A source of information for a PEP or sanction",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Category of the source"
          },
          "url": {
            "type": "string",
            "description": "URL of source"
          },
          "description": {
            "type": "string",
            "description": "Description of source"
          }
        },
        "required": [
          "name"
        ],
        "title": "Source"
      },
      "StructuredAddress": {
        "x-ms-discriminator-value": "STRUCTURED",
        "allOf": [
          {
            "$ref": "#/components/schemas/Address"
          },
          {
            "type": "object",
            "title": "StructuredAddress",
            "description": "Structured address format",
            "properties": {
              "country": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "state_province": {
                "description": "The state, province, or territory in which the address is located. This is required for addresses in the US or Canada.\n\n_Note that a UK county should not go here.\n\n The format follows ISO-3166-2 but only the state code as country is already present in its own field.",
                "type": "string",
                "example": "CA"
              },
              "county": {
                "description": "The county in which the address is located.\n\n_Note that a US state or Canadian province or territory should not go here._",
                "type": "string",
                "example": "Middlesex"
              },
              "postal_code": {
                "description": "The postal code or zip code for the address.",
                "type": "string",
                "example": "W1 2ZT"
              },
              "locality": {
                "description": "The city or town in which the address is located.",
                "type": "string",
                "example": "London"
              },
              "route": {
                "description": "The route or street name on which address is located.",
                "type": "string",
                "example": "Crown Street"
              },
              "street_number": {
                "description": "The street number of the address.",
                "type": "string",
                "example": "38"
              },
              "premise": {
                "description": "The name of the building.",
                "type": "string",
                "example": "Princelet House"
              },
              "subpremise": {
                "description": "A subaddress within the building. This is typically a flat number or apartment number.",
                "type": "string",
                "example": "Flat C"
              },
              "original_freeform_address": {
                "description": "The original freeform address, prior to structuring attempts.",
                "type": "string",
                "example": "Flat C, Princelet House, 38, Crown Street, London, London, Middlesex, W1 2ZT"
              },
              "original_structured_address": {
                "description": "This object has been deprecated. The value will be the same as the `STRUCTURED` address.",
                "type": "object"
              },
              "longitude": {
                "type": "number",
                "description": "Longitude of coordinate (-180.0 to 80.0)"
              },
              "latitude": {
                "type": "number",
                "description": "Latitude of coordinate (-90.0 to 90.0)"
              }
            },
            "required": [
              "type",
              "country"
            ]
          }
        ]
      },
      "TagResource": {
        "description": "A tag attached to a customer's profile",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "description": "The name of the tag.",
            "example": "Forexo Basic tag"
          },
          "is_automatic": {
            "type": "boolean",
            "readOnly": true,
            "description": "This is a deprecated parameter. It always returns `false`.",
            "example": false
          }
        },
        "title": "TagResource"
      },
      "TaskProgress": {
        "description": "Progress on tasks of a profile",
        "type": "object",
        "properties": {
          "completed_count": {
            "type": "integer",
            "description": "Tasks completed"
          },
          "total_count": {
            "type": "integer",
            "description": "Total tasks on profile"
          }
        },
        "title": "TaskProgress"
      },
      "TaskResource": {
        "type": "object",
        "description": "A task variant that can be used in a task set",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "variant": {
            "$ref": "#/components/schemas/TaskVariant"
          },
          "type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "state": {
            "$ref": "#/components/schemas/TaskState"
          },
          "is_complete": {
            "type": "boolean",
            "description": "Whether a task is currently complete"
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Whether this task set has been deleted"
          },
          "is_expired": {
            "type": "boolean",
            "description": "Whether a task is expired"
          },
          "expired_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "will_expire_at": {
            "$ref": "#/components/schemas/DateTime"
          },
          "expiry_reason": {
            "type": "string",
            "description": "The reason why this task expired",
            "enum": [
              "CHECK_EXPIRED",
              "PROFILE_DEACTIVATED",
              "NEW_TASK_VERSION",
              "EXPIRY_PERIOD_ENDED"
            ]
          },
          "creation_date": {
            "$ref": "#/components/schemas/DateTime"
          },
          "check_ids": {
            "type": "array",
            "description": "A list of the checks which have been associated with this task",
            "items": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          "is_skipped": {
            "type": "boolean",
            "description": "Whether this task is skipped"
          },
          "needs_check_automation": {
            "type": "boolean",
            "description": "Whether this task is currently waiting for automatic checks to run"
          }
        },
        "title": "TaskResource"
      },
      "TaskState": {
        "type": "string",
        "description": "The states a task can be shown in",
        "enum": [
          "INCOMPLETE",
          "COMPLETED_PASS",
          "COMPLETED_FAIL"
        ],
        "x-ms-enum": {
          "name": "TaskState",
          "modelAsString": true
        },
        "title": "TaskState"
      },
      "TaskType": {
        "type": "string",
        "description": "PassFort's supported task types",
        "enum": [
          "INDIVIDUAL_VERIFY_IDENTITY",
          "INDIVIDUAL_VERIFY_ADDRESS",
          "INDIVIDUAL_VERIFY_SOURCE_OF_FUNDS",
          "INDIVIDUAL_ASSESS_MEDIA_AND_POLITICAL_AND_SANCTIONS_EXPOSURE",
          "INDIVIDUAL_ASSESS_POLITICAL_AND_SANCTIONS_EXPOSURE",
          "INDIVIDUAL_ASSESS_POLITICAL_EXPOSURE",
          "INDIVIDUAL_ASSESS_SANCTIONS_EXPOSURE",
          "INDIVIDUAL_VERIFY_BANK_ACCOUNT",
          "INDIVIDUAL_VERIFY_IMMIGRATION_STATUS",
          "INDIVIDUAL_MANUAL_TASK",
          "INDIVIDUAL_ASSESS_DEVICE_REPUTATION",
          "INDIVIDUAL_FRAUD_SCREENING",
          "INDIVIDUAL_VERIFY_TAX_STATUS",
          "COMPANY_VERIFY_IDENTITY",
          "COMPANY_VERIFY_ADDRESS",
          "COMPANY_VERIFY_CHARITY",
          "COMPANY_IDENTIFY_AUTHORIZED_PERSONS",
          "COMPANY_IDENTIFY_OFFICERS",
          "COMPANY_IDENTIFY_TRUSTEES",
          "COMPANY_IDENTIFY_BENEFICIAL_OWNERS",
          "COMPANY_REVIEW_FILINGS",
          "COMPANY_ASSESS_SANCTIONS_EXPOSURE",
          "COMPANY_ASSESS_MEDIA_EXPOSURE",
          "COMPANY_ASSESS_MEDIA_AND_SANCTIONS_EXPOSURE",
          "COMPANY_MANUAL_TASK",
          "COMPANY_VERIFY_BANK_ACCOUNT",
          "COMPANY_VERIFY_TAX_STATUS",
          "COMPANY_ASSESS_FINANCIALS",
          "COMPANY_FRAUD_SCREENING",
          "COMPANY_MERCHANT_FRAUD_SCREENING"
        ],
        "x-ms-enum": {
          "name": "TaskType",
          "modelAsString": true
        },
        "title": "TaskType"
      },
      "TaskVariant": {
        "description": "The identifier of a variant of a task.",
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "alias": {
            "type": "string",
            "description": "Alias of this task variant"
          },
          "name": {
            "type": "string",
            "description": "Name of the task variant"
          },
          "description": {
            "type": "string",
            "description": "Description of the task variant"
          },
          "task_type": {
            "$ref": "#/components/schemas/TaskType"
          }
        },
        "required": [
          "id"
        ],
        "title": "TaskVariant"
      },
      "TaskRequest": {
        "type": "object",
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/AliasOrId"
          },
          "type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "is_complete": {
            "type": "boolean",
            "description": "Whether a task is currently complete"
          },
          "check_ids": {
            "type": "array",
            "description": "A list of the checks to associate with this task",
            "items": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        }
      },
      "UKBankAccount": {
        "x-ms-discriminator-value ": "UK_ACCOUNT",
        "allOf": [
          {
            "$ref": "#/components/schemas/BankAccount"
          },
          {
            "type": "object",
            "title": "UKBankAccount",
            "description": "UK bank account with sort code and account number",
            "properties": {
              "country": {
                "$ref": "#/components/schemas/CountryCode"
              },
              "sort_code": {
                "$ref": "#/components/schemas/UKBankSortCode"
              },
              "account_number": {
                "$ref": "#/components/schemas/UKBankAccountNumber"
              }
            },
            "required": [
              "type",
              "country",
              "sort_code",
              "account_number"
            ]
          }
        ]
      },
      "UKBankAccountNumber": {
        "description": "UK bank account number",
        "type": "string",
        "pattern": "^\\d{8,8}$",
        "title": "UKBankAccountNumber"
      },
      "UKBankSortCode": {
        "description": "UK bank account sort code",
        "type": "string",
        "pattern": "^\\d{6,6}$|^\\d{2,2}\\-\\d{2,2}\\-\\d{2,2}$",
        "title": "UKBankSortCode"
      },
      "UUID": {
        "description": "[Universally unique identifier.](https://en.wikipedia.org/wiki/Universally_unique_identifier)",
        "type": "string",
        "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
        "example": "01234567-89ab-cdef-0123-456789abcdef",
        "title": "UUID"
      },
      "User": {
        "type": "object",
        "description": "Your user details",
        "properties": {
          "name": {
            "type": "string",
            "description": "User name."
          },
          "id": {
            "$ref": "#/components/schemas/UUID"
          },
          "email": {
            "type": "string",
            "description": "User email address."
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the user account is active."
          }
        },
        "title": "User",
        "nullable": true
      },
      "Visa": {
        "type": "object",
        "description": "Details about a visa",
        "properties": {
          "country_code": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "grant_date": {
            "$ref": "#/components/schemas/PartialDate"
          },
          "expiry_date": {
            "description": "Date when this visa expires, if any",
            "$ref": "#/components/schemas/PartialDate",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of this visa, as given by the provider"
          },
          "entitlement": {
            "type": "string",
            "enum": [
              "WORK",
              "STUDY"
            ],
            "description": "The type of rights given by this visa"
          },
          "source": {
            "type": "string",
            "description": "The database that was interrogated to get the data"
          },
          "details": {
            "type": "array",
            "description": "Details about the type of visa and identification (these are different depending on the country).",
            "items": {
              "$ref": "#/components/schemas/NameValueField"
            }
          },
          "holder": {
            "type": "object",
            "description": "Details about the visa holder",
            "properties": {
              "full_name": {
                "type": "string",
                "description": "Name of the visa holder, as returned by the provider"
              },
              "dob": {
                "$ref": "#/components/schemas/PartialDate"
              },
              "document_checked": {
                "$ref": "#/components/schemas/DocumentMetadata"
              }
            }
          },
          "field_checks": {
            "type": "array",
            "description": "These checks ascertain whether the details extracted from the provider are valid, and match those submitted on the profile",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "$ref": "#/components/schemas/CheckedDocumentField"
                },
                "result": {
                  "$ref": "#/components/schemas/FieldCheckResult"
                }
              }
            }
          }
        },
        "title": "Visa"
      }
    }
  },
  "paths": {
    "/profiles": {
      "post": {
        "operationId": "Profiles_Create",
        "description": "Create a new profile. You will need specify the _role_ of the customer, which will define what rules apply to that customer",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResource"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ],
        "summary": "Create a profile"
      }
    },
    "/profiles/{profile_id}": {
      "get": {
        "operationId": "Profiles_Get",
        "description":
          "Returns detailed information a profile. This includes the collected data, details on the checks that have been run, and information on a profile's ongoing applications and tasks",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResource"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ],
        "summary": "Get a profile",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/applications": {
      "get": {
        "operationId": "Applications_List",
        "description": "Returns a list of product applications associated with a profile",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductApplication"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Applications"
        ],
        "summary": "Get all product applications on profile",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Applications_Create",
        "description": "Create a new product application on a profile",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductApplication"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductApplication"
                }
              }
            }
          }
        },
        "tags": [
          "Applications"
        ],
        "summary": "Create a product application",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/applications/{application_id}": {
      "get": {
        "operationId": "Applications_Get",
        "description": "Returns the specified production application against a profile",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductApplication"
                }
              }
            }
          }
        },
        "tags": [
          "Applications"
        ],
        "summary": "Get a product application",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the application",
            "name": "application_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Applications_Update",
        "description": "Update the status of a product application, e.g. to approve it",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductApplication"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductApplication"
                }
              }
            }
          }
        },
        "tags": [
          "Applications"
        ],
        "summary": "Update a product application",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the application",
            "name": "application_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/applications/{application_id}/revert_decision": {
      "post": {
        "operationId": "Applications_RevertDecision",
        "description": "Recreate an application in case it was accidentally rejected or cancelled",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductApplicationRevertDecision",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductApplication"
                }
              }
            }
          }
        },
        "tags": [
          "Applications"
        ],
        "summary": "Revert application decision",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the application",
            "name": "application_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/checks": {
      "get": {
        "operationId": "Checks_List",
        "description": "Returns a list of checks associated with the profile",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CheckResource"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Checks"
        ],
        "summary": "Get all checks run on a profile",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Checks_Run",
        "description": "Instruct a check on a profile",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckResource"
                }
              }
            }
          }
        },
        "tags": [
          "Checks"
        ],
        "summary": "Run a check",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "in": "query",
            "description":
              "Whether the check should run async (respond immediately) or sync (wait for check completion). If unspecified, async for all checks except IDENTITY_CHECK.",
            "name": "mode",
            "schema": {
              "type": "string",
              "enum": [
                "sync",
                "async"
              ]
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/checks/{check_id}": {
      "get": {
        "operationId": "Checks_Get",
        "description": "Returns the current status and result of an instructed check",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckResource"
                }
              }
            }
          }
        },
        "tags": [
          "Checks"
        ],
        "summary": "Get results of a specific check",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the specific check instance",
            "name": "check_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Checks_UpdateAssociatedTasks",
        "description":
          "Checks are immutable and their results cannot be edited. This endpoint will update the `task_ids` on a check, all other fields are ignored",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckResource"
                }
              }
            }
          }
        },
        "tags": [
          "Checks"
        ],
        "summary": "Update the tasks associated with a check",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the specific check instance",
            "name": "check_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/checks/{check_id}/approve": {
      "post": {
        "operationId": "Checks_Approve",
        "description":
          "Generates a new check (checks are immutable and therefore not edited) from the specified check and sets the result to manually approved",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "Checks"
        ],
        "summary": "Manually approve a check",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the specific check instance",
            "name": "check_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/checks/{check_id}/reject": {
      "post": {
        "operationId": "Checks_Reject",
        "description":
          "Generates a new check (checks are immutable and therefore not edited) from the specified check and sets the result to manually rejected",
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "Checks"
        ],
        "summary": "Manually reject a check",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the specific check instance",
            "name": "check_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/collected_data": {
      "get": {
        "operationId": "Profiles_GetCollectedData",
        "description": "Returns the data which has been collected from the user",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualData"
                }
              }
            },
            "headers": {
              "Etag": {
                "description": "The ETag corresponding to the latest version of the data.",
                "schema": {
                  "type": "string",
                  "example": "W/'1579973191.798'"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ],
        "summary": "Get collected data",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Profiles_UpdateCollectedData",
        "description":
          "This allows you to update the collected data on the profile. This may be to either add more information collected from the customer, or to amend previously submitted information.\n\nPassFort does **not** merge data submitted. New data will **replace** the profile's existing `collected_data`.\n\nNote that updating data (e.g. amending a date of birth) may invalidate the results of your previously run checks. PassFort does not currently handle this for you, and you will need to explicitly detect and rerun these checks",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IndividualData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                    "$ref": "#/components/schemas/IndividualData"
                }
              }
            },
            "headers": {
              "Etag": {
                "description": "The ETag corresponding to the latest version of the collected data.",
                "schema": {
                  "type": "string",
                  "example": "W/'1579973191.798'"
                }
              }
            }
          },
          "412": {
            "description": "Returned when `If-Match` doesn't match the current `Etag` for the collected data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualData"
                }
              }
            },
            "headers": {
              "Etag": {
                "description": "The ETag corresponding to the latest version of the collected data.",
                "schema": {
                  "type": "string",
                  "example": "W/'1579973191.798'"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ],
        "summary": "Update collected data",
        "parameters": [
          {
            "in": "header",
            "description":
              "The current ETag of the collected data to be updated. If this value does not match the current ETag, a `412` status is returned.",
            "schema": {
              "type": "string",
              "example": "W/'1579973191.798'"
            },
            "name": "If-Match"
          },
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/collected_data/documents": {
      "post": {
        "operationId": "Profiles_AddDocuments",
        "description":
          "This is a convenience method to add a document to collected_data without having to `POST` the entirety of the collected_data",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPost"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ],
        "summary": "Add a document",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/collection_steps": {
      "get": {
        "operationId": "Profiles_GetCollectionSteps",
        "description": "Get a list of collection steps on a profile",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionStep"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Collect"
        ],
        "summary": "Get a list of collection steps",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Profiles_UpdateCollectionSteps",
        "description": "Replace the collection steps on a profile",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CollectionStep"
                },
                "description": "The new collection steps for the profile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CollectionStep"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Collect"
        ],
        "summary": "Update profile collection steps",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/delete": {
      "post": {
        "operationId": "Profiles_Delete",
        "description": "Permantently delete a profile and all associated data. This action cannot be undone.",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileDeletionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        },
        "tags": [
          "Profiles"
        ],
        "summary": "Permanently delete a profile",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile.",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/document_images": {
      "get": {
        "operationId": "Documents_List",
        "description": "Get list of document images uploaded on a profile",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentImageResourceMinimal"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Document Images"
        ],
        "summary": "Get list of document images",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Documents_Upload",
        "description":
          "This method allows you to submit a documnt image. It returns an `id` which can be used to reference the image in other data structures (typically as part of the document data structure)",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentImageResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentImageResourceMinimal"
                }
              }
            }
          }
        },
        "tags": [
          "Document Images"
        ],
        "summary": "Upload a new document image",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/document_images/{document_image_id}": {
      "get": {
        "operationId": "Documents_Get",
        "description": "Get information on a specific document image",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentImageResourceGet"
                }
              }
            }
          }
        },
        "tags": [
          "Document Images"
        ],
        "summary": "Get a document image",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the document image",
            "name": "document_image_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": false,
            "in": "query",
            "description": "If false, will return only `id`, `image_type` and `upload_date`",
            "name": "full",
            "schema": {
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/events": {
      "get": {
        "operationId": "Events_List",
        "description": "Retrieve a list of all events on a profile",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResource"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "summary": "Get a list of profile events",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Events_Create",
        "description": "Create new event on a profile",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResource"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "summary": "Create a new profile event",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/events/{event_id}": {
      "get": {
        "operationId": "Events_Get",
        "description": "Get details on a profile event",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResource"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "summary": "Get a profile event by ID",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the event",
            "name": "event_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Events_Update",
        "description": "Update profile event (for example mark it as a mismatch)",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResource"
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "summary": "Update a profile event",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the event",
            "name": "event_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/events/bulk_update": {
      "post": {
        "operationId": "Events_BulkUpdate",
        "description": "Update multiple profile events (for example mark them as a mismatch)",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/EventResource"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventResource"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Events"
        ],
        "summary": "Update multiple events",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/files": {
      "post": {
        "operationId": "Documents_UploadFile",
        "description": "This method allows you to submit a file",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResource"
                }
              }
            }
          }
        },
        "tags": [
          "Document Images"
        ],
        "summary": "Upload a new file",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/files/{file_id}": {
      "get": {
        "operationId": "Documents_DownloadFile",
        "description": "Request a file by ID",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileResource"
                }
              }
            }
          }
        },
        "tags": [
          "Document Images"
        ],
        "summary": "Get a file by ID",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the file",
            "name": "file_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/tags": {
      "post": {
        "operationId": "Tags_Add",
        "description": "Add a tag of up to 64 characters to a profile.",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TagResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResource"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "summary": "Add tag",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile.",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/tags/{tag_id}": {
      "delete": {
        "operationId": "Tags_Delete",
        "description": "Remove a tag from a profile.",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TagResource"
                }
              }
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "summary": "Remove tag",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile.",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier of the tag to be removed.",
            "name": "tag_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/tasks": {
      "get": {
        "operationId": "Tasks_List",
        "description": "Returns a list of tasks associated with a profile",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResource"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "summary": "Get all tasks on a profile",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Tasks_Add",
        "description":
          "As mentioned above, products have a default set of tasks which are automatically created when a user applies. However, if you want to add a task on a case by case basis, you can use this endpoint",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResource"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "summary": "Add a task to a profile",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/tasks/{task_id}": {
      "get": {
        "operationId": "Tasks_Get",
        "description": "Returns the specified task against a profile",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResource"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "summary": "Get a task",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the task",
            "name": "task_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Tasks_Complete",
        "description": "Update the `is_complete` and `check_ids` fields on a task. All other fields are ignored",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResource"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "summary": "Complete a task",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the task",
            "name": "task_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/tasks/{task_id}/notes": {
      "get": {
        "operationId": "Tasks_GetNotes",
        "description": "Get notes associated with a task on a profile",
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NoteResource"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "summary": "Get notes on a task",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the task",
            "name": "task_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      },
      "post": {
        "operationId": "Tasks_AddNote",
        "description": "Add a note to a task on a profile",
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNoteResource"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NoteResource"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ],
        "summary": "Add a note to a task",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the task",
            "name": "task_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    },
    "/profiles/{profile_id}/tasks/{task_id}/notes/{note_id}": {
      "delete": {
        "operationId": "Tasks_DeleteNote",
        "description": "Remove a note from a task (will not be removed from audit log)",
        "responses": {
          "200": {
            "description": "Response"
          }
        },
        "tags": [
          "Tasks"
        ],
        "summary": "Delete a note",
        "parameters": [
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the profile",
            "name": "profile_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the task",
            "name": "task_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          },
          {
            "required": true,
            "in": "path",
            "description": "The identifier for the note",
            "name": "note_id",
            "schema": {
              "$ref": "#/components/schemas/UUID"
            }
          }
        ]
      }
    }
  }
}