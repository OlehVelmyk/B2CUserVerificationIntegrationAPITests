// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Admin.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PersonalDetailsDto
    {
        /// <summary>
        /// Initializes a new instance of the PersonalDetailsDto class.
        /// </summary>
        public PersonalDetailsDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PersonalDetailsDto class.
        /// </summary>
        public PersonalDetailsDto(string firstName = default(string), string lastName = default(string), System.DateTime? dateOfBirth = default(System.DateTime?), AddressDto residenceAddress = default(AddressDto), string nationality = default(string), string email = default(string))
        {
            FirstName = firstName;
            LastName = lastName;
            DateOfBirth = dateOfBirth;
            ResidenceAddress = residenceAddress;
            Nationality = nationality;
            Email = email;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dateOfBirth")]
        public System.DateTime? DateOfBirth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "residenceAddress")]
        public AddressDto ResidenceAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nationality")]
        public string Nationality { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email")]
        public string Email { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ResidenceAddress != null)
            {
                ResidenceAddress.Validate();
            }
        }
    }
}
