// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Admin.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class CollectionStepRequest
    {
        /// <summary>
        /// Initializes a new instance of the CollectionStepRequest class.
        /// </summary>
        public CollectionStepRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CollectionStepRequest class.
        /// </summary>
        /// <param name="type">Possible values include: 'VerificationDetails',
        /// 'PersonalDetails', 'Document', 'Survey'</param>
        public CollectionStepRequest(CollectionStepType type, bool isRequired, bool isReviewNeeded, IList<System.Guid> targetTasks, string reason)
        {
            Type = type;
            IsRequired = isRequired;
            IsReviewNeeded = isReviewNeeded;
            TargetTasks = targetTasks;
            Reason = reason;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'VerificationDetails',
        /// 'PersonalDetails', 'Document', 'Survey'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public CollectionStepType Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isRequired")]
        public bool IsRequired { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isReviewNeeded")]
        public bool IsReviewNeeded { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetTasks")]
        public IList<System.Guid> TargetTasks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "reason")]
        public string Reason { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (TargetTasks == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetTasks");
            }
            if (Reason == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Reason");
            }
        }
    }
}
