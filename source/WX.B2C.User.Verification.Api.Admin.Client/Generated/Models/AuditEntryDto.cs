// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Admin.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class AuditEntryDto
    {
        /// <summary>
        /// Initializes a new instance of the AuditEntryDto class.
        /// </summary>
        public AuditEntryDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AuditEntryDto class.
        /// </summary>
        /// <param name="entryType">Possible values include: 'Application',
        /// 'Check', 'CollectionStep', 'Document', 'PersonalDetails',
        /// 'VerificationDetails', 'Task'</param>
        public AuditEntryDto(System.Guid userId, System.Guid entryKey, EntryType entryType, string eventType, System.DateTime createdAt, string data, InitiationDto initiation)
        {
            UserId = userId;
            EntryKey = entryKey;
            EntryType = entryType;
            EventType = eventType;
            CreatedAt = createdAt;
            Data = data;
            Initiation = initiation;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userId")]
        public System.Guid UserId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entryKey")]
        public System.Guid EntryKey { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Application', 'Check',
        /// 'CollectionStep', 'Document', 'PersonalDetails',
        /// 'VerificationDetails', 'Task'
        /// </summary>
        [JsonProperty(PropertyName = "entryType")]
        public EntryType EntryType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eventType")]
        public string EventType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public System.DateTime CreatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public string Data { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "initiation")]
        public InitiationDto Initiation { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EventType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EventType");
            }
            if (Data == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Data");
            }
            if (Initiation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Initiation");
            }
            if (Initiation != null)
            {
                Initiation.Validate();
            }
        }
    }
}
