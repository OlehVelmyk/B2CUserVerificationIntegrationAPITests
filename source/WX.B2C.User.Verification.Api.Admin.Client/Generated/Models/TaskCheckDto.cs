// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Admin.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TaskCheckDto
    {
        /// <summary>
        /// Initializes a new instance of the TaskCheckDto class.
        /// </summary>
        public TaskCheckDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaskCheckDto class.
        /// </summary>
        /// <param name="type">Possible values include: 'IdentityDocument',
        /// 'IdentityEnhanced', 'FacialSimilarity', 'TaxResidence', 'IpMatch',
        /// 'FaceDuplication', 'NameAndDoBDuplication',
        /// 'IdDocNumberDuplication', 'FraudScreening', 'RiskListsScreening',
        /// 'Address', 'SurveyAnswers'</param>
        /// <param name="state">Possible values include: 'Pending', 'Running',
        /// 'Complete', 'Error', 'Cancelled'</param>
        /// <param name="result">Possible values include: 'Passed',
        /// 'Failed'</param>
        public TaskCheckDto(System.Guid id, CheckType type, CheckVariantDto variant, CheckState state, CheckResult? result = default(CheckResult?), System.DateTime? createdAt = default(System.DateTime?), System.DateTime? completedAt = default(System.DateTime?))
        {
            Id = id;
            Type = type;
            Variant = variant;
            State = state;
            Result = result;
            CreatedAt = createdAt;
            CompletedAt = completedAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'IdentityDocument',
        /// 'IdentityEnhanced', 'FacialSimilarity', 'TaxResidence', 'IpMatch',
        /// 'FaceDuplication', 'NameAndDoBDuplication',
        /// 'IdDocNumberDuplication', 'FraudScreening', 'RiskListsScreening',
        /// 'Address', 'SurveyAnswers'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public CheckType Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "variant")]
        public CheckVariantDto Variant { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Pending', 'Running',
        /// 'Complete', 'Error', 'Cancelled'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public CheckState State { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Passed', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "result")]
        public CheckResult? Result { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public System.DateTime? CreatedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "completedAt")]
        public System.DateTime? CompletedAt { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Variant == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Variant");
            }
            if (Variant != null)
            {
                Variant.Validate();
            }
        }
    }
}
