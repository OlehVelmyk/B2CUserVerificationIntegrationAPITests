// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Admin.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ScheduleJobRequest
    {
        /// <summary>
        /// Initializes a new instance of the ScheduleJobRequest class.
        /// </summary>
        public ScheduleJobRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ScheduleJobRequest class.
        /// </summary>
        public ScheduleJobRequest(string jobName, IDictionary<string, object> jobParameters, System.DateTime? startAt = default(System.DateTime?), JobSchedule schedule = default(JobSchedule))
        {
            JobName = jobName;
            StartAt = startAt;
            Schedule = schedule;
            JobParameters = jobParameters;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jobName")]
        public string JobName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "startAt")]
        public System.DateTime? StartAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schedule")]
        public JobSchedule Schedule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jobParameters")]
        public IDictionary<string, object> JobParameters { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (JobName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "JobName");
            }
            if (JobParameters == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "JobParameters");
            }
            if (Schedule != null)
            {
                Schedule.Validate();
            }
        }
    }
}
