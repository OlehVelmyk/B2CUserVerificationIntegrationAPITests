// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Admin.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ApplicationDto
    {
        /// <summary>
        /// Initializes a new instance of the ApplicationDto class.
        /// </summary>
        public ApplicationDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApplicationDto class.
        /// </summary>
        /// <param name="state">Possible values include: 'Applied', 'Approved',
        /// 'InReview', 'Rejected', 'Cancelled'</param>
        public ApplicationDto(System.Guid id, ApplicationState state, IList<ApplicationAction> allowedActions, IList<string> decisionReasons, IList<ApplicationTaskDto> requiredTasks, bool isAutomating, System.DateTime createdAt)
        {
            Id = id;
            State = state;
            AllowedActions = allowedActions;
            DecisionReasons = decisionReasons;
            RequiredTasks = requiredTasks;
            IsAutomating = isAutomating;
            CreatedAt = createdAt;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Applied', 'Approved',
        /// 'InReview', 'Rejected', 'Cancelled'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public ApplicationState State { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allowedActions")]
        public IList<ApplicationAction> AllowedActions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "decisionReasons")]
        public IList<string> DecisionReasons { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requiredTasks")]
        public IList<ApplicationTaskDto> RequiredTasks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isAutomating")]
        public bool IsAutomating { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdAt")]
        public System.DateTime CreatedAt { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AllowedActions == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AllowedActions");
            }
            if (DecisionReasons == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DecisionReasons");
            }
            if (RequiredTasks == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RequiredTasks");
            }
            if (RequiredTasks != null)
            {
                foreach (var element in RequiredTasks)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
