// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Public.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ProfileDto
    {
        /// <summary>
        /// Initializes a new instance of the ProfileDto class.
        /// </summary>
        public ProfileDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProfileDto class.
        /// </summary>
        /// <param name="applicationState">Possible values include: 'Applied',
        /// 'Approved', 'InReview', 'Rejected', 'Cancelled'</param>
        public ProfileDto(VerificationDetailsDto verificationDetails, ApplicationState? applicationState = default(ApplicationState?))
        {
            ApplicationState = applicationState;
            VerificationDetails = verificationDetails;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'Applied', 'Approved',
        /// 'InReview', 'Rejected', 'Cancelled'
        /// </summary>
        [JsonProperty(PropertyName = "application_state")]
        public ApplicationState? ApplicationState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "verification_details")]
        public VerificationDetailsDto VerificationDetails { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (VerificationDetails == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "VerificationDetails");
            }
            if (VerificationDetails != null)
            {
                VerificationDetails.Validate();
            }
        }
    }
}
