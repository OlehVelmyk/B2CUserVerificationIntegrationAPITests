// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Internal.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DocumentDto
    {
        /// <summary>
        /// Initializes a new instance of the DocumentDto class.
        /// </summary>
        public DocumentDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DocumentDto class.
        /// </summary>
        /// <param name="category">Possible values include: 'ProofOfIdentity',
        /// 'ProofOfAddress', 'Supporting', 'Taxation', 'ProofOfFunds',
        /// 'Selfie'</param>
        public DocumentDto(System.Guid id, DocumentCategory category, string type, System.DateTime submittedAt, IList<DocumentFileDto> files)
        {
            Id = id;
            Category = category;
            Type = type;
            SubmittedAt = submittedAt;
            Files = files;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'ProofOfIdentity',
        /// 'ProofOfAddress', 'Supporting', 'Taxation', 'ProofOfFunds',
        /// 'Selfie'
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public DocumentCategory Category { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "submittedAt")]
        public System.DateTime SubmittedAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "files")]
        public IList<DocumentFileDto> Files { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
            if (Files == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Files");
            }
            if (Files != null)
            {
                foreach (var element in Files)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
