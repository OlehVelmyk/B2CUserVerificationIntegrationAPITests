// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.Api.Internal.Client.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for DocumentCategory.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DocumentCategory
    {
        [EnumMember(Value = "ProofOfIdentity")]
        ProofOfIdentity,
        [EnumMember(Value = "ProofOfAddress")]
        ProofOfAddress,
        [EnumMember(Value = "Supporting")]
        Supporting,
        [EnumMember(Value = "Taxation")]
        Taxation,
        [EnumMember(Value = "ProofOfFunds")]
        ProofOfFunds,
        [EnumMember(Value = "Selfie")]
        Selfie
    }
    internal static class DocumentCategoryEnumExtension
    {
        internal static string ToSerializedValue(this DocumentCategory? value)
        {
            return value == null ? null : ((DocumentCategory)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this DocumentCategory value)
        {
            switch( value )
            {
                case DocumentCategory.ProofOfIdentity:
                    return "ProofOfIdentity";
                case DocumentCategory.ProofOfAddress:
                    return "ProofOfAddress";
                case DocumentCategory.Supporting:
                    return "Supporting";
                case DocumentCategory.Taxation:
                    return "Taxation";
                case DocumentCategory.ProofOfFunds:
                    return "ProofOfFunds";
                case DocumentCategory.Selfie:
                    return "Selfie";
            }
            return null;
        }

        internal static DocumentCategory? ParseDocumentCategory(this string value)
        {
            switch( value )
            {
                case "ProofOfIdentity":
                    return DocumentCategory.ProofOfIdentity;
                case "ProofOfAddress":
                    return DocumentCategory.ProofOfAddress;
                case "Supporting":
                    return DocumentCategory.Supporting;
                case "Taxation":
                    return DocumentCategory.Taxation;
                case "ProofOfFunds":
                    return DocumentCategory.ProofOfFunds;
                case "Selfie":
                    return DocumentCategory.Selfie;
            }
            return null;
        }
    }
}
