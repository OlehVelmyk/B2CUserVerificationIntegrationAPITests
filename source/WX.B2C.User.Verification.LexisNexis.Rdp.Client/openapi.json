{
  "openapi": "3.0.0",
  "info": {
    "title": "LexisNexis RDP API",
    "description": "The LexisNexis RDP API is used to submit check requests.",
    "version": "3.0.0"
  },
  "components": {
    "securitySchemes": {
      "HMAC-SHA256Auth": {
        "type": "http",
        "scheme": "HMAC-SHA256"
      }
    },
    "schemas": {
      "Address": {
        "type": "object",
        "description": "Structure that contains subject address elements.",
        "properties": {
          "StreetAddress1": {
            "type": "string",
            "description": "First line of the street address."
          },
          "StreetAddress2": {
            "type": "string",
            "description": "Second line of the street address."
          },
          "City": {
            "type": "string",
            "description": "City."
          },
          "State": {
            "type": "string",
            "description": "Two-letter state abbreviation (for example, MT or FL)."
          },
          "Zip5": {
            "type": "string",
            "description": "Five-digit ZIP Code."
          },
          "Country": {
            "type": "string",
            "description": "ISO (International Organization for Standardization) 2 country code for the country associated with the address."
          },
          "Context": {
            "type": "string",
            "description": "Address type."
          }
        }
      },
      "DateOfBirth": {
        "type": "object",
        "description": "Structure that contains subject DOB elements.",
        "properties": {
          "Year": {
            "type": "string",
            "description": "Year (yyyy)."
          },
          "Month": {
            "type": "string",
            "description": "Month (MM)."
          },
          "Day": {
            "type": "string",
            "description": "Day (dd)."
          }
        }
      },
      "Ssn": {
        "type": "object",
        "description": "Structure that contains SSN elements.",
        "properties": {
          "Number": {
            "type": "string",
            "description": "SSN."
          },
          "Type": {
            "type": "string",
            "description": "Type of SSN."
          }
        }
      },
      "Settings": {
        "type": "object",
        "description": "Structure that contains settings elements .",
        "properties": {
          "Mode": {
            "type": "string",
            "description": "Mode in which the transaction is generated."
          },
          "Reference": {
            "type": "string",
            "description": "Internal tracking number that your organization can assign to a transaction."
          },
          "Locale": {
            "type": "string",
            "description": "Language in which the customer wants to receive the response. The default value is en_US."
          },
          "Venue": {
            "type": "string",
            "description": "Type of environment where the transaction takes place. The default value is online."
          }
        }
      },
      "PersonName": {
        "type": "object",
        "description": "Structure that contains subject name elements.",
        "properties": {
          "FirstName": {
            "type": "string",
            "description": "Subject's first name."
          },
          "LastName": {
            "type": "string",
            "description": "Subject's last name."
          }
        }
      },
      "Person": {
        "type": "object",
        "properties": {
          "Context": {
            "type": "string",
            "description": "Context of the person. This element is required for Order Score."
          },
          "Name": {
            "$ref": "#/components/schemas/PersonName"
          },
          "DateOfBirth": {
            "$ref": "#/components/schemas/DateOfBirth"
          },
          "SSN": {
            "$ref": "#/components/schemas/Ssn"
          },
          "Addresses": {
            "type": "array",
            "description": "Structure that contains subject address elements.",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        }
      },
      "PassThrough": {
        "type": "object",
        "description": "Structure that contains product pass through elements.",
        "properties": {
          "Type": {
            "type": "string",
            "description": "Product that provides the results."
          },
          "Data": {
            "type": "string",
            "description": "Product response from the products that are marked for pass through. Generally, results are returned as a block of data in an unparsed format."
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "ProductType": {
            "type": "string",
            "description": "Name of a product that ran in the workflow."
          },
          "ExecutedStepName": {
            "type": "string",
            "description": "Name of the workflow step that was executed for the product."
          },
          "ProductConfigurationName": {
            "type": "string",
            "description": "Name of the product configuration that was executed in the workflow."
          },
          "ProductStatus": {
            "type": "string",
            "description": "Status of the product that ran in the workflow."
          }
        }
      },
      "Passport": {
        "type": "object",
        "description": "Structure that contains subject passport elements.",
        "properties": {
          "Number": {
            "type": "string",
            "description": "Passport number."
          },
          "ExpirationDate": {
            "type": "object",
            "description": "Structure that contains passport expiration date elements."
          },
          "Country": {
            "type": "string",
            "description": "Passport country."
          },
          "MachineReadableLine1": {
            "type": "string",
            "description": "Passport machine-readable line one."
          },
          "MachineReadableLine2": {
            "type": "string",
            "description": "Passport machine-readable line two."
          }
        }
      },
      "InstantIDResponseHeader": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "integer"
          },
          "TransactionId": {
            "type": "string"
          }
        }
      },
      "Name": {
        "type": "object",
        "properties": {
          "First": {
            "type": "string",
            "description": "First name."
          },
          "Last": {
            "type": "string",
            "description": "Last name."
          }
        }
      },
      "VerifiedInput": {
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/components/schemas/Name"
          },
          "Address": {
            "$ref": "#/components/schemas/StandardizedInputAddress"
          },
          "SSN": {
            "type": "string",
            "description": "SSN."
          },
          "DOB": {
            "$ref": "#/components/schemas/DateOfBirth"
          }
        }
      },
      "InputEcho": {
        "type": "object",
        "properties": {
          "Name": {
            "$ref": "#/components/schemas/Name"
          },
          "Address": {
            "$ref": "#/components/schemas/Address"
          },
          "DOB": {
            "$ref": "#/components/schemas/DateOfBirth"
          },
          "SSN": {
            "type": "string",
            "description": "SSN."
          },
          "UseDobFilter": {
            "type": "boolean"
          },
          "DobRadius": {
            "type": "integer"
          },
          "Passport": {
            "$ref": "#/components/schemas/Passport"
          },
          "Channel": {
            "type": "string"
          },
          "OwnOrRent": {
            "type": "string"
          }
        }
      },
      "ComprehensiveVerification": {
        "type": "object",
        "properties": {
          "ComprehensiveVerificationIndex": {
            "type": "integer",
            "description": "Index summarizing the verification matches that are found in the NAS and NAP."
          },
          "RiskIndicators": {
            "$ref": "#/components/schemas/RiskIndicators"
          }
        }
      },
      "RiskIndicators": {
        "type": "object",
        "properties": {
          "RiskIndicator": {
            "type": "array",
            "description": "Array that contains risk codes and descriptions.",
            "items": {
              "$ref": "#/components/schemas/RiskIndicator"
            }
          }
        }
      },
      "RiskIndicator": {
        "type": "object",
        "properties": {
          "RiskCode": {
            "type": "string",
            "description": "Risk indicator code."
          },
          "Description": {
            "type": "string",
            "description": "Risk indicator description."
          },
          "Sequence": {
            "type": "number",
            "description": "Risk indicator priority."
          }
        }
      },
      "NameAddressPhone": {
        "type": "object",
        "properties": {
          "Summary": {
            "type": "string",
            "description": "Index that indicates the level of the match of the submitted NAP."
          }
        }
      },
      "StandardizedInputAddress": {
        "type": "object",
        "properties": {
          "StreetNumber": {
            "type": "string",
            "description": "Street name."
          },
          "StreetName": {
            "type": "string",
            "description": "Street name."
          },
          "StreetSuffix": {
            "type": "string",
            "description": "Street suffix (for example, St or Ave)."
          },
          "StreetPreDirection": {
            "type": "string",
            "description": "Street pre-direction (for example, SW or NE)."
          },
          "UnitDesignation": {
            "type": "string",
            "description": "Unit designation (for example, Apt or Suite)."
          },
          "UnitNumber": {
            "type": "string",
            "description": "Unit number."
          },
          "Country": {
            "type": "string",
            "description": "County."
          },
          "PostalCode": {
            "type": "string",
            "description": "Postal code."
          },
          "StateCityZip": {
            "type": "string",
            "description": "Two-letter state abbreviation, city, and ZIP Code."
          },
          "Lattitude": {
            "type": "string",
            "description": "Latitude coordinates."
          },
          "Longitude": {
            "type": "string",
            "description": "Longitude coordinates."
          },
          "StreetPostDirection": {
            "type": "string",
            "description": "Street post-direction (for example, N or W)."
          },
          "StreetAddress1": {
            "type": "string",
            "description": "Unparsed first address line (for example, 1 N. Main St)."
          },
          "StreetAddress2": {
            "type": "string",
            "description": "Unparsed second address line (for example, Unit 3C)."
          },
          "City": {
            "type": "string",
            "description": "City."
          },
          "State": {
            "type": "string",
            "description": "Two-letter state abbreviation (for example, MT or FL)."
          },
          "Zip4": {
            "type": "string",
            "description": "ZIP+4 Code."
          },
          "Zip5": {
            "type": "string",
            "description": "ZIP+4 Code."
          }
        }
      },
      "InstantIDResponseResult": {
        "type": "object",
        "properties": {
          "InputEcho": {
            "$ref": "#/components/schemas/InputEcho"
          },
          "UniqueId": {
            "type": "string"
          },
          "VerifiedInput": {
            "$ref": "#/components/schemas/VerifiedInput"
          },
          "DobVerified": {
            "type": "boolean",
            "description": "Indicates whether the DOB is verified."
          },
          "NameAddressSsnSummary": {
            "type": "integer",
            "description": "Index that indicates the level of the match of the submitted NAS."
          },
          "NameAddressPhone": {
            "$ref": "#/components/schemas/NameAddressPhone"
          },
          "ComprehensiveVerification": {
            "$ref": "#/components/schemas/ComprehensiveVerification"
          },
          "AdditionalScore1": {
            "type": "string"
          },
          "AdditionalScore2": {
            "type": "string"
          },
          "SsnFoundForLexID": {
            "type": "boolean",
            "description": "Indicates whether an SSN is found in the input individual's LexID record."
          },
          "AddressPOBox": {
            "type": "boolean",
            "description": "Indicates whether the address is a PO Box."
          },
          "AddressCMRA": {
            "type": "boolean",
            "description": "Indicates whether the address is a CMRA."
          },
          "InstantIdVersion": {
            "type": "string",
            "description": "InstantID version that is used to generate the results."
          },
          "EmergingId": {
            "type": "boolean",
            "description": "Indicates whether the NAS verification record is a LexisNexis Risk Solutions emerging identity record and does not have an assigned LexID number."
          },
          "AddressStandardized": {
            "type": "boolean",
            "description": "Indicates whether the information that is returned in the StandardizedInputAddress response structure is standardized (based on USPS guidelines)."
          },
          "StandardizedInputAddress": {
            "$ref": "#/components/schemas/StandardizedInputAddress"
          }
        }
      },
      "InstantIDResponse": {
        "type": "object",
        "properties": {
          "Header": {
            "$ref": "#/components/schemas/InstantIDResponseHeader"
          },
          "Result": {
            "$ref": "#/components/schemas/InstantIDResponseResult"
          }
        }
      },
      "InstantIDResponseEx": {
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/components/schemas/InstantIDResponse"
          }
        }
      },
      "InstantIDResponseExWrapper": {
        "type": "object",
        "properties": {
          "InstantIDResponseEx": {
            "$ref": "#/components/schemas/InstantIDResponseEx"
          }
        }
      },
      "InitiateWorkflowRequest": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "Type of request that initiates the transaction.f"
          },
          "Settings": {
            "$ref": "#/components/schemas/Settings"
          },
          "Persons": {
            "type": "array",
            "description": "Structure that contains input subject elements.",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          }
        }
      },
      "InitiateWorkflowResponse": {
        "type": "object",
        "properties": {
          "Status": {
            "$ref": "#/components/schemas/WorkflowStatus"
          },
          "Products": {
            "type": "array",
            "description": "Structure that can contain multiple product responses.",
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          },
          "PassThroughs": {
            "type": "array",
            "description": "Structure that contains product pass through elements.",
            "items": {
              "$ref": "#/components/schemas/PassThrough"
            }
          },
          "Information": {
            "$ref": "#/components/schemas/Information"
          }
        }
      },
      "WorkflowStatus": {
        "type": "object",
        "properties": {
          "ConversationId": {
            "type": "string",
            "description": "Unique identifier that is assigned to the transaction by RDP."
          },
          "RequestId": {
            "type": "string",
            "description": "Unique identifier that is assigned to the transaction request by RDP."
          },
          "TransactionStatus": {
            "type": "string",
            "description": "Current status of the transaction, the transaction number, and the result of the transaction."
          },
          "Reference": {
            "type": "string",
            "description": "Internal tracking number that your organization can assign to a transaction."
          }
        }
      },
      "Information": {
        "type": "array",
        "description": "Structure that contains information elements.",
        "items": {
          "$ref": "#/components/schemas/InformationItem"
        }
      },
      "InformationItem": {
        "type": "object",
        "properties": {
          "InformationType": {
            "type": "string",
            "description": "Type of information which connected to workflow status."
          },
          "Code": {
            "type": "string",
            "description": "Code of the error if exists"
          },
          "Description": {
            "type": "string",
            "description": "Error description"
          },
          "DetailDescription": {
            "type": "array",
            "description": "Error details elements",
            "items": {
              "$ref": "#/components/schemas/DetailDescription"
            }
          }
        }
      },
      "DetailDescription": {
        "type": "object",
        "properties": {
          "Text": {
            "type": "string",
            "description": "Description message."
          }
        }
      }
    },
    "parameters": {
      "AccountId": {
        "in": "path",
        "name": "accountId",
        "description": "This variable is the account identifier of the account that is associated to the transaction or the user.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "WorkflowName": {
        "in": "path",
        "name": "workflowName",
        "description": "This variable is the name of the workflow that runs in the transaction.",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    }
  },
  "paths": {
    "/restws/identity/v3/accounts/{accountId}/workflows/{workflowName}/conversations": {
      "post": {
        "operationId": "Workflow_Initiate",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccountId"
          },
          {
            "$ref": "#/components/parameters/WorkflowName"
          }
        ],
        "requestBody": {
          "description": "Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiateWorkflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InitiateWorkflowResponse"
                }
              }
            }
          }
        },
        "summary": "Initiate a workflow in RDP",
        "tags": []
      }
    }
  }
}