// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.LexisNexis.Rdp.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Structure that contains subject address elements.
    /// </summary>
    public partial class Address
    {
        /// <summary>
        /// Initializes a new instance of the Address class.
        /// </summary>
        public Address()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Address class.
        /// </summary>
        /// <param name="streetAddress1">First line of the street
        /// address.</param>
        /// <param name="streetAddress2">Second line of the street
        /// address.</param>
        /// <param name="city">City.</param>
        /// <param name="state">Two-letter state abbreviation (for example, MT
        /// or FL).</param>
        /// <param name="zip5">Five-digit ZIP Code.</param>
        /// <param name="country">ISO (International Organization for
        /// Standardization) 2 country code for the country associated with the
        /// address.</param>
        /// <param name="context">Address type.</param>
        public Address(string streetAddress1 = default(string), string streetAddress2 = default(string), string city = default(string), string state = default(string), string zip5 = default(string), string country = default(string), string context = default(string))
        {
            StreetAddress1 = streetAddress1;
            StreetAddress2 = streetAddress2;
            City = city;
            State = state;
            Zip5 = zip5;
            Country = country;
            Context = context;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets first line of the street address.
        /// </summary>
        [JsonProperty(PropertyName = "StreetAddress1")]
        public string StreetAddress1 { get; set; }

        /// <summary>
        /// Gets or sets second line of the street address.
        /// </summary>
        [JsonProperty(PropertyName = "StreetAddress2")]
        public string StreetAddress2 { get; set; }

        /// <summary>
        /// Gets or sets city.
        /// </summary>
        [JsonProperty(PropertyName = "City")]
        public string City { get; set; }

        /// <summary>
        /// Gets or sets two-letter state abbreviation (for example, MT or FL).
        /// </summary>
        [JsonProperty(PropertyName = "State")]
        public string State { get; set; }

        /// <summary>
        /// Gets or sets five-digit ZIP Code.
        /// </summary>
        [JsonProperty(PropertyName = "Zip5")]
        public string Zip5 { get; set; }

        /// <summary>
        /// Gets or sets ISO (International Organization for Standardization) 2
        /// country code for the country associated with the address.
        /// </summary>
        [JsonProperty(PropertyName = "Country")]
        public string Country { get; set; }

        /// <summary>
        /// Gets or sets address type.
        /// </summary>
        [JsonProperty(PropertyName = "Context")]
        public string Context { get; set; }

    }
}
