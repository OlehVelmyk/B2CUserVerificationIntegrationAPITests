// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.LexisNexis.Rdp.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class InformationItem
    {
        /// <summary>
        /// Initializes a new instance of the InformationItem class.
        /// </summary>
        public InformationItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InformationItem class.
        /// </summary>
        /// <param name="informationType">Type of information which connected
        /// to workflow status.</param>
        /// <param name="code">Code of the error if exists</param>
        /// <param name="description">Error description</param>
        /// <param name="detailDescription">Error details elements</param>
        public InformationItem(string informationType = default(string), string code = default(string), string description = default(string), IList<DetailDescription> detailDescription = default(IList<DetailDescription>))
        {
            InformationType = informationType;
            Code = code;
            Description = description;
            DetailDescription = detailDescription;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets type of information which connected to workflow
        /// status.
        /// </summary>
        [JsonProperty(PropertyName = "InformationType")]
        public string InformationType { get; set; }

        /// <summary>
        /// Gets or sets code of the error if exists
        /// </summary>
        [JsonProperty(PropertyName = "Code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets error description
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets error details elements
        /// </summary>
        [JsonProperty(PropertyName = "DetailDescription")]
        public IList<DetailDescription> DetailDescription { get; set; }

    }
}
