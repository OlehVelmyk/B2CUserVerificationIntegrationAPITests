// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace WX.B2C.User.Verification.LexisNexis.Rdp.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Person
    {
        /// <summary>
        /// Initializes a new instance of the Person class.
        /// </summary>
        public Person()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Person class.
        /// </summary>
        /// <param name="context">Context of the person. This element is
        /// required for Order Score.</param>
        /// <param name="addresses">Structure that contains subject address
        /// elements.</param>
        public Person(string context = default(string), PersonName name = default(PersonName), DateOfBirth dateOfBirth = default(DateOfBirth), Ssn sSN = default(Ssn), IList<Address> addresses = default(IList<Address>))
        {
            Context = context;
            Name = name;
            DateOfBirth = dateOfBirth;
            SSN = sSN;
            Addresses = addresses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets context of the person. This element is required for
        /// Order Score.
        /// </summary>
        [JsonProperty(PropertyName = "Context")]
        public string Context { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public PersonName Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateOfBirth")]
        public DateOfBirth DateOfBirth { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SSN")]
        public Ssn SSN { get; set; }

        /// <summary>
        /// Gets or sets structure that contains subject address elements.
        /// </summary>
        [JsonProperty(PropertyName = "Addresses")]
        public IList<Address> Addresses { get; set; }

    }
}
