// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WX.B2C.User.Verification.DataAccess.EF;

namespace WX.B2C.User.Verification.DataAccess.Migrations
{
    [DbContext(typeof(VerificationDbContext))]
    [Migration("20220903191341_AddQuartz")]
    partial class AddQuartz
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DecisionReasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAutomating")
                        .HasColumnType("bit");

                    b.Property<Guid>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PreviousState")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "ProductType");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.ApplicationStateChangelog", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FirstApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastApprovedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplicationId");

                    b.HasIndex("ApplicationId", "LastApprovedDate");

                    b.ToTable("ApplicationStateChangelog");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.ApplicationTask", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApplicationId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("ApplicationTasks");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Audit.AuditEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EntryKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EntryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Initiator")
                        .IsRequired()
                        .HasColumnType("nvarchar(385)")
                        .HasMaxLength(385);

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId", "EntryType");

                    b.ToTable("AuditEntries");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.BridgerCredentials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EncryptedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("BridgerCredentials");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Check", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decision")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Errors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("InputData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutputData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PerformedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VariantId");

                    b.HasIndex("Provider", "ExternalId");

                    b.ToTable("Checks");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.CollectionStep", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReviewNeeded")
                        .HasColumnType("bit");

                    b.Property<string>("ReviewResult")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("XPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("UserId", "XPath");

                    b.ToTable("CollectionSteps");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Category");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.DocumentFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("FileId");

                    b.ToTable("DocumentFiles");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.ExternalProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserId", "Provider");

                    b.ToTable("ExternalProfiles");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("Crc32Checksum")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalId")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Provider")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Crc32Checksum");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.PersonalDetails", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(385)")
                        .HasMaxLength(385);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("PersonalDetails");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.MonitoringPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("RegionType")
                        .HasColumnType("int")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("RegionType", "Region")
                        .IsUnique();

                    b.ToTable("Monitoring","Policy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8e4aff9-c3ac-429f-907e-61fd2519cadd"),
                            Name = "APAC monitoring policy",
                            Region = "APAC",
                            RegionType = 2
                        },
                        new
                        {
                            Id = new Guid("7ba96008-c7b3-469b-9f3c-307224abbe83"),
                            Name = "EEA monitoring policy",
                            Region = "EEA",
                            RegionType = 2
                        },
                        new
                        {
                            Id = new Guid("de887152-ca43-499d-8efd-6bc955b78b80"),
                            Name = "GB monitoring policy",
                            Region = "GB",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("cdee5676-5323-4a1a-8b37-fc24ec2deb73"),
                            Name = "Philippines monitoring policy",
                            Region = "PH",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("caed84f7-fc93-431c-8b34-56612ce52dfd"),
                            Name = "ROW monitoring policy",
                            Region = "RoW",
                            RegionType = 2
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.PolicyCheckVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Config")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FailResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FailResultCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FailResultType")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RunPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ChecksVariants","Policy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6f2daf9-3f8f-4335-a7b8-4fc383471a1d"),
                            Config = "{\"reportName\":\"document\"}",
                            FailResult = "{\"xPath\":\"Documents.ProofOfIdentity\",\"isReviewNeeded\":false,\"isRequired\":true}",
                            FailResultCondition = "{\"type\":\"MatchDecision\",\"value\":\"Resubmit\"}",
                            FailResultType = "ResubmitCollectionStep",
                            Name = "Onfido document check",
                            Provider = "Onfido",
                            RunPolicy = "{\"MaxAttempts\":5}",
                            Type = "IdentityDocument"
                        },
                        new
                        {
                            Id = new Guid("63eaa27a-a6fc-43a8-93e4-0d7bfbd7cf23"),
                            Config = "{\"reportName\":\"identity_enhanced\"}",
                            FailResult = "{\"xPath\":\"Documents.ProofOfAddress\",\"isReviewNeeded\":true,\"isRequired\":true}",
                            FailResultType = "AddCollectionStep",
                            Name = "Onfido identity check",
                            Provider = "Onfido",
                            RunPolicy = "{\"MaxAttempts\":5}",
                            Type = "IdentityEnhanced"
                        },
                        new
                        {
                            Id = new Guid("7147ade3-a665-4b03-9b89-99008218c12f"),
                            Name = "LN RDP fraud screening check",
                            Provider = "LexisNexis",
                            Type = "FraudScreening"
                        },
                        new
                        {
                            Id = new Guid("3b43f013-5ac2-4bd9-96de-20a683331bcf"),
                            Config = "{\"reportName\":\"facial_similarity_photo\",\"isVideoRequired\":false}",
                            FailResult = "{\"xPath\":\"Documents.Selfie.Photo\",\"isReviewNeeded\":false,\"isRequired\":true}",
                            FailResultCondition = "{\"type\":\"MatchDecision\",\"value\":\"Resubmit\"}",
                            FailResultType = "ResubmitCollectionStep",
                            Name = "Onfido facial similarity check by photo",
                            Provider = "Onfido",
                            RunPolicy = "{\"MaxAttempts\":5}",
                            Type = "FacialSimilarity"
                        },
                        new
                        {
                            Id = new Guid("6d930727-5bcc-4014-a9c1-b08b85491d34"),
                            Config = "{\"reportName\":\"facial_similarity_video\",\"isVideoRequired\":true}",
                            FailResult = "{\"xPath\":\"Documents.Selfie.Video\",\"isReviewNeeded\":false,\"isRequired\":true}",
                            FailResultCondition = "{\"type\":\"MatchDecision\",\"value\":\"Resubmit\"}",
                            FailResultType = "ResubmitCollectionStep",
                            Name = "Onfido facial similarity check by video",
                            Provider = "Onfido",
                            RunPolicy = "{\"MaxAttempts\":5}",
                            Type = "FacialSimilarity"
                        },
                        new
                        {
                            Id = new Guid("a9e0048b-0f6b-44f0-8a22-703dd86ba05e"),
                            Config = "{\"countries\":[\"US\"]}",
                            FailResult = "{\"xPath\":\"Documents.Taxation.W9Form\",\"isReviewNeeded\":true,\"isRequired\":true}",
                            FailResultCondition = "{\"type\":\"MatchCountry\",\"value\":\"US\"}",
                            FailResultType = "AddCollectionStep",
                            Name = "Tax residence check",
                            Provider = "System",
                            Type = "TaxResidence"
                        },
                        new
                        {
                            Id = new Guid("0e3b0522-8330-487f-a35c-38cc6022812a"),
                            Config = "{\"reportName\":\"known_faces\",\"isVideoRequired\":true}",
                            FailResult = "{\"xPath\":\"Documents.Selfie.Video\",\"isReviewNeeded\":false,\"isRequired\":true}",
                            FailResultCondition = "{\"type\":\"MatchDecision\",\"value\":\"Resubmit\"}",
                            FailResultType = "ResubmitCollectionStep",
                            Name = "Onfido known face check by video",
                            Provider = "Onfido",
                            RunPolicy = "{\"MaxAttempts\":5}",
                            Type = "FaceDuplication"
                        },
                        new
                        {
                            Id = new Guid("0822efcf-5f04-4d10-a144-460e2040968e"),
                            Config = "{\"reportName\":\"known_faces\",\"isVideoRequired\":false}",
                            FailResult = "{\"xPath\":\"Documents.Selfie.Photo\",\"isReviewNeeded\":false,\"isRequired\":true}",
                            FailResultCondition = "{\"type\":\"MatchDecision\",\"value\":\"Resubmit\"}",
                            FailResultType = "ResubmitCollectionStep",
                            Name = "Onfido known face check by photo",
                            Provider = "Onfido",
                            RunPolicy = "{\"MaxAttempts\":5}",
                            Type = "FaceDuplication"
                        },
                        new
                        {
                            Id = new Guid("779e3ed5-68e1-4c95-8e15-e6d8957820bc"),
                            Config = "{\"matchType\":\"ByRegion\"}",
                            FailResult = "{\"xPath\":\"Documents.ProofOfAddress\",\"isReviewNeeded\":true,\"isRequired\":true}",
                            FailResultType = "AddCollectionStep",
                            Name = "Check region by IP match",
                            Provider = "System",
                            Type = "IpMatch"
                        },
                        new
                        {
                            Id = new Guid("fe22ebbc-da71-43a9-883c-b15f0124f0e3"),
                            Config = "{\"matchType\":\"ByCountry\",\"extractOnly\":true}",
                            Name = "Check country by IP match and just store result",
                            Provider = "System",
                            Type = "IpMatch"
                        },
                        new
                        {
                            Id = new Guid("6431dd13-ef54-4d99-978e-e94067913b43"),
                            Config = "{\"matchType\":\"ByCountry\"}",
                            FailResult = "{\"xPath\":\"Documents.ProofOfAddress\",\"isReviewNeeded\":true,\"isRequired\":true}",
                            FailResultType = "AddCollectionStep",
                            Name = "Check country by IP match with assigning PoA on fail",
                            Provider = "System",
                            Type = "IpMatch"
                        },
                        new
                        {
                            Id = new Guid("ca5d8609-897e-48e1-b9e3-82ba4f40e6ff"),
                            Config = "{\"matchType\":\"ByState\"}",
                            FailResult = "{\"xPath\":\"Documents.ProofOfAddress\",\"isReviewNeeded\":true,\"isRequired\":true}",
                            FailResultType = "AddCollectionStep",
                            Name = "Check state by IP match",
                            Provider = "System",
                            Type = "IpMatch"
                        },
                        new
                        {
                            Id = new Guid("372929f1-8597-4e50-a5ce-5881377af295"),
                            Config = "{\"matchByFirstLastName\":true,\"matchByDob\":true}",
                            Name = "Name and date of birth duplication",
                            Provider = "System",
                            Type = "NameAndDoBDuplication"
                        },
                        new
                        {
                            Id = new Guid("62ba1cc3-8802-4c13-b2ba-bb6efbdbee1f"),
                            Name = "Id document number duplication",
                            Provider = "System",
                            Type = "IdDocNumberDuplication"
                        },
                        new
                        {
                            Id = new Guid("bb30dacb-f8a0-477c-941a-fb0c71c0297a"),
                            Name = "Pep, adverse media, sanction check",
                            Provider = "PassFort",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("759de7bc-0d76-4c53-8fe3-702c2f6dd2ce"),
                            FailResult = "{\"xPath\":\"Survey.CA6B7FB1-413D-449B-9038-32AB5B4914B6\",\"isReviewNeeded\":true,\"isRequired\":true}",
                            FailResultCondition = "{\"type\":\"IsPep\",\"value\":true}",
                            FailResultType = "AddCollectionStep",
                            Name = "UK Pep, adverse media, sanction check",
                            Provider = "PassFort",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("34a33df0-b9b5-4205-9cc6-1f90be10d313"),
                            Name = "US PEP, adverse media, sanction check",
                            Provider = "LexisNexis",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("29aac87b-3ad4-40e0-b34f-3685ca64805d"),
                            Config = "{\"reportName\":\"facial_similarity_photo\",\"isVideoRequired\":false}",
                            Name = "Onfido facial confirmation by photo",
                            Provider = "Onfido",
                            Type = "FacialSimilarity"
                        },
                        new
                        {
                            Id = new Guid("23714f13-cbf6-41a4-85c6-719991e6c3f3"),
                            Config = "{\"reportName\":\"facial_similarity_video\",\"isVideoRequired\":true}",
                            Name = "Onfido facial confirmation by video",
                            Provider = "Onfido",
                            Type = "FacialSimilarity"
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.PolicyTask", b =>
                {
                    b.Property<Guid>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaskVariantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PolicyId", "TaskVariantId");

                    b.HasIndex("TaskVariantId");

                    b.ToTable("PolicyTasks","Policy");

                    b.HasData(
                        new
                        {
                            PolicyId = new Guid("37c6ad01-067c-4b80-976d-30a568e7b0cd"),
                            TaskVariantId = new Guid("689c42ce-e4ac-4712-96a6-c2fcda404283")
                        },
                        new
                        {
                            PolicyId = new Guid("37c6ad01-067c-4b80-976d-30a568e7b0cd"),
                            TaskVariantId = new Guid("805be539-a68e-4e21-9b9e-b9f16dd91c8b")
                        },
                        new
                        {
                            PolicyId = new Guid("37c6ad01-067c-4b80-976d-30a568e7b0cd"),
                            TaskVariantId = new Guid("fd2abd3f-3348-431c-a856-1a37f650398c")
                        },
                        new
                        {
                            PolicyId = new Guid("37c6ad01-067c-4b80-976d-30a568e7b0cd"),
                            TaskVariantId = new Guid("3b349c17-154a-4dc9-a683-045aa985836d")
                        },
                        new
                        {
                            PolicyId = new Guid("37c6ad01-067c-4b80-976d-30a568e7b0cd"),
                            TaskVariantId = new Guid("2772ddb3-1d85-4625-8479-67677d9622be")
                        },
                        new
                        {
                            PolicyId = new Guid("0eaae368-8acb-410b-8ec0-3ae404f49d5e"),
                            TaskVariantId = new Guid("2661697c-e75a-4b87-96cb-3261e9a460d7")
                        },
                        new
                        {
                            PolicyId = new Guid("0eaae368-8acb-410b-8ec0-3ae404f49d5e"),
                            TaskVariantId = new Guid("2f2e1614-b199-4d7a-a8f0-e9aa810e29ec")
                        },
                        new
                        {
                            PolicyId = new Guid("0eaae368-8acb-410b-8ec0-3ae404f49d5e"),
                            TaskVariantId = new Guid("28016523-2197-4c87-adc8-86bfa48a68fd")
                        },
                        new
                        {
                            PolicyId = new Guid("0eaae368-8acb-410b-8ec0-3ae404f49d5e"),
                            TaskVariantId = new Guid("a8d1ca2b-1abb-49d7-a5ae-74e5dd3d9f5e")
                        },
                        new
                        {
                            PolicyId = new Guid("0eaae368-8acb-410b-8ec0-3ae404f49d5e"),
                            TaskVariantId = new Guid("fae04e22-af37-46a6-875a-c93a2ea8c9a3")
                        },
                        new
                        {
                            PolicyId = new Guid("dc658b4f-a0eb-4c20-b296-e0d57e8da6db"),
                            TaskVariantId = new Guid("d06a5360-bd42-490e-82eb-c910ba66acff")
                        },
                        new
                        {
                            PolicyId = new Guid("dc658b4f-a0eb-4c20-b296-e0d57e8da6db"),
                            TaskVariantId = new Guid("f8743f21-a511-45a3-ab03-e833ab639afa")
                        },
                        new
                        {
                            PolicyId = new Guid("dc658b4f-a0eb-4c20-b296-e0d57e8da6db"),
                            TaskVariantId = new Guid("62ba1278-c7f7-42d1-a901-0548fdb1a4db")
                        },
                        new
                        {
                            PolicyId = new Guid("dc658b4f-a0eb-4c20-b296-e0d57e8da6db"),
                            TaskVariantId = new Guid("543ec1a7-6141-4491-9ca6-3691bbddb7ee")
                        },
                        new
                        {
                            PolicyId = new Guid("dc658b4f-a0eb-4c20-b296-e0d57e8da6db"),
                            TaskVariantId = new Guid("9a1c60fb-6f96-431b-abdb-11b5fc9c5ca5")
                        },
                        new
                        {
                            PolicyId = new Guid("5dece2a9-cdd3-4d0d-b1bc-8a164b745051"),
                            TaskVariantId = new Guid("94538731-6f81-48c7-8664-13e70238e5c3")
                        },
                        new
                        {
                            PolicyId = new Guid("5dece2a9-cdd3-4d0d-b1bc-8a164b745051"),
                            TaskVariantId = new Guid("b5160ff6-c9e6-4492-9422-96eb6b8f42ef")
                        },
                        new
                        {
                            PolicyId = new Guid("5dece2a9-cdd3-4d0d-b1bc-8a164b745051"),
                            TaskVariantId = new Guid("563af1e6-dc53-40a7-8604-78945f88b6a3")
                        },
                        new
                        {
                            PolicyId = new Guid("5dece2a9-cdd3-4d0d-b1bc-8a164b745051"),
                            TaskVariantId = new Guid("bc3341a5-e1b3-4f72-93a3-1a5324a92ff9")
                        },
                        new
                        {
                            PolicyId = new Guid("5dece2a9-cdd3-4d0d-b1bc-8a164b745051"),
                            TaskVariantId = new Guid("aa49652a-74c8-4667-a20f-a92fe59cbf2b")
                        },
                        new
                        {
                            PolicyId = new Guid("d5b5997e-ffc1-495d-9e98-60ccbdd6f43b"),
                            TaskVariantId = new Guid("91ddffdb-4788-4783-a004-025b2357a9ed")
                        },
                        new
                        {
                            PolicyId = new Guid("d5b5997e-ffc1-495d-9e98-60ccbdd6f43b"),
                            TaskVariantId = new Guid("782bdf03-5c44-45ad-a267-8a26934066a8")
                        },
                        new
                        {
                            PolicyId = new Guid("d5b5997e-ffc1-495d-9e98-60ccbdd6f43b"),
                            TaskVariantId = new Guid("d4d1e3d0-8fb8-46a8-a5a8-bfae7cf9e471")
                        },
                        new
                        {
                            PolicyId = new Guid("d5b5997e-ffc1-495d-9e98-60ccbdd6f43b"),
                            TaskVariantId = new Guid("7fc98096-1cb1-47fb-91bd-1f600beb82a0")
                        },
                        new
                        {
                            PolicyId = new Guid("d5b5997e-ffc1-495d-9e98-60ccbdd6f43b"),
                            TaskVariantId = new Guid("1dd5ae17-d87c-4b9f-b61f-a084b29abb4a")
                        },
                        new
                        {
                            PolicyId = new Guid("67a2b2c8-beab-4c3e-a772-19ce9380cb0e"),
                            TaskVariantId = new Guid("325704db-6db2-4dab-9c07-ef700e341dbe")
                        },
                        new
                        {
                            PolicyId = new Guid("67a2b2c8-beab-4c3e-a772-19ce9380cb0e"),
                            TaskVariantId = new Guid("02f9e694-49f2-4669-a5c8-bea234d92e03")
                        },
                        new
                        {
                            PolicyId = new Guid("67a2b2c8-beab-4c3e-a772-19ce9380cb0e"),
                            TaskVariantId = new Guid("cbeed7f8-943b-482f-81a5-4648f4f1fa04")
                        },
                        new
                        {
                            PolicyId = new Guid("67a2b2c8-beab-4c3e-a772-19ce9380cb0e"),
                            TaskVariantId = new Guid("2796b0cb-42cb-49b7-a30e-84824d603799")
                        },
                        new
                        {
                            PolicyId = new Guid("67a2b2c8-beab-4c3e-a772-19ce9380cb0e"),
                            TaskVariantId = new Guid("cf3d8afc-cbb4-4531-bea5-ddf2eb990cfe")
                        },
                        new
                        {
                            PolicyId = new Guid("4b6271bd-fde5-40f7-8701-29aa66865568"),
                            TaskVariantId = new Guid("caefe21a-e362-4ff5-93b5-943158102c31")
                        },
                        new
                        {
                            PolicyId = new Guid("4b6271bd-fde5-40f7-8701-29aa66865568"),
                            TaskVariantId = new Guid("fbca7efc-39f1-4d26-8e5c-4feb4a7fd34f")
                        },
                        new
                        {
                            PolicyId = new Guid("4b6271bd-fde5-40f7-8701-29aa66865568"),
                            TaskVariantId = new Guid("9486f8ef-1730-45a7-a724-434d4e89c7c1")
                        },
                        new
                        {
                            PolicyId = new Guid("4b6271bd-fde5-40f7-8701-29aa66865568"),
                            TaskVariantId = new Guid("828c3d69-d9b1-46d5-9498-45f3dd74b278")
                        },
                        new
                        {
                            PolicyId = new Guid("4b6271bd-fde5-40f7-8701-29aa66865568"),
                            TaskVariantId = new Guid("886609cb-ed63-4aef-aee9-b51b75c2a829")
                        },
                        new
                        {
                            PolicyId = new Guid("4b6271bd-fde5-40f7-8701-29aa66865568"),
                            TaskVariantId = new Guid("c2badff2-b73f-4fb0-b447-a3eb48964b36")
                        },
                        new
                        {
                            PolicyId = new Guid("4b6271bd-fde5-40f7-8701-29aa66865568"),
                            TaskVariantId = new Guid("72df5230-bb5a-4857-bcaf-9e27f0cd8a36")
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.PolicyValidationRule", b =>
                {
                    b.Property<Guid>("ValidationPolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ValidationRuleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ValidationPolicyId", "ValidationRuleId");

                    b.HasIndex("ValidationRuleId");

                    b.ToTable("PolicyValidationRules","Policy");

                    b.HasData(
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("aa8c8f46-aaf5-4ea5-bbb2-f8f811da1f5c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("aa8c8f46-aaf5-4ea5-bbb2-f8f811da1f5c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("4f77702a-df34-4684-af5d-8c5fd9ec1b36")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("f4478c30-5ecd-410f-ba72-575ba268682c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("f6ede1e2-b69f-41b2-956d-db45d8dbb226")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("ab90f2f2-3b5d-4e74-b05f-d443f23fdcb9")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("6c50922d-febc-4416-af3d-81f771a389dd")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("af4b82da-22e0-4fa8-b74e-42fa285f5a43")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("e46e49e8-7bea-4d6a-80c5-c6f556c410b0")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("5d2cda7c-8b21-454a-999d-4f146ac2e5a2")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("31474269-ffdb-44d3-9d3f-2b3bb5c00f6c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("bbe234db-476a-4a66-ac23-dbca57db4e45")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("75da945b-94c9-4975-8587-9aae38f53216")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("5caf831e-7018-4e7e-836e-6c61fe31dc7b")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("5a2d668f-6333-4f84-88a1-75eb88897a17")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("5e519b39-a458-4703-be2f-fe7f5948daa5")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("68746bcc-737c-43a1-a84a-6d5414dd1e6f")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("f4346a26-b2f6-4efb-84de-ca4b9ac5b52e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("16340711-72e0-4b4f-8e89-e650a695810e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("0ef1a99b-2ac7-4423-a204-accc38774b13")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("f65fe169-e581-42c3-b31f-d6041cdb29c0")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("624f33b9-21e9-4e0d-81b8-f115c0e4c323")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("eb29ee6b-608f-4414-85a1-69a9146074f0")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("ada3aafc-5a8b-4e47-853b-fb3324cd71e8")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            ValidationRuleId = new Guid("21f3d70e-f290-4fce-8d0b-318a16fb19a9")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("aa8c8f46-aaf5-4ea5-bbb2-f8f811da1f5c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("bf6fa364-0215-4a0e-9c03-be9edd4aa150")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("aa8c8f46-aaf5-4ea5-bbb2-f8f811da1f5c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("bf6fa364-0215-4a0e-9c03-be9edd4aa150")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("6da77929-3d09-473c-b707-23c0512d4c8d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("4f77702a-df34-4684-af5d-8c5fd9ec1b36")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("f4478c30-5ecd-410f-ba72-575ba268682c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("f6ede1e2-b69f-41b2-956d-db45d8dbb226")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("ab90f2f2-3b5d-4e74-b05f-d443f23fdcb9")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("6c50922d-febc-4416-af3d-81f771a389dd")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("af4b82da-22e0-4fa8-b74e-42fa285f5a43")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("e46e49e8-7bea-4d6a-80c5-c6f556c410b0")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("5d2cda7c-8b21-454a-999d-4f146ac2e5a2")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("31474269-ffdb-44d3-9d3f-2b3bb5c00f6c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("bbe234db-476a-4a66-ac23-dbca57db4e45")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("75da945b-94c9-4975-8587-9aae38f53216")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("5caf831e-7018-4e7e-836e-6c61fe31dc7b")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("5a2d668f-6333-4f84-88a1-75eb88897a17")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("5e519b39-a458-4703-be2f-fe7f5948daa5")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("68746bcc-737c-43a1-a84a-6d5414dd1e6f")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("f4346a26-b2f6-4efb-84de-ca4b9ac5b52e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("16340711-72e0-4b4f-8e89-e650a695810e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("0ef1a99b-2ac7-4423-a204-accc38774b13")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("f65fe169-e581-42c3-b31f-d6041cdb29c0")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("624f33b9-21e9-4e0d-81b8-f115c0e4c323")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("eb29ee6b-608f-4414-85a1-69a9146074f0")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("ada3aafc-5a8b-4e47-853b-fb3324cd71e8")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            ValidationRuleId = new Guid("21f3d70e-f290-4fce-8d0b-318a16fb19a9")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("bf6fa364-0215-4a0e-9c03-be9edd4aa150")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("aa8c8f46-aaf5-4ea5-bbb2-f8f811da1f5c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("30f5b20e-b307-4409-a79a-dcb0d2e8894c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("6f108a0d-4c86-4509-9b76-1036d2014538")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("3201df75-b356-4d0e-9b48-76aa8d12f4ce")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("5cbecb0b-86d7-4aa3-9361-5a0414200910")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("b512e3ad-764e-4e78-83cc-d466354746be")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("bf6fa364-0215-4a0e-9c03-be9edd4aa150")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("aa8c8f46-aaf5-4ea5-bbb2-f8f811da1f5c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("1b42e59a-8302-481d-92c4-f70ab448c422")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("bd991802-3a91-443c-bdf6-9af3e6efbe12")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("6da77929-3d09-473c-b707-23c0512d4c8d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("aa8c8f46-aaf5-4ea5-bbb2-f8f811da1f5c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("bd991802-3a91-443c-bdf6-9af3e6efbe12")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("aa8c8f46-aaf5-4ea5-bbb2-f8f811da1f5c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("6f108a0d-4c86-4509-9b76-1036d2014538")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("bf6fa364-0215-4a0e-9c03-be9edd4aa150")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("bf6fa364-0215-4a0e-9c03-be9edd4aa150")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("bf6fa364-0215-4a0e-9c03-be9edd4aa150")
                        },
                        new
                        {
                            ValidationPolicyId = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            ValidationRuleId = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af")
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.TaskCheckVariant", b =>
                {
                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CheckVariantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TaskId", "CheckVariantId");

                    b.HasIndex("CheckVariantId");

                    b.ToTable("TaskCheckVariants","Policy");

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("689c42ce-e4ac-4712-96a6-c2fcda404283"),
                            CheckVariantId = new Guid("d6f2daf9-3f8f-4335-a7b8-4fc383471a1d")
                        },
                        new
                        {
                            TaskId = new Guid("689c42ce-e4ac-4712-96a6-c2fcda404283"),
                            CheckVariantId = new Guid("6d930727-5bcc-4014-a9c1-b08b85491d34")
                        },
                        new
                        {
                            TaskId = new Guid("805be539-a68e-4e21-9b9e-b9f16dd91c8b"),
                            CheckVariantId = new Guid("a9e0048b-0f6b-44f0-8a22-703dd86ba05e")
                        },
                        new
                        {
                            TaskId = new Guid("fd2abd3f-3348-431c-a856-1a37f650398c"),
                            CheckVariantId = new Guid("372929f1-8597-4e50-a5ce-5881377af295")
                        },
                        new
                        {
                            TaskId = new Guid("fd2abd3f-3348-431c-a856-1a37f650398c"),
                            CheckVariantId = new Guid("0e3b0522-8330-487f-a35c-38cc6022812a")
                        },
                        new
                        {
                            TaskId = new Guid("fd2abd3f-3348-431c-a856-1a37f650398c"),
                            CheckVariantId = new Guid("62ba1cc3-8802-4c13-b2ba-bb6efbdbee1f")
                        },
                        new
                        {
                            TaskId = new Guid("3b349c17-154a-4dc9-a683-045aa985836d"),
                            CheckVariantId = new Guid("6431dd13-ef54-4d99-978e-e94067913b43")
                        },
                        new
                        {
                            TaskId = new Guid("2772ddb3-1d85-4625-8479-67677d9622be"),
                            CheckVariantId = new Guid("bb30dacb-f8a0-477c-941a-fb0c71c0297a")
                        },
                        new
                        {
                            TaskId = new Guid("2661697c-e75a-4b87-96cb-3261e9a460d7"),
                            CheckVariantId = new Guid("d6f2daf9-3f8f-4335-a7b8-4fc383471a1d")
                        },
                        new
                        {
                            TaskId = new Guid("2661697c-e75a-4b87-96cb-3261e9a460d7"),
                            CheckVariantId = new Guid("3b43f013-5ac2-4bd9-96de-20a683331bcf")
                        },
                        new
                        {
                            TaskId = new Guid("2f2e1614-b199-4d7a-a8f0-e9aa810e29ec"),
                            CheckVariantId = new Guid("a9e0048b-0f6b-44f0-8a22-703dd86ba05e")
                        },
                        new
                        {
                            TaskId = new Guid("28016523-2197-4c87-adc8-86bfa48a68fd"),
                            CheckVariantId = new Guid("372929f1-8597-4e50-a5ce-5881377af295")
                        },
                        new
                        {
                            TaskId = new Guid("28016523-2197-4c87-adc8-86bfa48a68fd"),
                            CheckVariantId = new Guid("0822efcf-5f04-4d10-a144-460e2040968e")
                        },
                        new
                        {
                            TaskId = new Guid("28016523-2197-4c87-adc8-86bfa48a68fd"),
                            CheckVariantId = new Guid("62ba1cc3-8802-4c13-b2ba-bb6efbdbee1f")
                        },
                        new
                        {
                            TaskId = new Guid("a8d1ca2b-1abb-49d7-a5ae-74e5dd3d9f5e"),
                            CheckVariantId = new Guid("fe22ebbc-da71-43a9-883c-b15f0124f0e3")
                        },
                        new
                        {
                            TaskId = new Guid("fae04e22-af37-46a6-875a-c93a2ea8c9a3"),
                            CheckVariantId = new Guid("bb30dacb-f8a0-477c-941a-fb0c71c0297a")
                        },
                        new
                        {
                            TaskId = new Guid("d06a5360-bd42-490e-82eb-c910ba66acff"),
                            CheckVariantId = new Guid("d6f2daf9-3f8f-4335-a7b8-4fc383471a1d")
                        },
                        new
                        {
                            TaskId = new Guid("d06a5360-bd42-490e-82eb-c910ba66acff"),
                            CheckVariantId = new Guid("3b43f013-5ac2-4bd9-96de-20a683331bcf")
                        },
                        new
                        {
                            TaskId = new Guid("f8743f21-a511-45a3-ab03-e833ab639afa"),
                            CheckVariantId = new Guid("a9e0048b-0f6b-44f0-8a22-703dd86ba05e")
                        },
                        new
                        {
                            TaskId = new Guid("62ba1278-c7f7-42d1-a901-0548fdb1a4db"),
                            CheckVariantId = new Guid("372929f1-8597-4e50-a5ce-5881377af295")
                        },
                        new
                        {
                            TaskId = new Guid("62ba1278-c7f7-42d1-a901-0548fdb1a4db"),
                            CheckVariantId = new Guid("0822efcf-5f04-4d10-a144-460e2040968e")
                        },
                        new
                        {
                            TaskId = new Guid("62ba1278-c7f7-42d1-a901-0548fdb1a4db"),
                            CheckVariantId = new Guid("62ba1cc3-8802-4c13-b2ba-bb6efbdbee1f")
                        },
                        new
                        {
                            TaskId = new Guid("543ec1a7-6141-4491-9ca6-3691bbddb7ee"),
                            CheckVariantId = new Guid("fe22ebbc-da71-43a9-883c-b15f0124f0e3")
                        },
                        new
                        {
                            TaskId = new Guid("543ec1a7-6141-4491-9ca6-3691bbddb7ee"),
                            CheckVariantId = new Guid("63eaa27a-a6fc-43a8-93e4-0d7bfbd7cf23")
                        },
                        new
                        {
                            TaskId = new Guid("9a1c60fb-6f96-431b-abdb-11b5fc9c5ca5"),
                            CheckVariantId = new Guid("bb30dacb-f8a0-477c-941a-fb0c71c0297a")
                        },
                        new
                        {
                            TaskId = new Guid("94538731-6f81-48c7-8664-13e70238e5c3"),
                            CheckVariantId = new Guid("d6f2daf9-3f8f-4335-a7b8-4fc383471a1d")
                        },
                        new
                        {
                            TaskId = new Guid("94538731-6f81-48c7-8664-13e70238e5c3"),
                            CheckVariantId = new Guid("3b43f013-5ac2-4bd9-96de-20a683331bcf")
                        },
                        new
                        {
                            TaskId = new Guid("b5160ff6-c9e6-4492-9422-96eb6b8f42ef"),
                            CheckVariantId = new Guid("a9e0048b-0f6b-44f0-8a22-703dd86ba05e")
                        },
                        new
                        {
                            TaskId = new Guid("563af1e6-dc53-40a7-8604-78945f88b6a3"),
                            CheckVariantId = new Guid("372929f1-8597-4e50-a5ce-5881377af295")
                        },
                        new
                        {
                            TaskId = new Guid("563af1e6-dc53-40a7-8604-78945f88b6a3"),
                            CheckVariantId = new Guid("0822efcf-5f04-4d10-a144-460e2040968e")
                        },
                        new
                        {
                            TaskId = new Guid("563af1e6-dc53-40a7-8604-78945f88b6a3"),
                            CheckVariantId = new Guid("62ba1cc3-8802-4c13-b2ba-bb6efbdbee1f")
                        },
                        new
                        {
                            TaskId = new Guid("aa49652a-74c8-4667-a20f-a92fe59cbf2b"),
                            CheckVariantId = new Guid("bb30dacb-f8a0-477c-941a-fb0c71c0297a")
                        },
                        new
                        {
                            TaskId = new Guid("91ddffdb-4788-4783-a004-025b2357a9ed"),
                            CheckVariantId = new Guid("d6f2daf9-3f8f-4335-a7b8-4fc383471a1d")
                        },
                        new
                        {
                            TaskId = new Guid("91ddffdb-4788-4783-a004-025b2357a9ed"),
                            CheckVariantId = new Guid("3b43f013-5ac2-4bd9-96de-20a683331bcf")
                        },
                        new
                        {
                            TaskId = new Guid("782bdf03-5c44-45ad-a267-8a26934066a8"),
                            CheckVariantId = new Guid("a9e0048b-0f6b-44f0-8a22-703dd86ba05e")
                        },
                        new
                        {
                            TaskId = new Guid("d4d1e3d0-8fb8-46a8-a5a8-bfae7cf9e471"),
                            CheckVariantId = new Guid("372929f1-8597-4e50-a5ce-5881377af295")
                        },
                        new
                        {
                            TaskId = new Guid("d4d1e3d0-8fb8-46a8-a5a8-bfae7cf9e471"),
                            CheckVariantId = new Guid("0822efcf-5f04-4d10-a144-460e2040968e")
                        },
                        new
                        {
                            TaskId = new Guid("d4d1e3d0-8fb8-46a8-a5a8-bfae7cf9e471"),
                            CheckVariantId = new Guid("62ba1cc3-8802-4c13-b2ba-bb6efbdbee1f")
                        },
                        new
                        {
                            TaskId = new Guid("7fc98096-1cb1-47fb-91bd-1f600beb82a0"),
                            CheckVariantId = new Guid("6431dd13-ef54-4d99-978e-e94067913b43")
                        },
                        new
                        {
                            TaskId = new Guid("1dd5ae17-d87c-4b9f-b61f-a084b29abb4a"),
                            CheckVariantId = new Guid("bb30dacb-f8a0-477c-941a-fb0c71c0297a")
                        },
                        new
                        {
                            TaskId = new Guid("325704db-6db2-4dab-9c07-ef700e341dbe"),
                            CheckVariantId = new Guid("d6f2daf9-3f8f-4335-a7b8-4fc383471a1d")
                        },
                        new
                        {
                            TaskId = new Guid("325704db-6db2-4dab-9c07-ef700e341dbe"),
                            CheckVariantId = new Guid("6d930727-5bcc-4014-a9c1-b08b85491d34")
                        },
                        new
                        {
                            TaskId = new Guid("02f9e694-49f2-4669-a5c8-bea234d92e03"),
                            CheckVariantId = new Guid("a9e0048b-0f6b-44f0-8a22-703dd86ba05e")
                        },
                        new
                        {
                            TaskId = new Guid("cbeed7f8-943b-482f-81a5-4648f4f1fa04"),
                            CheckVariantId = new Guid("372929f1-8597-4e50-a5ce-5881377af295")
                        },
                        new
                        {
                            TaskId = new Guid("cbeed7f8-943b-482f-81a5-4648f4f1fa04"),
                            CheckVariantId = new Guid("0e3b0522-8330-487f-a35c-38cc6022812a")
                        },
                        new
                        {
                            TaskId = new Guid("cbeed7f8-943b-482f-81a5-4648f4f1fa04"),
                            CheckVariantId = new Guid("62ba1cc3-8802-4c13-b2ba-bb6efbdbee1f")
                        },
                        new
                        {
                            TaskId = new Guid("2796b0cb-42cb-49b7-a30e-84824d603799"),
                            CheckVariantId = new Guid("6431dd13-ef54-4d99-978e-e94067913b43")
                        },
                        new
                        {
                            TaskId = new Guid("cf3d8afc-cbb4-4531-bea5-ddf2eb990cfe"),
                            CheckVariantId = new Guid("bb30dacb-f8a0-477c-941a-fb0c71c0297a")
                        },
                        new
                        {
                            TaskId = new Guid("caefe21a-e362-4ff5-93b5-943158102c31"),
                            CheckVariantId = new Guid("d6f2daf9-3f8f-4335-a7b8-4fc383471a1d")
                        },
                        new
                        {
                            TaskId = new Guid("caefe21a-e362-4ff5-93b5-943158102c31"),
                            CheckVariantId = new Guid("6d930727-5bcc-4014-a9c1-b08b85491d34")
                        },
                        new
                        {
                            TaskId = new Guid("9486f8ef-1730-45a7-a724-434d4e89c7c1"),
                            CheckVariantId = new Guid("372929f1-8597-4e50-a5ce-5881377af295")
                        },
                        new
                        {
                            TaskId = new Guid("9486f8ef-1730-45a7-a724-434d4e89c7c1"),
                            CheckVariantId = new Guid("0e3b0522-8330-487f-a35c-38cc6022812a")
                        },
                        new
                        {
                            TaskId = new Guid("9486f8ef-1730-45a7-a724-434d4e89c7c1"),
                            CheckVariantId = new Guid("62ba1cc3-8802-4c13-b2ba-bb6efbdbee1f")
                        },
                        new
                        {
                            TaskId = new Guid("828c3d69-d9b1-46d5-9498-45f3dd74b278"),
                            CheckVariantId = new Guid("6431dd13-ef54-4d99-978e-e94067913b43")
                        },
                        new
                        {
                            TaskId = new Guid("886609cb-ed63-4aef-aee9-b51b75c2a829"),
                            CheckVariantId = new Guid("7147ade3-a665-4b03-9b89-99008218c12f")
                        },
                        new
                        {
                            TaskId = new Guid("c2badff2-b73f-4fb0-b447-a3eb48964b36"),
                            CheckVariantId = new Guid("34a33df0-b9b5-4205-9cc6-1f90be10d313")
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.TaskVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AutoCompletePolicy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10)
                        .HasDefaultValue("None");

                    b.Property<string>("CollectionSteps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Tasks","Policy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("689c42ce-e4ac-4712-96a6-c2fcda404283"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Identity task",
                            Type = "Identity"
                        },
                        new
                        {
                            Id = new Guid("805be539-a68e-4e21-9b9e-b9f16dd91c8b"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Tax residence",
                            Type = "TaxResidence"
                        },
                        new
                        {
                            Id = new Guid("fd2abd3f-3348-431c-a856-1a37f650398c"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User duplication screening",
                            Type = "DuplicationScreening"
                        },
                        new
                        {
                            Id = new Guid("3b349c17-154a-4dc9-a683-045aa985836d"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User address verification",
                            Type = "Address"
                        },
                        new
                        {
                            Id = new Guid("2772ddb3-1d85-4625-8479-67677d9622be"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"VerificationDetails.IsPep\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsAdverseMedia\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsSanctioned\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Risk lists screening",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("2661697c-e75a-4b87-96cb-3261e9a460d7"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"Survey.C5E7A138-2E36-43D0-BD76-43A606068F49\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Identity task",
                            Type = "Identity"
                        },
                        new
                        {
                            Id = new Guid("2f2e1614-b199-4d7a-a8f0-e9aa810e29ec"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Tax residence",
                            Type = "TaxResidence"
                        },
                        new
                        {
                            Id = new Guid("28016523-2197-4c87-adc8-86bfa48a68fd"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User duplication screening",
                            Type = "DuplicationScreening"
                        },
                        new
                        {
                            Id = new Guid("a8d1ca2b-1abb-49d7-a5ae-74e5dd3d9f5e"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User address",
                            Type = "Address"
                        },
                        new
                        {
                            Id = new Guid("fae04e22-af37-46a6-875a-c93a2ea8c9a3"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"VerificationDetails.IsPep\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsAdverseMedia\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsSanctioned\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Risk lists screening",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("9e202236-42b4-4105-a6a4-1356a82911a2"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Proof of funds/wealth assessment",
                            Type = "ProofOfFunds"
                        },
                        new
                        {
                            Id = new Guid("41f23381-f8bb-42c7-8b58-c344a4ad011e"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Financial stability assessment",
                            Type = "FinancialCondition"
                        },
                        new
                        {
                            Id = new Guid("d06a5360-bd42-490e-82eb-c910ba66acff"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"Survey.C5E7A138-2E36-43D0-BD76-43A606068F49\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Identity task",
                            Type = "Identity"
                        },
                        new
                        {
                            Id = new Guid("f8743f21-a511-45a3-ab03-e833ab639afa"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Tax residence",
                            Type = "TaxResidence"
                        },
                        new
                        {
                            Id = new Guid("62ba1278-c7f7-42d1-a901-0548fdb1a4db"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User duplication screening",
                            Type = "DuplicationScreening"
                        },
                        new
                        {
                            Id = new Guid("543ec1a7-6141-4491-9ca6-3691bbddb7ee"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User address",
                            Type = "Address"
                        },
                        new
                        {
                            Id = new Guid("9a1c60fb-6f96-431b-abdb-11b5fc9c5ca5"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"VerificationDetails.IsPep\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsAdverseMedia\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsSanctioned\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Risk lists screening",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("c1b826b7-6e0a-4ab3-813d-4393e0c0e095"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Proof of funds/wealth assessment",
                            Type = "ProofOfFunds"
                        },
                        new
                        {
                            Id = new Guid("cf9f0ca8-6535-4f4a-b2d3-71ab075ec841"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Financial stability assessment",
                            Type = "FinancialCondition"
                        },
                        new
                        {
                            Id = new Guid("94538731-6f81-48c7-8664-13e70238e5c3"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Identity task",
                            Type = "Identity"
                        },
                        new
                        {
                            Id = new Guid("b5160ff6-c9e6-4492-9422-96eb6b8f42ef"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Tax residence",
                            Type = "TaxResidence"
                        },
                        new
                        {
                            Id = new Guid("563af1e6-dc53-40a7-8604-78945f88b6a3"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User duplication screening",
                            Type = "DuplicationScreening"
                        },
                        new
                        {
                            Id = new Guid("bc3341a5-e1b3-4f72-93a3-1a5324a92ff9"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"Documents.ProofOfAddress\",\"IsRequired\":true,\"IsReviewNeeded\":true}]",
                            Name = "User address verification",
                            Type = "Address"
                        },
                        new
                        {
                            Id = new Guid("aa49652a-74c8-4667-a20f-a92fe59cbf2b"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"VerificationDetails.IsPep\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsAdverseMedia\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsSanctioned\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Risk lists screening",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("91ddffdb-4788-4783-a004-025b2357a9ed"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Identity task",
                            Type = "Identity"
                        },
                        new
                        {
                            Id = new Guid("782bdf03-5c44-45ad-a267-8a26934066a8"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Tax residence",
                            Type = "TaxResidence"
                        },
                        new
                        {
                            Id = new Guid("d4d1e3d0-8fb8-46a8-a5a8-bfae7cf9e471"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User duplication screening",
                            Type = "DuplicationScreening"
                        },
                        new
                        {
                            Id = new Guid("7fc98096-1cb1-47fb-91bd-1f600beb82a0"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User address",
                            Type = "Address"
                        },
                        new
                        {
                            Id = new Guid("1dd5ae17-d87c-4b9f-b61f-a084b29abb4a"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"VerificationDetails.IsPep\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsAdverseMedia\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsSanctioned\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Risk lists screening",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("325704db-6db2-4dab-9c07-ef700e341dbe"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Identity task",
                            Type = "Identity"
                        },
                        new
                        {
                            Id = new Guid("02f9e694-49f2-4669-a5c8-bea234d92e03"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Tax residence",
                            Type = "TaxResidence"
                        },
                        new
                        {
                            Id = new Guid("cbeed7f8-943b-482f-81a5-4648f4f1fa04"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User duplication screening",
                            Type = "DuplicationScreening"
                        },
                        new
                        {
                            Id = new Guid("2796b0cb-42cb-49b7-a30e-84824d603799"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User address",
                            Type = "Address"
                        },
                        new
                        {
                            Id = new Guid("cf3d8afc-cbb4-4531-bea5-ddf2eb990cfe"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"VerificationDetails.IsPep\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsAdverseMedia\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsSanctioned\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Risk lists screening",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("caefe21a-e362-4ff5-93b5-943158102c31"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Identity task",
                            Type = "Identity"
                        },
                        new
                        {
                            Id = new Guid("fbca7efc-39f1-4d26-8e5c-4feb4a7fd34f"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"VerificationDetails.TaxResidence\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Tax residence",
                            Type = "TaxResidence"
                        },
                        new
                        {
                            Id = new Guid("9486f8ef-1730-45a7-a724-434d4e89c7c1"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User duplication screening",
                            Type = "DuplicationScreening"
                        },
                        new
                        {
                            Id = new Guid("828c3d69-d9b1-46d5-9498-45f3dd74b278"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "User address",
                            Type = "Address"
                        },
                        new
                        {
                            Id = new Guid("886609cb-ed63-4aef-aee9-b51b75c2a829"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Additional identity proofing task",
                            Type = "FraudScreening"
                        },
                        new
                        {
                            Id = new Guid("c2badff2-b73f-4fb0-b447-a3eb48964b36"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"VerificationDetails.IsPep\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsAdverseMedia\",\"IsRequired\":true,\"IsReviewNeeded\":false},{\"XPath\":\"VerificationDetails.IsSanctioned\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "Risk lists screening",
                            Type = "RiskListsScreening"
                        },
                        new
                        {
                            Id = new Guid("72df5230-bb5a-4857-bcaf-9e27f0cd8a36"),
                            AutoCompletePolicy = "EveryTime",
                            CollectionSteps = "[{\"XPath\":\"Survey.DE532CA0-C21E-4F7B-AD09-647EAA0C4E00\",\"IsRequired\":true,\"IsReviewNeeded\":false}]",
                            Name = "CDD questionnaire",
                            Type = "FinancialCondition"
                        },
                        new
                        {
                            Id = new Guid("c2d32093-ad0f-45ad-9377-4dd12550a221"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "EDD questionnaire",
                            Type = "UserRiskScreening"
                        },
                        new
                        {
                            Id = new Guid("1673241e-bc0a-4007-a353-a2c39880bbef"),
                            AutoCompletePolicy = "EveryTime",
                            Name = "Proof of funds/wealth assessment",
                            Type = "ProofOfFunds"
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.TriggerVariant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Commands")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Conditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Iterative")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<Guid>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Preconditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PolicyId");

                    b.ToTable("Triggers","Policy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15cf6520-6990-4f6d-a6a2-e4416dd55906"),
                            Commands = "[{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"9E202236-42B4-4105-A6A4-1356A82911A2\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfFunds\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.0FB7492B-7DC5-4277-A7FF-F3D07376FF66\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":0,\"Value\":\"High\"}]",
                            Iterative = false,
                            Name = "Proof of funds/wealth assessment",
                            PolicyId = new Guid("0eaae368-8acb-410b-8ec0-3ae404f49d5e")
                        },
                        new
                        {
                            Id = new Guid("86107529-fe66-4817-8261-3ab8e860885e"),
                            Commands = "[{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"41F23381-F8BB-42C7-8B58-C344A4AD011E\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"FinancialCondition\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.F9A2A3AC-6E98-43C9-BAB2-794E8E6DF686\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":0,\"Value\":\"High\"}]",
                            Iterative = false,
                            Name = "Financial stability assessment",
                            PolicyId = new Guid("0eaae368-8acb-410b-8ec0-3ae404f49d5e")
                        },
                        new
                        {
                            Id = new Guid("90abd5ec-84ff-4e9c-a3db-4b5586116d3c"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":0,\"Value\":\"High\"}]",
                            Iterative = false,
                            Name = "Request POA documents for HighRisk",
                            PolicyId = new Guid("0eaae368-8acb-410b-8ec0-3ae404f49d5e")
                        },
                        new
                        {
                            Id = new Guid("222e9d58-cacb-4094-9399-2aa50aa2d766"),
                            Commands = "[{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"C1B826B7-6E0A-4AB3-813D-4393E0C0E095\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfFunds\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.0FB7492B-7DC5-4277-A7FF-F3D07376FF66\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":0,\"Value\":\"High\"}]",
                            Iterative = false,
                            Name = "Proof of funds/wealth assessment",
                            PolicyId = new Guid("dc658b4f-a0eb-4c20-b296-e0d57e8da6db")
                        },
                        new
                        {
                            Id = new Guid("af4321cb-e246-479a-9f13-84ac8942c078"),
                            Commands = "[{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"CF9F0CA8-6535-4F4A-B2D3-71AB075EC841\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"FinancialCondition\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.F9A2A3AC-6E98-43C9-BAB2-794E8E6DF686\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":0,\"Value\":\"High\"}]",
                            Iterative = false,
                            Name = "Financial stability assessment",
                            PolicyId = new Guid("dc658b4f-a0eb-4c20-b296-e0d57e8da6db")
                        },
                        new
                        {
                            Id = new Guid("d064bf48-8b8c-44c7-851c-59a69e78c37a"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":0,\"Value\":\"High\"}]",
                            Iterative = false,
                            Name = "Require POA documents for HighRisk",
                            PolicyId = new Guid("dc658b4f-a0eb-4c20-b296-e0d57e8da6db")
                        },
                        new
                        {
                            Id = new Guid("44fe4c45-7f6d-48a8-8690-e5d92c97f61b"),
                            Commands = "[{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"C2D32093-AD0F-45AD-9377-4DD12550A221\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"UserRiskScreening\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.EDDACA4C-C4A6-40C6-8FF3-D63A5D435783\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":1,\"Value\":\"ITIN\"},{\"Type\":2,\"Value\":true}]",
                            Iterative = false,
                            Name = "EDD questionnaire",
                            PolicyId = new Guid("4b6271bd-fde5-40f7-8701-29aa66865568")
                        },
                        new
                        {
                            Id = new Guid("2b6467db-ba15-42e5-9b3d-a4df4fae2475"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":false}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"High\",\"threshold\":2300}}]",
                            Iterative = false,
                            Name = "Request PoA on first turnover threshold",
                            PolicyId = new Guid("c8e4aff9-c3ac-429f-907e-61fd2519cadd")
                        },
                        new
                        {
                            Id = new Guid("e8671add-b3f4-4c61-abb8-310b31af9c2e"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"High\",\"threshold\":2900}}]",
                            Iterative = false,
                            Name = "Require PoA on second turnover threshold",
                            PolicyId = new Guid("c8e4aff9-c3ac-429f-907e-61fd2519cadd")
                        },
                        new
                        {
                            Id = new Guid("b62b049c-4b5c-40e5-8927-d83674e2a245"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":false}}\"},{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"41F23381-F8BB-42C7-8B58-C344A4AD011E\\\",\\\"addCompleted\\\":true}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"FinancialCondition\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.F9A2A3AC-6E98-43C9-BAB2-794E8E6DF686\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":false}}\"}]",
                            Conditions = "[{\"Type\":6,\"Value\":{\"riskLevel\":\"Low\",\"limit\":\"3\",\"unit\":\"Year\"}},{\"Type\":6,\"Value\":{\"riskLevel\":\"Medium\",\"limit\":\"2\",\"unit\":\"Year\"}},{\"Type\":6,\"Value\":{\"riskLevel\":\"High\",\"limit\":\"1\",\"unit\":\"Year\"}},{\"Type\":6,\"Value\":{\"riskLevel\":\"ExtraHigh\",\"limit\":\"1\",\"unit\":\"Year\"}}]",
                            Iterative = false,
                            Name = "Account age tracking",
                            PolicyId = new Guid("7ba96008-c7b3-469b-9f3c-307224abbe83"),
                            Schedule = "{\"Type\":2,\"Offset\":\"01:00:00\",\"Value\":\"{\\\"unit\\\":\\\"Day\\\",\\\"value\\\":7}\"}"
                        },
                        new
                        {
                            Id = new Guid("14fa6b41-8751-48fa-a862-ec7486a7b06c"),
                            Commands = "[{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"41F23381-F8BB-42C7-8B58-C344A4AD011E\\\",\\\"addCompleted\\\":true}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"FinancialCondition\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.F9A2A3AC-6E98-43C9-BAB2-794E8E6DF686\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":false}}\"},{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"9E202236-42B4-4105-A6A4-1356A82911A2\\\",\\\"addCompleted\\\":true}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.0FB7492B-7DC5-4277-A7FF-F3D07376FF66\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":false}}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfFunds\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":false}}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":false}}\"}]",
                            Conditions = "[{\"Type\":0,\"Value\":\"High\"},{\"Type\":0,\"Value\":\"ExtraHigh\"}]",
                            Iterative = false,
                            Name = "EEA high risk user",
                            PolicyId = new Guid("7ba96008-c7b3-469b-9f3c-307224abbe83")
                        },
                        new
                        {
                            Id = new Guid("25540161-4ccb-4c03-9458-62cd8dad0bfa"),
                            Commands = "[{\"Type\":4,\"Config\":\"{\\\"reason\\\":\\\"first-threshold-reached\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":false}}\"},{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"41F23381-F8BB-42C7-8B58-C344A4AD011E\\\",\\\"addCompleted\\\":true}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"FinancialCondition\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.F9A2A3AC-6E98-43C9-BAB2-794E8E6DF686\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":false}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"Low\",\"threshold\":60000}},{\"Type\":4,\"Value\":{\"riskLevel\":\"Medium\",\"threshold\":30000}}]",
                            Iterative = false,
                            Name = "Request PoA on first turnover threshold",
                            PolicyId = new Guid("7ba96008-c7b3-469b-9f3c-307224abbe83")
                        },
                        new
                        {
                            Id = new Guid("9bd82eb1-4649-460a-98b3-491a2c79a509"),
                            Commands = "[{\"Type\":4,\"Config\":\"{\\\"reason\\\":\\\"second-threshold-reached\\\"}\"},{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"9E202236-42B4-4105-A6A4-1356A82911A2\\\",\\\"addCompleted\\\":true}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.0FB7492B-7DC5-4277-A7FF-F3D07376FF66\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":false}}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfFunds\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":false}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"Low\",\"threshold\":75000}},{\"Type\":4,\"Value\":{\"riskLevel\":\"Medium\",\"threshold\":60000}}]",
                            Iterative = false,
                            Name = "EEA second threshold",
                            PolicyId = new Guid("7ba96008-c7b3-469b-9f3c-307224abbe83")
                        },
                        new
                        {
                            Id = new Guid("e1ffb995-72cb-429e-99b2-db4282da6526"),
                            Commands = "[{\"Type\":4,\"Config\":\"{\\\"reason\\\":\\\"repeating-turnover-threshold-reached\\\"}\"}]",
                            Conditions = "[{\"Type\":5,\"Value\":{\"riskLevel\":\"Low\",\"threshold\":75000,\"step\":75000}},{\"Type\":5,\"Value\":{\"riskLevel\":\"Medium\",\"threshold\":60000,\"step\":60000}},{\"Type\":5,\"Value\":{\"riskLevel\":\"High\",\"threshold\":15000,\"step\":30000}}]",
                            Iterative = true,
                            Name = "EEA repeating threshold",
                            PolicyId = new Guid("7ba96008-c7b3-469b-9f3c-307224abbe83")
                        },
                        new
                        {
                            Id = new Guid("64e483bc-20f6-4eec-9f1a-2f2363cfc861"),
                            Commands = "[{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"CF9F0CA8-6535-4F4A-B2D3-71AB075EC841\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"FinancialCondition\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.F9A2A3AC-6E98-43C9-BAB2-794E8E6DF686\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":true}}\"},{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"C1B826B7-6E0A-4AB3-813D-4393E0C0E095\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.0FB7492B-7DC5-4277-A7FF-F3D07376FF66\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":true}}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfFunds\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":0,\"Value\":\"High\"},{\"Type\":0,\"Value\":\"ExtraHigh\"}]",
                            Iterative = false,
                            Name = "GB high risk user",
                            PolicyId = new Guid("de887152-ca43-499d-8efd-6bc955b78b80")
                        },
                        new
                        {
                            Id = new Guid("044529b5-d983-4f57-8dba-16febf264052"),
                            Commands = "[{\"Type\":4,\"Config\":\"{\\\"reason\\\":\\\"first-threshold-reached\\\"}\"},{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"CF9F0CA8-6535-4F4A-B2D3-71AB075EC841\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"FinancialCondition\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.F9A2A3AC-6E98-43C9-BAB2-794E8E6DF686\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"Low\",\"threshold\":60000}},{\"Type\":4,\"Value\":{\"riskLevel\":\"Medium\",\"threshold\":30000}}]",
                            Iterative = false,
                            Name = "GB first threshold",
                            PolicyId = new Guid("de887152-ca43-499d-8efd-6bc955b78b80")
                        },
                        new
                        {
                            Id = new Guid("f623d69c-f636-4dac-923a-5be2c3779d7b"),
                            Commands = "[{\"Type\":4,\"Config\":\"{\\\"reason\\\":\\\"second-threshold-reached\\\"}\"},{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"C1B826B7-6E0A-4AB3-813D-4393E0C0E095\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Survey.0FB7492B-7DC5-4277-A7FF-F3D07376FF66\\\",\\\"isReviewNeeded\\\":false,\\\"isRequired\\\":true}}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfFunds\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"Low\",\"threshold\":75000}},{\"Type\":4,\"Value\":{\"riskLevel\":\"Medium\",\"threshold\":60000}}]",
                            Iterative = false,
                            Name = "GB second threshold",
                            PolicyId = new Guid("de887152-ca43-499d-8efd-6bc955b78b80")
                        },
                        new
                        {
                            Id = new Guid("6f762b87-112e-43c5-b311-c32cdf723d63"),
                            Commands = "[{\"Type\":4,\"Config\":\"{\\\"reason\\\":\\\"repeating-turnover-threshold-reached\\\"}\"}]",
                            Conditions = "[{\"Type\":5,\"Value\":{\"riskLevel\":\"Low\",\"threshold\":75000,\"step\":75000}},{\"Type\":5,\"Value\":{\"riskLevel\":\"Medium\",\"threshold\":60000,\"step\":60000}},{\"Type\":5,\"Value\":{\"riskLevel\":\"High\",\"threshold\":15000,\"step\":30000}}]",
                            Iterative = true,
                            Name = "GB repeating threshold",
                            PolicyId = new Guid("de887152-ca43-499d-8efd-6bc955b78b80")
                        },
                        new
                        {
                            Id = new Guid("1f50accd-f4f2-4744-8d89-9f4a27df17b1"),
                            Commands = "[{\"Type\":4,\"Config\":\"{\\\"reason\\\":\\\"pep-monthly-review-reminder\\\"}\"}]",
                            Iterative = true,
                            Name = "Pep user review reminder",
                            PolicyId = new Guid("de887152-ca43-499d-8efd-6bc955b78b80"),
                            Preconditions = "[{\"Type\":2,\"Value\":true}]",
                            Schedule = "{\"Type\":2,\"Offset\":\"30.00:00:00\",\"Value\":\"{\\\"unit\\\":\\\"Month\\\",\\\"value\\\":1}\"}"
                        },
                        new
                        {
                            Id = new Guid("139c0711-ae5d-42a5-9ce4-3de2877d4d86"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":false}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"High\",\"threshold\":400}}]",
                            Iterative = false,
                            Name = "Request PoA on first turnover threshold",
                            PolicyId = new Guid("cdee5676-5323-4a1a-8b37-fc24ec2deb73")
                        },
                        new
                        {
                            Id = new Guid("13fa5763-cd13-4c38-9586-81f6c80183cc"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"High\",\"threshold\":550}}]",
                            Iterative = false,
                            Name = "Require PoA on second turnover threshold",
                            PolicyId = new Guid("cdee5676-5323-4a1a-8b37-fc24ec2deb73")
                        },
                        new
                        {
                            Id = new Guid("651f41fe-29f9-4f2a-979d-f425377db305"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":6,\"Value\":{\"riskLevel\":\"Low\",\"limit\":\"3\",\"unit\":\"Year\"}},{\"Type\":6,\"Value\":{\"riskLevel\":\"Medium\",\"limit\":\"2\",\"unit\":\"Year\"}},{\"Type\":6,\"Value\":{\"riskLevel\":\"High\",\"limit\":\"1\",\"unit\":\"Year\"}}]",
                            Iterative = false,
                            Name = "Account age tracking",
                            PolicyId = new Guid("caed84f7-fc93-431c-8b34-56612ce52dfd"),
                            Schedule = "{\"Type\":2,\"Offset\":\"01:00:00\",\"Value\":\"{\\\"unit\\\":\\\"Day\\\",\\\"value\\\":7}\"}"
                        },
                        new
                        {
                            Id = new Guid("f7aef22c-0638-4322-97fd-e5da05918d1f"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":false}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"High\",\"threshold\":4000}}]",
                            Iterative = false,
                            Name = "Request PoA on first turnover threshold",
                            PolicyId = new Guid("caed84f7-fc93-431c-8b34-56612ce52dfd")
                        },
                        new
                        {
                            Id = new Guid("47eaa9b2-0fe0-41e0-a1e8-b502f48a9c23"),
                            Commands = "[{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"Address\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfAddress\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"High\",\"threshold\":5000}}]",
                            Iterative = false,
                            Name = "Require PoA on second turnover threshold",
                            PolicyId = new Guid("caed84f7-fc93-431c-8b34-56612ce52dfd")
                        },
                        new
                        {
                            Id = new Guid("c8c1ecf5-c784-41bb-8fad-c30cfac68918"),
                            Commands = "[{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"1673241E-BC0A-4007-A353-A2C39880BBEF\\\",\\\"addCompleted\\\":true}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfFunds\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":false}}\"},{\"Type\":4,\"Config\":\"{\\\"reason\\\":\\\"first-threshold-reached\\\"}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"Low\",\"threshold\":100000}},{\"Type\":4,\"Value\":{\"riskLevel\":\"Medium\",\"threshold\":75000}},{\"Type\":4,\"Value\":{\"riskLevel\":\"High\",\"threshold\":50000}}]",
                            Iterative = false,
                            Name = "Request PoF on third turnover threshold",
                            PolicyId = new Guid("caed84f7-fc93-431c-8b34-56612ce52dfd")
                        },
                        new
                        {
                            Id = new Guid("82cc6921-9263-442a-b022-00a8d1d5a4bf"),
                            Commands = "[{\"Type\":1,\"Config\":\"{\\\"variantId\\\":\\\"1673241E-BC0A-4007-A353-A2C39880BBEF\\\"}\"},{\"Type\":2,\"Config\":\"{\\\"taskType\\\":\\\"ProofOfFunds\\\",\\\"collectionStep\\\":{\\\"xPath\\\":\\\"Documents.ProofOfFunds\\\",\\\"isReviewNeeded\\\":true,\\\"isRequired\\\":true}}\"},{\"Type\":4,\"Config\":\"{\\\"reason\\\":\\\"second-threshold-reached\\\"}\"}]",
                            Conditions = "[{\"Type\":4,\"Value\":{\"riskLevel\":\"Low\",\"threshold\":200000}},{\"Type\":4,\"Value\":{\"riskLevel\":\"Medium\",\"threshold\":150000}},{\"Type\":4,\"Value\":{\"riskLevel\":\"High\",\"threshold\":100000}}]",
                            Iterative = false,
                            Name = "Require PoF on fourth turnover threshold",
                            PolicyId = new Guid("caed84f7-fc93-431c-8b34-56612ce52dfd")
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.ValidationPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("RegionType")
                        .HasColumnType("int")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("ValidationPolicies","Policy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b886b233-9e03-4afe-a0aa-4580adc01ef1"),
                            Region = "Global",
                            RegionType = 1
                        },
                        new
                        {
                            Id = new Guid("3accc8ef-788e-4b73-beb0-57e39bde57a6"),
                            Region = "EEA",
                            RegionType = 2
                        },
                        new
                        {
                            Id = new Guid("24adc526-8cf1-44e3-8980-5f845411d5f3"),
                            Region = "RoW",
                            RegionType = 2
                        },
                        new
                        {
                            Id = new Guid("0735076b-99d2-4f9f-a82d-370cf9456b12"),
                            Region = "APAC",
                            RegionType = 2
                        },
                        new
                        {
                            Id = new Guid("4e18c9e3-a215-4527-b626-df1b9f7bdab2"),
                            Region = "RU",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("b04a7a3c-9153-4507-8278-8c831cdc4a7f"),
                            Region = "GB",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("a0b5d0ad-2c34-413a-87ec-91c2d343b994"),
                            Region = "US",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("ee49481d-b3d6-47b0-afa2-db4de028ef97"),
                            Region = "PH",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("84d8f664-332a-4880-b942-ef1fa2707622"),
                            Region = "UA",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("f19aa3f4-9d10-4fe2-8d11-214b1de1027b"),
                            Region = "IN",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("f20795f5-36ca-4209-a20b-2ddac7563f9a"),
                            Region = "LT",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("69233213-ec1c-49e2-ae25-a9bd3016fbed"),
                            Region = "KR",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("dcfe96d5-326e-4489-850f-03af13388200"),
                            Region = "NO",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("e691c2f3-cde4-40aa-93bd-9f9b8a867b27"),
                            Region = "DK",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("150159b9-1656-4c85-903f-8f90e4cc4acc"),
                            Region = "AU",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("79d98c07-27ca-4168-8434-ef536b40c8de"),
                            Region = "NZ",
                            RegionType = 3
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.ValidationRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RuleSubject")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RuleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Validation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ValidationRules","Policy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5cbecb0b-86d7-4aa3-9361-5a0414200910"),
                            RuleSubject = "SSN",
                            RuleType = "Tin",
                            Validation = "{\"regex\":\"^(?!666|000|9\\\\d{2})\\\\d{3}(?!00)\\\\d{2}(?!0{4})\\\\d{4}$\"}"
                        },
                        new
                        {
                            Id = new Guid("b512e3ad-764e-4e78-83cc-d466354746be"),
                            RuleSubject = "ITIN",
                            RuleType = "Tin",
                            Validation = "{\"regex\":\"^(9\\\\d{2})((5[0-9]|6[0-5]|8[3-8]|9[0-2]|9[4-9])){1}\\\\d{4}$\"}"
                        },
                        new
                        {
                            Id = new Guid("9e5498a6-a9d0-461b-96d4-6d92a01ec270"),
                            RuleType = "TaxResidence",
                            Validation = "{\"allowedCountries\":[\"AF\",\"AX\",\"AL\",\"DZ\",\"AS\",\"AD\",\"AO\",\"AI\",\"AQ\",\"AG\",\"AR\",\"AM\",\"AW\",\"AC\",\"AU\",\"AT\",\"AZ\",\"BS\",\"BH\",\"BD\",\"BB\",\"BY\",\"BE\",\"BZ\",\"BJ\",\"BM\",\"BT\",\"BO\",\"BQ\",\"BA\",\"BW\",\"BV\",\"BR\",\"IO\",\"BN\",\"BG\",\"BF\",\"BI\",\"KH\",\"CM\",\"CA\",\"CV\",\"KY\",\"CF\",\"TD\",\"CL\",\"CN\",\"CX\",\"CC\",\"CO\",\"KM\",\"CG\",\"CD\",\"CK\",\"CR\",\"CI\",\"HR\",\"CU\",\"CW\",\"CY\",\"CZ\",\"DK\",\"DJ\",\"DM\",\"DO\",\"EC\",\"EG\",\"SV\",\"GQ\",\"ER\",\"EE\",\"SZ\",\"ET\",\"FK\",\"FO\",\"FJ\",\"FI\",\"FR\",\"GF\",\"PF\",\"TF\",\"GA\",\"GM\",\"GE\",\"DE\",\"GH\",\"GI\",\"GR\",\"GL\",\"GD\",\"GP\",\"GU\",\"GT\",\"GG\",\"GN\",\"GW\",\"GY\",\"HT\",\"HM\",\"VA\",\"HN\",\"HK\",\"HU\",\"IS\",\"IN\",\"ID\",\"IR\",\"IQ\",\"IE\",\"IM\",\"IL\",\"IT\",\"JM\",\"JP\",\"JE\",\"JO\",\"KZ\",\"KE\",\"KI\",\"KR\",\"XK\",\"KW\",\"KG\",\"LA\",\"LV\",\"LB\",\"LS\",\"LR\",\"LY\",\"LI\",\"LT\",\"LU\",\"MO\",\"MK\",\"MG\",\"MW\",\"MY\",\"MV\",\"ML\",\"MT\",\"MH\",\"MQ\",\"MR\",\"MU\",\"YT\",\"MX\",\"FM\",\"MD\",\"MC\",\"MN\",\"ME\",\"MS\",\"MA\",\"MZ\",\"MM\",\"NA\",\"NR\",\"NP\",\"NL\",\"NC\",\"NZ\",\"NI\",\"NE\",\"NG\",\"NU\",\"NF\",\"KP\",\"MP\",\"NO\",\"OM\",\"PK\",\"PW\",\"PS\",\"PA\",\"PG\",\"PY\",\"PE\",\"PH\",\"PN\",\"PL\",\"PT\",\"PR\",\"QA\",\"RE\",\"RO\",\"RU\",\"RW\",\"BL\",\"SH\",\"KN\",\"LC\",\"MF\",\"PM\",\"VC\",\"WS\",\"SM\",\"ST\",\"SA\",\"SN\",\"RS\",\"SC\",\"SL\",\"SG\",\"SX\",\"SK\",\"SI\",\"SB\",\"SO\",\"ZA\",\"GS\",\"SS\",\"ES\",\"LK\",\"SD\",\"SR\",\"SJ\",\"SE\",\"CH\",\"SY\",\"TW\",\"TJ\",\"TZ\",\"TH\",\"TL\",\"TG\",\"TK\",\"TO\",\"TT\",\"TA\",\"TN\",\"TR\",\"TM\",\"TC\",\"TV\",\"UG\",\"UA\",\"AE\",\"GB\",\"UM\",\"US\",\"UY\",\"UZ\",\"VU\",\"VE\",\"VN\",\"VG\",\"VI\",\"WF\",\"EH\",\"YE\",\"ZM\",\"ZW\"]}"
                        },
                        new
                        {
                            Id = new Guid("52a55d8b-5f61-4149-b52e-c901024f7f2c"),
                            RuleSubject = "W9Form",
                            RuleType = "Taxation",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"maxFileSize\":10485760,\"descriptionCode\":\"w9form\",\"documentSide\":\"Front\"}"
                        },
                        new
                        {
                            Id = new Guid("ffc18c02-804c-4684-adea-2444ea3e9a62"),
                            RuleSubject = "Photo",
                            RuleType = "Selfie",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"selfie\",\"minFileQuantity\":1,\"maxFileQuantity\":1}"
                        },
                        new
                        {
                            Id = new Guid("bf6fa364-0215-4a0e-9c03-be9edd4aa150"),
                            RuleSubject = "Video",
                            RuleType = "Selfie",
                            Validation = "{\"fileFormats\":[\"mp4\"],\"maxFileSize\":1431121,\"descriptionCode\":\"selfie\",\"minFileQuantity\":1,\"maxFileQuantity\":1}"
                        },
                        new
                        {
                            Id = new Guid("c2c64d69-2b83-49e2-912d-4d83027f3861"),
                            RuleSubject = "DriverLicense",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"drivingLicense\",\"minFileQuantity\":1,\"maxFileQuantity\":2}"
                        },
                        new
                        {
                            Id = new Guid("6da77929-3d09-473c-b707-23c0512d4c8d"),
                            RuleSubject = "InternationalPassport",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"internationalPassport\",\"minFileQuantity\":1,\"maxFileQuantity\":1}"
                        },
                        new
                        {
                            Id = new Guid("aa8c8f46-aaf5-4ea5-bbb2-f8f811da1f5c"),
                            RuleSubject = "IdentityCard",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"nationalIdentityCard\",\"minFileQuantity\":1,\"maxFileQuantity\":2}"
                        },
                        new
                        {
                            Id = new Guid("14b35fbd-71ba-4ee4-b43c-a91a9b627a1e"),
                            RuleSubject = "SocialSecurityCard",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"socialSecurityCard\",\"minFileQuantity\":1,\"maxFileQuantity\":1}"
                        },
                        new
                        {
                            Id = new Guid("bf74a96c-b036-4d70-a61f-928f7c75b055"),
                            RuleSubject = "Passport",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"passport\",\"minFileQuantity\":1,\"maxFileQuantity\":2}"
                        },
                        new
                        {
                            Id = new Guid("30f5b20e-b307-4409-a79a-dcb0d2e8894c"),
                            RuleSubject = "PassportCard",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"passport\",\"minFileQuantity\":2,\"maxFileQuantity\":2}"
                        },
                        new
                        {
                            Id = new Guid("1b42e59a-8302-481d-92c4-f70ab448c422"),
                            RuleSubject = "PostalIdentityCard",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"postalIdentityCard\",\"minFileQuantity\":1,\"maxFileQuantity\":1}"
                        },
                        new
                        {
                            Id = new Guid("5b6b1683-b74a-4335-adec-6138ac8b96de"),
                            RuleSubject = "ResidencePermit",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"residencePermit\",\"minFileQuantity\":1,\"maxFileQuantity\":2}"
                        },
                        new
                        {
                            Id = new Guid("6f108a0d-4c86-4509-9b76-1036d2014538"),
                            RuleSubject = "Visa",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"visa\",\"minFileQuantity\":1,\"maxFileQuantity\":1}"
                        },
                        new
                        {
                            Id = new Guid("bd991802-3a91-443c-bdf6-9af3e6efbe12"),
                            RuleSubject = "VoterId",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"voterId\",\"minFileQuantity\":1,\"maxFileQuantity\":1}"
                        },
                        new
                        {
                            Id = new Guid("3201df75-b356-4d0e-9b48-76aa8d12f4ce"),
                            RuleSubject = "WorkPermit",
                            RuleType = "ProofOfIdentity",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\"],\"maxFileSize\":10485760,\"descriptionCode\":\"workPermit\",\"minFileQuantity\":2,\"maxFileQuantity\":2}"
                        },
                        new
                        {
                            Id = new Guid("bf01fd37-22b1-4baf-aa72-453daa550b9c"),
                            RuleSubject = "BankStatement",
                            RuleType = "ProofOfAddress",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"maxFileSize\":10485760,\"descriptionCode\":\"bankStatement\",\"documentSide\":\"Front\"}"
                        },
                        new
                        {
                            Id = new Guid("657e332d-4c1d-467d-9491-8bc55548a73e"),
                            RuleSubject = "UtilityBill",
                            RuleType = "ProofOfAddress",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"maxFileSize\":10485760,\"descriptionCode\":\"utilityBill\",\"documentSide\":\"Front\"}"
                        },
                        new
                        {
                            Id = new Guid("201a30c0-2216-4c09-a1d5-06a5b3b5e921"),
                            RuleSubject = "TaxReturn",
                            RuleType = "ProofOfAddress",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"maxFileSize\":10485760,\"descriptionCode\":\"taxReturn\",\"documentSide\":\"Front\"}"
                        },
                        new
                        {
                            Id = new Guid("56d55a44-fe48-472b-9879-08679cdf1f4d"),
                            RuleSubject = "CouncilTax",
                            RuleType = "ProofOfAddress",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"maxFileSize\":10485760,\"descriptionCode\":\"councilTax\",\"documentSide\":\"Front\"}"
                        },
                        new
                        {
                            Id = new Guid("ea2f0788-3e72-4452-b524-45fa8404206d"),
                            RuleSubject = "CertificateOfResidency",
                            RuleType = "ProofOfAddress",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"maxFileSize\":10485760,\"descriptionCode\":\"poaCertificateOfResidency\",\"documentSide\":\"Front\"}"
                        },
                        new
                        {
                            Id = new Guid("00c6b6f4-71dd-47cb-b636-813c4ccd55c1"),
                            RuleSubject = "Other",
                            RuleType = "ProofOfAddress",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":3,\"maxFileSize\":10485760,\"descriptionCode\":\"poaOther\"}"
                        },
                        new
                        {
                            Id = new Guid("822ded63-f7ef-4277-805a-d200c7a6e9af"),
                            RuleSubject = "Other",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("4f77702a-df34-4684-af5d-8c5fd9ec1b36"),
                            RuleSubject = "Payslip",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("f4478c30-5ecd-410f-ba72-575ba268682c"),
                            RuleSubject = "LetterSalary",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("f6ede1e2-b69f-41b2-956d-db45d8dbb226"),
                            RuleSubject = "AuditedBankStatement",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("ab90f2f2-3b5d-4e74-b05f-d443f23fdcb9"),
                            RuleSubject = "CompanyAccounts",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("6c50922d-febc-4416-af3d-81f771a389dd"),
                            RuleSubject = "LetterRegulatedAccountant",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("af4b82da-22e0-4fa8-b74e-42fa285f5a43"),
                            RuleSubject = "LetterSolicitor",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("e46e49e8-7bea-4d6a-80c5-c6f556c410b0"),
                            RuleSubject = "BusinessSale",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("5d2cda7c-8b21-454a-999d-4f146ac2e5a2"),
                            RuleSubject = "DividendContract",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("31474269-ffdb-44d3-9d3f-2b3bb5c00f6c"),
                            RuleSubject = "CompanyBankStatement",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("bbe234db-476a-4a66-ac23-dbca57db4e45"),
                            RuleSubject = "InvestCertificates",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("75da945b-94c9-4975-8587-9aae38f53216"),
                            RuleSubject = "InvestBankStatement",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("5caf831e-7018-4e7e-836e-6c61fe31dc7b"),
                            RuleSubject = "InvestLetterRegulatedAccountant",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("5a2d668f-6333-4f84-88a1-75eb88897a17"),
                            RuleSubject = "ScreenshotSourceWallet",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("5e519b39-a458-4703-be2f-fe7f5948daa5"),
                            RuleSubject = "PensionStatement",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("68746bcc-737c-43a1-a84a-6d5414dd1e6f"),
                            RuleSubject = "PensionLetterRegulatedAccountant",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("f4346a26-b2f6-4efb-84de-ca4b9ac5b52e"),
                            RuleSubject = "PensionLetterAnnuityProvider",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("16340711-72e0-4b4f-8e89-e650a695810e"),
                            RuleSubject = "PensionBankStatement",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("0ef1a99b-2ac7-4423-a204-accc38774b13"),
                            RuleSubject = "PensionSavingsStatement",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("f65fe169-e581-42c3-b31f-d6041cdb29c0"),
                            RuleSubject = "DepositStatement",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("624f33b9-21e9-4e0d-81b8-f115c0e4c323"),
                            RuleSubject = "DepositEvidence",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("eb29ee6b-608f-4414-85a1-69a9146074f0"),
                            RuleSubject = "LetterDonor",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("ada3aafc-5a8b-4e47-853b-fb3324cd71e8"),
                            RuleSubject = "InvestmentContractNotes",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        },
                        new
                        {
                            Id = new Guid("21f3d70e-f290-4fce-8d0b-318a16fb19a9"),
                            RuleSubject = "CashInStatement",
                            RuleType = "ProofOfFunds",
                            Validation = "{\"fileFormats\":[\"jpg\",\"jpeg\",\"png\",\"pdf\"],\"minFileQuantity\":1,\"maxFileQuantity\":7,\"maxFileSize\":10485760,\"descriptionCode\":\"sourceOfFunds\"}"
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.VerificationPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("RegionType")
                        .HasColumnType("int")
                        .HasMaxLength(10);

                    b.Property<string>("RejectionPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegionType", "Region")
                        .IsUnique();

                    b.ToTable("Verifications","Policy");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37c6ad01-067c-4b80-976d-30a568e7b0cd"),
                            Name = "APAC verification policy",
                            Region = "APAC",
                            RegionType = 2
                        },
                        new
                        {
                            Id = new Guid("0eaae368-8acb-410b-8ec0-3ae404f49d5e"),
                            Name = "EEA verification policy",
                            Region = "EEA",
                            RegionType = 2,
                            RejectionPolicy = "{\"Conditions\":[{\"Type\":0,\"Value\":\"ExtraHigh\"}]}"
                        },
                        new
                        {
                            Id = new Guid("dc658b4f-a0eb-4c20-b296-e0d57e8da6db"),
                            Name = "GB verification policy",
                            Region = "GB",
                            RegionType = 3,
                            RejectionPolicy = "{\"Conditions\":[{\"Type\":0,\"Value\":\"ExtraHigh\"}]}"
                        },
                        new
                        {
                            Id = new Guid("5dece2a9-cdd3-4d0d-b1bc-8a164b745051"),
                            Name = "Global verification policy",
                            Region = "Global",
                            RegionType = 1
                        },
                        new
                        {
                            Id = new Guid("d5b5997e-ffc1-495d-9e98-60ccbdd6f43b"),
                            Name = "RoW verification policy",
                            Region = "RoW",
                            RegionType = 2
                        },
                        new
                        {
                            Id = new Guid("67a2b2c8-beab-4c3e-a772-19ce9380cb0e"),
                            Name = "RU verification policy",
                            Region = "RU",
                            RegionType = 3
                        },
                        new
                        {
                            Id = new Guid("4b6271bd-fde5-40f7-8701-29aa66865568"),
                            Name = "US verification policy",
                            Region = "US",
                            RegionType = 3
                        });
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.ResidenceAddress", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Line1")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Line2")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("UserId");

                    b.HasIndex("Country")
                        .HasAnnotation("SqlServer:Online", true);

                    b.ToTable("ResidenceAddresses");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.TaskCheck", b =>
                {
                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CheckId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TaskId", "CheckId");

                    b.HasIndex("CheckId");

                    b.ToTable("TaskChecks");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.TaskCollectionStep", b =>
                {
                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StepId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TaskId", "StepId");

                    b.HasIndex("StepId");

                    b.ToTable("TaskCollectionSteps");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Trigger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FiringDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("UnscheduleDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("VariantId", "ApplicationId", "State");

                    b.ToTable("Triggers");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.VerificationDetails", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ComprehensiveIndex")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdDocumentNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IdDocumentNumberType")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<bool?>("IsAdverseMedia")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIpMatched")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPep")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSanctioned")
                        .HasColumnType("bit");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("PlaceOfBirth")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("PoiIssuingCountry")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("ResolvedCountryCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("RiskLevel")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TaxResidence")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tin")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<decimal?>("Turnover")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("VerificationDetails");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.VerificationTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcceptanceCheckIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpirationReason")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<string>("Result")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VariantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Type");

                    b.HasIndex("UserId", "VariantId");

                    b.ToTable("VerificationTasks");
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.ApplicationStateChangelog", b =>
                {
                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Application", "Application")
                        .WithMany()
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.ApplicationTask", b =>
                {
                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Application", null)
                        .WithMany("RequiredTasks")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.VerificationTask", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.DocumentFile", b =>
                {
                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Document", null)
                        .WithMany("Files")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.PolicyTask", b =>
                {
                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Policy.VerificationPolicy", null)
                        .WithMany("Tasks")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Policy.TaskVariant", "TaskVariant")
                        .WithMany()
                        .HasForeignKey("TaskVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.PolicyValidationRule", b =>
                {
                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Policy.ValidationPolicy", null)
                        .WithMany("Rules")
                        .HasForeignKey("ValidationPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Policy.ValidationRule", "Rule")
                        .WithMany()
                        .HasForeignKey("ValidationRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.Policy.TaskCheckVariant", b =>
                {
                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Policy.PolicyCheckVariant", "CheckVariant")
                        .WithMany()
                        .HasForeignKey("CheckVariantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Policy.TaskVariant", null)
                        .WithMany("ChecksVariants")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.ResidenceAddress", b =>
                {
                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.PersonalDetails", null)
                        .WithOne("ResidenceAddress")
                        .HasForeignKey("WX.B2C.User.Verification.DataAccess.Entities.ResidenceAddress", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.TaskCheck", b =>
                {
                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.Check", "Check")
                        .WithMany()
                        .HasForeignKey("CheckId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.VerificationTask", null)
                        .WithMany("PerformedChecks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WX.B2C.User.Verification.DataAccess.Entities.TaskCollectionStep", b =>
                {
                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.CollectionStep", "Step")
                        .WithMany()
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WX.B2C.User.Verification.DataAccess.Entities.VerificationTask", null)
                        .WithMany("CollectionSteps")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
